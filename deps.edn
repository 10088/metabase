{:deps
 ;; !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
 ;; !!                                   PLEASE KEEP THESE ORGANIZED ALPHABETICALLY                                  !!
 ;; !!                                   AND ADD A COMMENT EXPLAINING THEIR PURPOSE                                  !!
 ;; !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
 {aleph/aleph                               {:mvn/version "0.4.6"
                                             :exclusions  [org.clojure/tools.logging]}
  amalloy/ring-buffer                       {:mvn/version "1.2.2"
                                             :exclusions  [org.clojure/clojure
                                                           org.clojure/clojurescript]}
  amalloy/ring-gzip-middleware              {:mvn/version "0.1.4"}
  bigml/histogram                           {:mvn/version "4.1.3"}
  buddy/buddy-core                          {:mvn/version "1.5.0"
                                             :exclusions  [commons-codec/commons-codec
                                                           org.bouncycastle/bcpkix-jdk15on
                                                           org.bouncycastle/bcprov-jdk15on]}
  buddy/buddy-sign                          {:mvn/version "3.0.0"}
  cheshire/cheshire                         {:mvn/version "5.10.0"}
  clj-http/clj-http                         {:mvn/version "3.10.3"
                                             :exclusions  [commons-codec/commons-codec
                                                           commons-io/commons-io
                                                           slingshot/slingshot]}
  clojurewerkz/quartzite                    {:mvn/version "2.1.0"
                                             :exclusions  [c3p0/c3p0]}
  colorize/colorize                         {:mvn/version "0.1.1"
                                             :exclusions  [org.clojure/clojure]}
  com.cemerick/friend                       {:mvn/version "0.2.3"
                                             :exclusions  [commons-codec/commons-codec
                                                           net.sourceforge.nekohtml/nekohtml
                                                           org.apache.httpcomponents/httpclient
                                                           ring/ring-core
                                                           slingshot/slingshot]}
  com.clearspring.analytics/stream          {:mvn/version "2.9.6"
                                             :exclusions  [it.unimi.dsi/fastutil org.slf4j/slf4j-api]}
  com.draines/postal                        {:mvn/version "2.0.3"}
  com.google.guava/guava                    {:mvn/version "28.2-jre"}
  com.h2database/h2                         {:mvn/version "1.4.197"}
  com.taoensso/nippy                        {:mvn/version "2.14.0"}
  commons-codec/commons-codec               {:mvn/version "1.15"}
  commons-io/commons-io                     {:mvn/version "2.8.0"}
  commons-validator/commons-validator       {:mvn/version "1.6"
                                             :exclusions  [commons-beanutils/commons-beanutils
                                                           commons-digester/commons-digester
                                                           commons-logging/commons-logging]}
  compojure/compojure                       {:mvn/version "1.6.1"
                                             :exclusions  [ring/ring-codec]}
  crypto-random/crypto-random               {:mvn/version "1.2.0"}
  dk.ative/docjure                          {:mvn/version "1.14.0"
                                             :exclusions  [org.apache.poi/poi org.apache.poi/poi-ooxml]}
  environ/environ                           {:mvn/version "1.2.0"}
  hiccup/hiccup                             {:mvn/version "1.0.5"}
  honeysql/honeysql                         {:mvn/version "1.0.461"
                                             :exclusions  [org.clojure/clojurescript]}
  instaparse/instaparse                     {:mvn/version "1.4.10"}
  io.forward/yaml                           {:mvn/version "1.0.9"
                                             :exclusions  [org.clojure/clojure
                                                           org.flatland/ordered
                                                           org.yaml/snakeyaml]}
  javax.xml.bind/jaxb-api                   {:mvn/version "2.4.0-b180830.0359"}
  joda-time/joda-time                       {:mvn/version "2.10.8"}
  kixi/stats                                {:mvn/version "0.4.4"
                                             :exclusions  [org.clojure/data.avl]}
  me.raynes/fs                              {:mvn/version "1.4.6"
                                             :exclusions  [org.apache.commons/commons-compress]}
  medley/medley                             {:mvn/version "1.3.0"}
  metabase/connection-pool                  {:mvn/version "1.1.1"}
  metabase/saml20-clj                       {:mvn/version "2.0.0"}
  metabase/throttle                         {:mvn/version "1.0.2"}
  net.cgrand/macrovich                      {:mvn/version "0.2.1"}
  net.redhogs.cronparser/cron-parser-core   {:mvn/version "3.4"
                                             :exclusions  [joda-time/joda-time org.slf4j/slf4j-api]}
  net.sf.cssbox/cssbox                      {:mvn/version "4.12"
                                             :exclusions  [org.slf4j/slf4j-api]}
  org.apache.commons/commons-compress       {:mvn/version "1.20"}
  org.apache.commons/commons-lang3          {:mvn/version "3.10"}
  org.apache.logging.log4j/log4j-1.2-api    {:mvn/version "2.13.3"}
  org.apache.logging.log4j/log4j-api        {:mvn/version "2.13.3"}
  org.apache.logging.log4j/log4j-core       {:mvn/version "2.13.3"}
  org.apache.logging.log4j/log4j-jcl        {:mvn/version "2.13.3"}
  org.apache.logging.log4j/log4j-liquibase  {:mvn/version "2.13.3"}
  org.apache.logging.log4j/log4j-slf4j-impl {:mvn/version "2.13.3"}
  org.apache.poi/poi                        {:mvn/version "5.0.0"}
  org.apache.poi/poi-ooxml                  {:mvn/version "5.0.0"
                                             :exclusions  [org.bouncycastle/bcpkix-jdk15on
                                                           org.bouncycastle/bcprov-jdk15on]}
  org.apache.sshd/sshd-core                 {:mvn/version "2.4.0"}
  org.bouncycastle/bcpkix-jdk15on           {:mvn/version "1.68"}
  org.bouncycastle/bcprov-jdk15on           {:mvn/version "1.68"}
  org.clojars.pntblnk/clj-ldap              {:mvn/version "0.0.16"}
  org.clojure/clojure                       {:mvn/version "1.10.3"}
  org.clojure/core.async                    {:mvn/version "0.4.500"
                                             :exclusions  [org.clojure/tools.reader]}
  org.clojure/core.logic                    {:mvn/version "1.0.0"}
  org.clojure/core.match                    {:mvn/version "0.3.0"}
  org.clojure/core.memoize                  {:mvn/version "1.0.236"}
  org.clojure/data.csv                      {:mvn/version "0.1.4"}
  org.clojure/java.classpath                {:mvn/version "1.0.0"}
  org.clojure/java.jdbc                     {:mvn/version "0.7.11"}
  org.clojure/java.jmx                      {:mvn/version "1.0.0"}
  org.clojure/math.combinatorics            {:mvn/version "0.1.4"}
  org.clojure/math.numeric-tower            {:mvn/version "0.0.4"}
  org.clojure/tools.logging                 {:mvn/version "1.1.0"}
  org.clojure/tools.namespace               {:mvn/version "1.0.0"}
  org.clojure/tools.trace                   {:mvn/version "0.7.10"}
  org.eclipse.jetty/jetty-server            {:mvn/version "9.4.32.v20200930"}
  org.flatland/ordered                      {:mvn/version "1.5.9"}
  org.graalvm.js/js                         {:mvn/version "21.0.0.2"}
  org.graalvm.js/js-scriptengine            {:mvn/version "21.0.0.2"}
  org.liquibase/liquibase-core              {:mvn/version "3.6.3"
                                             :exclusions  [ch.qos.logback/logback-classic]}
  org.mariadb.jdbc/mariadb-java-client      {:mvn/version "2.6.2"}
  org.postgresql/postgresql                 {:mvn/version "42.2.18"}
  org.slf4j/slf4j-api                       {:mvn/version "1.7.30"}
  org.tcrawley/dynapath                     {:mvn/version "1.1.0"}
  org.threeten/threeten-extra               {:mvn/version "1.5.0"}
  org.yaml/snakeyaml                        {:mvn/version "1.23"}
  potemkin/potemkin                         {:mvn/version "0.4.5"
                                             :exclusions  [riddley/riddley]}
  pretty/pretty                             {:mvn/version "1.0.5"}
  prismatic/schema                          {:mvn/version "1.1.12"}
  redux/redux                               {:mvn/version "0.1.4"}
  riddley/riddley                           {:mvn/version "0.2.0"}
  ring/ring-core                            {:mvn/version "1.8.1"}
  ring/ring-jetty-adapter                   {:mvn/version "1.8.1"}
  ring/ring-json                            {:mvn/version "0.5.0"}
  robdaemon/clojure.java-time               {:mvn/version "0.3.3-SNAPSHOT"}
  slingshot/slingshot                       {:mvn/version "0.12.2"}
  stencil/stencil                           {:mvn/version "0.5.0"}
  toucan/toucan                             {:mvn/version "1.15.3"
                                             :exclusions  [honeysql/honeysql
                                                           org.clojure/java.jdbc
                                                           org.clojure/tools.logging
                                                           org.clojure/tools.namespace]}
  user-agent/user-agent                     {:mvn/version "0.1.0"}
  weavejester/dependency                    {:mvn/version "0.2.1"}

  ;; dummy dependency for the Java source file(s)
  metabase/java-deps {:local/root "java"}}

 :paths
 ["src" "shared/src" "resources" "java/target/classes"]

 :aliases
 {:dev
  {:extra-deps
   {clj-http-fake/clj-http-fake {:mvn/version "1.0.3", :exclusions [slingshot/slingshot]}
    eftest/eftest               {:mvn/version "0.5.9"}
    reifyhealth/specmonstah     {:mvn/version "2.0.0"}
    ring/ring-mock              {:mvn/version "0.4.0"}
    talltale/talltale           {:mvn/version "0.5.4"}}

   :extra-paths ["dev/src" "local/src" "test" "shared/test" "test_resources"]
   :jvm-opts    ["-Dmb.run.mode=dev"
                 "-Dmb.field.filter.operators.enabled=true"
                 "-Dmb.test.env.setting=ABCDEFG"
                 "-Duser.timezone=UTC"
                 "-Duser.language=en"
                 "-XX:-OmitStackTraceInFastThrow"]}

  ;; includes test code as source paths. Run tests with clojure -X:dev:test
  :test
  { ;; we want the stuff in `test_resources` to override the stuff in `resources`, e.g. the test-specific logging config
   :replace-paths ["src" "shared/src" "test_resources" "resources" "java/target/classes"]
   :exec-fn       test-runner/run-tests
   :jvm-opts      ["-Dmb.run.mode=test"
                   "-Dmb.db.in.memory=true"
                   "-Dmb.jetty.join=false"
                   "-Dmb.field.filter.operators.enabled=true"
                   "-Dmb.api.key=test-api-key"
                   "-Dmb.jetty.port=3200" ; TODO -- figure out how to do a random port like in the old project.clj?
                   ]}

  ;; run the dev server with
  ;; clojure -M:run
  ;; clojure -M:run:drivers (include all drivers)
  ;; clojure -M:run:ee (include EE code)
  :run
  {:main-opts ["-m" "metabase.core"]
   :jvm-opts  ["-Djava.awt.headless=true" ; prevent Java icon from randomly popping up in macOS dock
               "-Dmb.jetty.port=3000"]}

  ;; alias for CI-specific options.
  :ci
  {:jvm-opts ["-Xmx2g"]}

  ;; exists for symmetry with the ee profile
  :oss
  {}

  ;; include EE source code.
  :ee
  {:extra-paths ["enterprise/backend/src"]}

  ;; Include EE tests.
  ;; for ee dev: :dev:ee:ee-dev
  ;; for ee tests: clojure -X:dev:ee:ee-dev:test
  :ee-dev
  {:extra-paths ["enterprise/backend/test"]}

  ;; for local dev -- include the drivers locally with :dev:drivers
  :drivers
  {:extra-deps
   {metabase/driver-modules {:local/root "modules/drivers"}}}

  ;; for local dev: include drivers as well as their tests.
  ;;
  ;;    clojure -X:dev:drivers:drivers-dev:test
  ;;
  ;; or
  ;;
  ;;    clojure -X:dev:ee:ee-dev:drivers:drivers-dev:test (for EE)
  :drivers-dev
  {:extra-paths
   ["modules/drivers/bigquery/test"
    "modules/drivers/druid/test"
    "modules/drivers/google/test"
    "modules/drivers/googleanalytics/test"
    "modules/drivers/mongo/test"
    "modules/drivers/oracle/test"
    "modules/drivers/presto/test"
    "modules/drivers/redshift/test"
    "modules/drivers/snowflake/test"
    "modules/drivers/sparksql/test"
    "modules/drivers/sqlite/test"
    "modules/drivers/sqlserver/test"
    "modules/drivers/vertica/test"]}}}
