{metabase.query-processor
 (schema.core
  metabase.util.i18n
  metabase.util
  metabase.query-processor.store
  metabase.query-processor.reducible
  metabase.query-processor.middleware.wrap-value-literals
  metabase.query-processor.middleware.visualization-settings
  metabase.query-processor.middleware.validate-temporal-bucketing
  metabase.query-processor.middleware.validate
  metabase.query-processor.middleware.upgrade-field-literals
  metabase.query-processor.middleware.store
  metabase.query-processor.middleware.splice-params-in-response
  metabase.query-processor.middleware.results-metadata
  metabase.query-processor.middleware.resolve-source-table
  metabase.query-processor.middleware.resolve-referenced
  metabase.query-processor.middleware.resolve-joins
  metabase.query-processor.middleware.resolve-joined-fields
  metabase.query-processor.middleware.resolve-fields
  metabase.query-processor.middleware.resolve-database-and-driver
  metabase.query-processor.middleware.reconcile-breakout-and-order-by-bucketing
  metabase.query-processor.middleware.process-userland-query
  metabase.query-processor.middleware.pre-alias-aggregations
  metabase.query-processor.middleware.permissions
  metabase.query-processor.middleware.parameters
  metabase.query-processor.middleware.optimize-temporal-filters
  metabase.query-processor.middleware.normalize-query
  metabase.query-processor.middleware.mbql-to-native
  metabase.query-processor.middleware.limit
  metabase.query-processor.middleware.large-int-id
  metabase.query-processor.middleware.format-rows
  metabase.query-processor.middleware.fetch-source-query
  metabase.query-processor.middleware.expand-macros
  metabase.query-processor.middleware.desugar
  metabase.query-processor.middleware.cumulative-aggregations
  metabase.query-processor.middleware.constraints
  metabase.query-processor.middleware.check-features
  metabase.query-processor.middleware.catch-exceptions
  metabase.query-processor.middleware.cache
  metabase.query-processor.middleware.binning
  metabase.query-processor.middleware.auto-parse-filter-values
  metabase.query-processor.middleware.auto-bucket-datetimes
  metabase.query-processor.middleware.annotate
  metabase.query-processor.middleware.add-timezone-info
  metabase.query-processor.middleware.add-source-metadata
  metabase.query-processor.middleware.add-rows-truncated
  metabase.query-processor.middleware.add-implicit-joins
  metabase.query-processor.middleware.add-implicit-clauses
  metabase.query-processor.middleware.add-dimension-projections
  metabase.query-processor.middleware.add-default-temporal-unit
  metabase.query-processor.error-type
  metabase.query-processor.context
  metabase.plugins.classloader
  metabase.mbql.util
  metabase.driver.util
  metabase.driver
  metabase.config
  clojure.tools.logging),
 io.aviso.repl
 (io.aviso.writer clojure.edn clojure.stacktrace clojure.repl clojure.main clojure.pprint io.aviso.exception),
 metabase.test.util.i18n (metabase.util.i18n.impl metabase.util.i18n clojure.test),
 metabase.query-processor.middleware.expand-macros
 (toucan.db
  schema.core
  metabase.util.schema
  metabase.util.i18n
  metabase.util
  metabase.models.segment
  metabase.models.metric
  metabase.mbql.util
  metabase.mbql.schema
  clojure.tools.logging),
 metabase.query-processor-test.remapping-test
 (toucan.db
  metabase.test
  metabase.query-processor.middleware.add-dimension-projections
  metabase.query-processor-test
  metabase.query-processor
  metabase.models.field
  clojure.test),
 metabase.models.collection.graph
 (toucan.db
  schema.core
  metabase.util.schema
  metabase.util.honeysql-extensions
  metabase.util
  metabase.models.permissions-group
  metabase.models.permissions
  metabase.models.collection-permission-graph-revision
  metabase.models.collection
  metabase.api.common
  clojure.data),
 clojure.test.check.clojure-test.assertions (clojure.test),
 potemkin.utils (clj-tuple potemkin.macros),
 metabase.automagic-dashboards.populate
 (toucan.db
  metabase.util.i18n
  metabase.query-processor.util
  metabase.models.collection
  metabase.models.card
  metabase.automagic-dashboards.filters
  metabase.api.common
  medley.core
  clojure.tools.logging
  clojure.string),
 java-time.convert (java-time.temporal java-time.properties java-time.local java-time.util java-time.core),
 aleph.http.multipart (aleph.http.encoding byte-streams clojure.core),
 metabase.models.setting.cache
 (toucan.db
  metabase.util.i18n
  metabase.util.honeysql-extensions
  metabase.util
  metabase.db.connection
  honeysql.core
  clojure.tools.logging
  clojure.java.jdbc
  clojure.core),
 metabase.driver.sql-jdbc.sync
 (potemkin
  metabase.driver.sql-jdbc.sync.interface
  metabase.driver.sql-jdbc.sync.describe-table
  metabase.driver.sql-jdbc.sync.describe-database),
 metabase.events.dependencies
 (metabase.models.metric
  metabase.models.dependency
  metabase.models.card
  metabase.events
  clojure.tools.logging
  clojure.core.async),
 metabase.api.pivots (metabase.test),
 clojure.test.check.results #{},
 robert.hooke #{},
 metabase.api.notify
 (compojure.core
  schema.core
  metabase.util.schema
  metabase.sync.sync-metadata
  metabase.sync
  metabase.models.table
  metabase.models.database
  metabase.api.common
  compojure.core),
 clojurewerkz.quartzite.jobs (clojurewerkz.quartzite.conversion),
 primitive-math #{},
 metabase.util.i18n.impl
 (potemkin.types
  metabase.plugins.classloader
  clojure.tools.reader.edn
  clojure.tools.logging
  clojure.string
  clojure.java.io),
 metabase.test.util-test
 (toucan.db metabase.util metabase.test.data metabase.test metabase.models.setting metabase.models.field clojure.test),
 metabase.test.automagic-dashboards
 (schema.core
  metabase.util.schema
  metabase.util
  metabase.test
  metabase.models
  metabase.mbql.schema
  metabase.mbql.normalize
  clojure.test),
 metabase.query-processor-test.expression-aggregations-test
 (metabase.util metabase.test metabase.query-processor-test metabase.models.metric metabase.driver clojure.test),
 kixi.stats.distribution (clojure.test.check.random kixi.stats.protocols kixi.stats.math),
 postal.stress (postal.message postal.smtp),
 java-time.potemkin.namespaces #{},
 clojure.tools.macro (clojure.string),
 metabase.models.view-log (toucan.models metabase.util metabase.models.interface),
 crypto.random (clojure.string),
 clojure.core.rrb-vector
 (clojure.core.rrb-vector.interop
  clojure.core.rrb-vector.rrbt
  clojure.core.rrb-vector.nodes
  clojure.core.rrb-vector.protocols
  clojure.core.rrb-vector.parameters),
 manifold.stream.default
 (manifold.time
  manifold.stream.core
  manifold.stream.graph
  manifold.executor
  manifold.utils
  manifold.deferred
  clojure.tools.logging),
 metabase.pulse.render.table
 (metabase.pulse.render.style metabase.pulse.render.common metabase.pulse.render.color medley.core hiccup.core),
 metabase.cmd.test-util (metabase.util.files),
 metabase.query-processor.middleware.validate-temporal-bucketing
 (metabase.util.i18n
  metabase.query-processor.store
  metabase.query-processor.error-type
  metabase.mbql.util
  clojure.set),
 metabase.sync.sync-metadata.sync-timezone-test
 (toucan.db
  metabase.util
  metabase.test
  metabase.sync.util-test
  metabase.models.database
  metabase.driver
  clojure.test
  clj-time.core),
 metabase.email
 (schema.core
  postal.support
  postal.core
  metabase.util.schema
  metabase.util.i18n
  metabase.util
  metabase.models.setting
  clojure.tools.logging),
 metabase.query-processor.async
 (schema.core
  metabase.util.i18n
  metabase.util
  metabase.query-processor.util
  metabase.query-processor.interface
  metabase.query-processor.context
  metabase.query-processor
  metabase.api.common
  clojure.tools.logging
  clojure.core.async),
 clojure.spec.alpha #{},
 clojure.tools.analyzer.jvm
 (clojure.core.memoize
  clojure.tools.reader.reader-types
  clojure.tools.reader
  clojure.java.io
  clojure.tools.analyzer.passes.jvm.emit-form
  clojure.tools.analyzer.passes.jvm.warn-on-reflection
  clojure.tools.analyzer.passes.jvm.validate-loop-locals
  clojure.tools.analyzer.passes.jvm.infer-tag
  clojure.tools.analyzer.passes.jvm.validate
  clojure.tools.analyzer.passes.jvm.classify-invoke
  clojure.tools.analyzer.passes.jvm.constant-lifter
  clojure.tools.analyzer.passes.jvm.box
  clojure.tools.analyzer.passes.jvm.analyze-host-expr
  clojure.tools.analyzer.passes.uniquify
  clojure.tools.analyzer.passes.warn-earmuff
  clojure.tools.analyzer.passes.elide-meta
  clojure.tools.analyzer.passes.trim
  clojure.tools.analyzer.passes.source-info
  clojure.tools.analyzer.jvm.utils
  clojure.tools.analyzer.passes
  clojure.tools.analyzer.env
  clojure.tools.analyzer.ast
  clojure.tools.analyzer.utils
  clojure.tools.analyzer),
 clojure.tools.reader.impl.utils #{},
 buddy.sign.util (buddy.core.codecs),
 metabase.db.metadata-queries
 (toucan.db
  schema.core
  metabase.util.schema
  metabase.util
  metabase.sync.interface
  metabase.query-processor.interface
  metabase.query-processor
  metabase.models.table
  metabase.driver.util
  metabase.driver
  clojure.tools.logging),
 cheshire.factory #{},
 metabase.sync.sync-metadata.metabase-metadata-test
 (toucan.hydrate
  toucan.db
  metabase.util
  metabase.test.mock.moviedb
  metabase.test
  metabase.sync.sync-metadata.metabase-metadata
  metabase.models.table
  metabase.models.field
  metabase.models.database
  clojure.test),
 metabase.query-processor-test.filter-test
 (metabase.test metabase.query-processor-test metabase.query-processor metabase.driver clojure.test),
 metabase.cmd.copy.h2-test (metabase.cmd.copy.h2 clojure.test),
 metabase.sync.sync-metadata.fields.sync-metadata-test
 (toucan.util.test toucan.db metabase.sync.sync-metadata.fields.sync-metadata metabase.models.table clojure.test),
 metabase.api.dashboard-test
 (toucan.db
  ring.util.codec
  metabase.util
  metabase.test
  metabase.server.middleware.util
  metabase.models.revision
  metabase.models.permissions-group
  metabase.models.permissions
  metabase.models.params.chain-filter-test
  metabase.models.dashboard-test
  metabase.models.dashboard-card
  metabase.models
  metabase.http-client
  metabase.api.dashboard
  metabase.api.card-test
  medley.core
  clojure.walk
  clojure.test
  clojure.string),
 metabase.api.geojson-test
 (schema.core
  metabase.util
  metabase.test
  metabase.server.middleware.security
  metabase.http-client
  metabase.api.geojson
  clojure.test),
 metabase.api.collection-test
 (toucan.db
  schema.core
  metabase.util
  metabase.test.fixtures
  metabase.test
  metabase.models.revision
  metabase.models.permissions-group
  metabase.models.permissions
  metabase.models.collection.graph-test
  metabase.models.collection.graph
  metabase.models.collection-test
  metabase.models.collection
  metabase.models
  metabase.api.collection
  honeysql.core
  clojure.test
  clojure.string),
 metabase.query-processor-test.page-test (metabase.test.data metabase.test metabase.query-processor-test clojure.test),
 slingshot.support (clojure.walk),
 clojure.tools.analyzer.ast (clojure.tools.analyzer.utils),
 metabase.timeseries-query-processor-test.util
 (metabase.test.data.interface metabase.test.data.dataset-definitions metabase.test),
 metabase.query-processor.middleware.optimize-temporal-filters
 (schema.core
  metabase.util.i18n
  metabase.util.date-2
  metabase.util
  metabase.mbql.util
  clojure.walk
  clojure.tools.logging),
 metabase.sync.analyze.fingerprint.insights
 (redux.core
  metabase.util.i18n
  metabase.util.date-2
  metabase.sync.util
  metabase.sync.analyze.fingerprint.fingerprinters
  metabase.models.field
  metabase.mbql.util
  medley.core
  kixi.stats.math
  kixi.stats.core
  java-time),
 metabase.mbql.util-test (metabase.types metabase.mbql.util clojure.test),
 metabase.api.testing-test
 (metabase.util metabase.test metabase.db.connection metabase.api.testing clojure.test clojure.java.io),
 metabase.query-processor.util
 (schema.core metabase.util.schema metabase.driver clojure.string cheshire.core buddy.core.hash buddy.core.codecs),
 metabase.test.data
 (metabase.util
  metabase.test.data.mbql-query-impl
  metabase.test.data.interface
  metabase.test.data.impl
  metabase.test-runner.init
  metabase.query-processor
  colorize.core
  clojure.test),
 metabase.query-processor-test.advanced-math-test
 (metabase.util metabase.test.data metabase.test metabase.query-processor-test clojure.test),
 instaparse.combinators-source (instaparse.util instaparse.reduction),
 metabase.models.collection-permission-graph-revision (toucan.models toucan.db metabase.util.i18n metabase.util),
 metabase.models.segment-test
 (toucan.db
  metabase.util
  metabase.test
  metabase.models.table
  metabase.models.segment
  metabase.models.database
  clojure.test),
 clojure.datafy (clojure.core.protocols),
 metabase.search.scoring-test (metabase.search.scoring metabase.search.config java-time clojure.test),
 metabase.models.pulse-channel-test
 (toucan.hydrate
  toucan.db
  metabase.test
  metabase.models.user
  metabase.models.pulse-channel-recipient
  metabase.models.pulse-channel
  metabase.models.pulse
  medley.core
  clojure.test),
 metabase.server.middleware.json-test (metabase.server.middleware.json clojure.test cheshire.core),
 metabase.mbql.predicates (schema.core metabase.mbql.schema),
 clojure.tools.namespace.find
 (clojure.tools.namespace.parse clojure.tools.namespace.file clojure.set clojure.java.io clojure.java.classpath),
 metabase.util.date-2-test
 (metabase.util.date-2.common
  metabase.util.date-2
  metabase.test.util.timezone
  metabase.test
  java-time
  clojure.test
  clojure.string),
 clojure.tools.analyzer.passes.uniquify
 (clojure.tools.analyzer.env clojure.tools.analyzer.utils clojure.tools.analyzer.ast),
 metabase.sync.schedules-test (metabase.sync.schedules clojure.test),
 metabase.util.ssh-test
 (metabase.util.ssh
  metabase.util
  metabase.test.util
  metabase.test.data.interface
  metabase.test
  metabase.sync
  metabase.query-processor-test
  metabase.query-processor
  metabase.models.database
  metabase.driver.sql-jdbc.connection
  clojure.tools.logging
  clojure.test
  clojure.java.io),
 clojure.tools.analyzer.passes.warn-earmuff (clojure.tools.analyzer.utils),
 metabase.query-processor.streaming.xlsx
 (metabase.util.i18n
  metabase.util.date-2
  metabase.query-processor.streaming.interface
  metabase.query-processor.streaming.common
  metabase.query-processor.error-type
  java-time
  dk.ative.docjure.spreadsheet
  cheshire.core),
 metabase.automagic-dashboards.comparison-test
 (metabase.test.automagic-dashboards
  metabase.test
  metabase.models.query
  metabase.models
  metabase.automagic-dashboards.core
  metabase.automagic-dashboards.comparison
  clojure.test),
 metabase.public-settings
 (toucan.db
  metabase.util.password
  metabase.util.i18n
  metabase.util
  metabase.public-settings.metastore
  metabase.plugins.classloader
  metabase.models.setting
  metabase.driver.util
  metabase.config
  java-time
  clojure.tools.logging
  clojure.string),
 metabase.test.data.one-off-dbs
 (toucan.util.test
  metabase.test.util
  metabase.test.data
  metabase.sync
  metabase.models.database
  metabase.db.spec
  clojure.string
  clojure.java.jdbc),
 metabase.metabot.test-util (metabase.pulse metabase.metabot.slack medley.core),
 metabase.cmd.dump-to-h2
 (toucan.db
  metabase.db.connection
  metabase.cmd.rotate-encryption-key
  metabase.cmd.copy.h2
  metabase.cmd.copy
  clojure.tools.logging),
 stencil.parser (clojure.pprint stencil.utils stencil.re-utils stencil.ast clojure.string clojure.zip scout.core),
 metabase.api.dataset-test
 (toucan.db
  schema.core
  metabase.util.schema
  metabase.util
  metabase.test.fixtures
  metabase.test.data.users
  metabase.test
  metabase.query-processor.util
  metabase.query-processor.middleware.constraints
  metabase.query-processor-test
  metabase.models.query-execution
  metabase.models.permissions-group
  metabase.models.permissions
  metabase.models.card
  metabase.mbql.schema
  metabase.http-client
  metabase.api.pivots
  medley.core
  clojure.test
  clojure.string
  clojure.data.csv
  cheshire.core),
 metabase.email-test
 (postal.message
  metabase.util
  metabase.test.util
  metabase.test.data.users
  metabase.email
  medley.core
  clojure.test
  clojure.java.io),
 clojure.core.async.impl.concurrent #{},
 honeysql.helpers #{},
 metabase.driver.sql-jdbc.connection
 (toucan.db
  metabase.util.ssh
  metabase.util.i18n
  metabase.util
  metabase.query-processor.error-type
  metabase.models.database
  metabase.driver
  metabase.connection-pool
  metabase.config
  clojure.tools.logging
  clojure.java.jdbc),
 metabase.related-test
 (metabase.test.data.one-off-dbs
  metabase.test
  metabase.sync
  metabase.related
  metabase.models
  medley.core
  clojure.test
  clojure.java.jdbc),
 manifold.stream.iterator
 (manifold.time manifold.stream.graph manifold.stream.core manifold.utils manifold.deferred clojure.tools.logging),
 metabase.pulse.render-test
 (metabase.test
  metabase.query-processor
  metabase.pulse.render
  metabase.pulse
  metabase.models.card
  metabase.mbql.util
  clojure.test),
 aleph.http.client
 (aleph.netty
  aleph.http.multipart
  aleph.http.core
  manifold.stream
  manifold.deferred
  byte-streams
  clojure.tools.logging),
 metabase.query-processor.middleware.resolve-joins
 (schema.core
  metabase.util.schema
  metabase.util.i18n
  metabase.util
  metabase.query-processor.store
  metabase.query-processor.middleware.add-implicit-clauses
  metabase.mbql.util
  metabase.mbql.schema),
 clojure.core.memoize (clojure.core.cache),
 clj-http.conn-mgr (clojure.java.io clj-http.util),
 metabase.async.api-response-test
 (schema.core
  ring.core.protocols
  metabase.test.util.async
  metabase.async.api-response
  clojure.test
  clojure.core.async
  cheshire.core),
 potemkin.types (clojure.string clojure.set riddley.walk potemkin.macros clojure.set),
 buddy.core.keys.jwk.eddsa
 (buddy.core.keys.jwk.okp buddy.core.keys.jwk.proto buddy.core.codecs.base64 buddy.core.codecs),
 clj-time.predicates (clj-time.coerce clj-time.core),
 metabase.models.card-test
 (toucan.util.test
  toucan.db
  metabase.util
  metabase.test.util
  metabase.test
  metabase.query-processor
  metabase.models.card
  metabase.models
  clojure.test
  cheshire.core),
 byte-streams.char-sequence #{},
 metabase.models.params-test
 (toucan.util.test
  toucan.hydrate
  toucan.db
  metabase.test
  metabase.models.params
  metabase.models
  metabase.api.public-test
  clojure.test),
 manifold.stream
 (manifold.stream.graph
  manifold.stream.async
  clojure.core.async
  clojure.tools.logging
  manifold.stream.deferred
  manifold.stream.seq
  manifold.stream.queue
  manifold.stream.iterator
  manifold.stream.random-access
  manifold.stream.default
  manifold.stream.core
  manifold.time
  manifold.utils
  manifold.deferred
  clojure.core),
 metabase.models.query-test (metabase.test metabase.models.query metabase.models clojure.test),
 metabase.server.routes.index
 (stencil.core
  ring.util.response
  metabase.util.i18n
  metabase.util.embed
  metabase.public-settings
  metabase.models.setting
  metabase.core.initialization-status
  hiccup.util
  clojure.tools.logging
  clojure.string
  clojure.java.io
  cheshire.core),
 metabase.sync.sync-dynamic-test
 (toucan.hydrate
  toucan.db
  metabase.util
  metabase.test.mock.toucanery
  metabase.test
  metabase.sync
  metabase.models
  clojure.test),
 buddy.core.keys.jwk.okp (cheshire.core buddy.core.hash buddy.core.keys.jwk.proto),
 metabase.query-processor-test.query-to-native-test
 (schema.core metabase.test metabase.query-processor metabase.models.permissions metabase.api.common clojure.test),
 metabase.query-processor.middleware.cumulative-aggregations-test
 (metabase.test metabase.query-processor.middleware.cumulative-aggregations clojure.test),
 metabase.query-processor.streaming-test
 (toucan.db
  metabase.util
  metabase.test
  metabase.query-processor.streaming
  metabase.query-processor
  medley.core
  dk.ative.docjure.spreadsheet
  clojure.test
  clojure.data.csv
  cheshire.core),
 metabase.query-processor.middleware.add-timezone-info-test
 (metabase.test metabase.query-processor.middleware.add-timezone-info metabase.driver clojure.test),
 metabase.util.i18n-test (metabase.util.i18n metabase.test clojure.walk clojure.test),
 metabase.models.table
 (toucan.models
  toucan.db
  metabase.util
  metabase.models.segment
  metabase.models.permissions
  metabase.models.metric
  metabase.models.interface
  metabase.models.humanization
  metabase.models.field-values
  metabase.models.field
  metabase.models.database
  metabase.driver
  metabase.db.util
  honeysql.core),
 metabase.api.embed-test
 (toucan.db
  metabase.util
  metabase.test
  metabase.query-processor.middleware.constraints
  metabase.query-processor-test
  metabase.models.permissions-group
  metabase.models.permissions
  metabase.models
  metabase.http-client
  metabase.api.public-test
  metabase.api.pivots
  metabase.api.embed
  metabase.api.dashboard-test
  dk.ative.docjure.spreadsheet
  crypto.random
  clojure.test
  clojure.string
  clojure.data.csv
  clj-time.core
  buddy.sign.util
  buddy.sign.jwt),
 metabase.server-test (metabase.server metabase.config clojure.test),
 metabase.models.humanization-test
 (toucan.util.test toucan.db metabase.test.util metabase.models.table metabase.models.humanization clojure.test),
 clj-http.client
 (ring.util.codec
  clojure.tools.reader.edn
  cheshire.core
  slingshot.slingshot
  clojure.walk
  clojure.string
  clojure.stacktrace
  clojure.java.io
  clj-http.util
  clj-http.links
  clj-http.headers
  clj-http.core
  clj-http.cookies
  clj-http.conn-mgr),
 metabase.query-processor.middleware.catch-exceptions
 (schema.utils
  metabase.util.i18n
  metabase.util
  metabase.query-processor.reducible
  metabase.query-processor.middleware.permissions
  metabase.query-processor.error-type
  metabase.query-processor.context
  clojure.tools.logging),
 metabase.models.params.field-values
 (toucan.db
  pretty.core
  potemkin
  metabase.util
  metabase.plugins.classloader
  metabase.models.interface
  metabase.models.field-values
  metabase.models.field
  clojure.tools.logging),
 metabase.driver.sql-jdbc
 (metabase.util.honeysql-extensions
  metabase.driver.sql.query-processor
  metabase.driver.sql-jdbc.sync
  metabase.driver.sql-jdbc.execute
  metabase.driver.sql-jdbc.connection
  metabase.driver.sql
  metabase.driver
  clojure.java.jdbc),
 metabase.query-processor.middleware.splice-params-in-response (metabase.driver),
 byte-streams
 (primitive-math
  clojure.java.io
  byte-streams.utils
  byte-streams.char-sequence
  byte-streams.pushback-stream
  byte-streams.protocols
  byte-streams.graph
  manifold.deferred
  manifold.stream),
 clj-http.multipart #{},
 manifold.executor (clojure.tools.logging),
 metabase.query-processor.middleware.visualization-settings-test
 (metabase.test
  metabase.shared.models.visualization-settings
  metabase.query-processor.middleware.visualization-settings
  metabase.models
  clojure.test),
 aleph.http.encoding (potemkin primitive-math byte-streams),
 toucan.models (toucan.util potemkin.types honeysql.format clojure.walk),
 clojure.reflect (clojure.string clojure.set clojure.datafy clojure.set),
 ring.util.request (ring.util.parsing),
 metabase.driver.sql-jdbc.native-test
 (schema.core
  metabase.util.schema
  metabase.test.util.log
  metabase.test.data
  metabase.query-processor
  medley.core
  clojure.test),
 metabase.sync.sync-metadata
 (schema.core
  metabase.util.i18n
  metabase.sync.util
  metabase.sync.sync-metadata.tables
  metabase.sync.sync-metadata.sync-timezone
  metabase.sync.sync-metadata.metabase-metadata
  metabase.sync.sync-metadata.fks
  metabase.sync.sync-metadata.fields
  metabase.sync.interface),
 metabase.test.data.impl
 (toucan.db
  potemkin
  metabase.util
  metabase.test.util.timezone
  metabase.test.initialize
  metabase.test.data.interface
  metabase.test.data.impl.verify
  metabase.test.data.dataset-definitions
  metabase.sync
  metabase.plugins.classloader
  metabase.models
  metabase.driver
  metabase.config
  metabase.api.common
  clojure.tools.reader.edn
  clojure.tools.logging
  clojure.string),
 clojure.tools.analyzer.env #{},
 metabase.query-processor.streaming.common
 (metabase.util.date-2 metabase.query-processor.timezone metabase.query-processor.store java-time),
 metabase.sync.analyze-test
 (toucan.util.test
  toucan.db
  metabase.util
  metabase.test.sync
  metabase.test.data
  metabase.test
  metabase.sync.sync-metadata
  metabase.sync.interface
  metabase.sync.analyze.fingerprint.fingerprinters
  metabase.sync.analyze.classifiers.text-fingerprint
  metabase.sync.analyze.classifiers.no-preview-display
  metabase.sync.analyze.classifiers.name
  metabase.sync.analyze.classifiers.category
  metabase.sync.analyze
  metabase.models.table
  metabase.models.field
  metabase.models.database
  metabase.api.table
  clojure.test),
 eftest.output-capture (clojure.string),
 metabase.driver.sql-jdbc.sync.describe-database-test
 (toucan.db
  metabase.test.data.one-off-dbs
  metabase.test
  metabase.sync
  metabase.query-processor
  metabase.models.table
  metabase.driver.sql-jdbc.sync.interface
  metabase.driver.sql-jdbc.sync.describe-database
  metabase.driver.sql-jdbc.connection
  metabase.driver
  clojure.test
  clojure.java.jdbc),
 fipp.visit (fipp.ednize fipp.util),
 clojure.core.async.impl.channels
 (clojure.core.async.impl.mutex clojure.core.async.impl.dispatch clojure.core.async.impl.protocols),
 clojure.tools.analyzer.passes.emit-form (clojure.tools.analyzer.passes.uniquify),
 manifold.stream.random-access
 (manifold.time manifold.stream.graph manifold.stream.core manifold.utils manifold.deferred clojure.tools.logging),
 clojure.core.rrb-vector.protocols #{},
 metabase.query-processor.interface #{},
 metabase.pulse.test-util
 (toucan.util.test
  metabase.util
  metabase.test.data.users
  metabase.test
  metabase.query-processor-test
  metabase.pulse
  metabase.models.pulse-card
  metabase.models.pulse
  metabase.integrations.slack
  medley.core
  clojure.walk),
 buddy.core.hash (clojure.java.io buddy.core.codecs),
 metabase.query-processor.middleware.parameters.native-test
 (schema.core
  metabase.util.schema
  metabase.util
  metabase.test
  metabase.query-processor.middleware.parameters.native
  metabase.models.card
  metabase.driver
  clojure.test),
 schema.core
 (schema.spec.collection
  schema.spec.variant
  schema.spec.leaf
  schema.spec.core
  schema.utils
  schema.macros
  clojure.string
  clojure.pprint),
 metabase.query-processor.middleware.large-int-id-test
 (metabase.test metabase.query-processor.middleware.large-int-id metabase.query-processor clojure.test),
 metabase.query-processor.middleware.format-rows
 (potemkin.types
  metabase.util.i18n
  metabase.util.date-2
  metabase.query-processor.timezone
  java-time
  clojure.tools.logging),
 metabase.cmd.rotate-encryption-key
 (toucan.db
  metabase.util.i18n
  metabase.util.encryption
  metabase.models.setting.cache
  metabase.models
  metabase.db.connection
  metabase.db
  clojure.java.jdbc
  cheshire.core),
 metabase.query-processor.streaming.csv
 (metabase.util.date-2
  metabase.query-processor.streaming.interface
  metabase.query-processor.streaming.common
  java-time
  clojure.data.csv),
 metabase.query-processor-test.time-field-test
 (metabase.test metabase.query-processor-test metabase.driver clojure.test),
 metabase.query-processor-test.aggregation-test
 (metabase.test.util
  metabase.test.data
  metabase.test
  metabase.query-processor-test
  metabase.models.field
  clojure.test),
 metabase.server.middleware.auth-test
 (toucan.util.test
  toucan.db
  ring.mock.request
  metabase.test.fixtures
  metabase.test.data.users
  metabase.test
  metabase.server.middleware.util
  metabase.server.middleware.session
  metabase.server.middleware.auth
  metabase.models.session
  java-time
  clojure.test),
 metabase.query-processor-test.count-where-test
 (metabase.test metabase.models.segment metabase.models.metric clojure.test),
 metabase.query-processor.streaming.json
 (metabase.util.date-2
  metabase.query-processor.streaming.interface
  metabase.query-processor.streaming.common
  java-time
  cheshire.core),
 metabase.shared.util #{},
 metabase.sync.sync-metadata.tables-test
 (toucan.db
  metabase.util
  metabase.test.data.interface
  metabase.test
  metabase.sync.sync-metadata.tables
  metabase.models
  clojure.test),
 metabase.config (metabase.plugins.classloader environ.core clojure.string clojure.java.io),
 clojure.zip #{},
 metabase.query-processor-test
 (toucan.db
  metabase.util
  metabase.test.util
  metabase.test.data.interface
  metabase.test.data.env
  metabase.test.data
  metabase.test-runner.init
  metabase.query-processor.middleware.add-implicit-joins
  metabase.query-processor
  metabase.models.table
  metabase.models.field
  metabase.driver.util
  metabase.driver
  medley.core
  clojure.test
  clojure.string
  clojure.set),
 taoensso.truss (taoensso.truss.impl),
 metabase.dashboard-subscription-test
 (schema.core
  metabase.util
  metabase.test
  metabase.pulse.test-util
  metabase.pulse.render.body
  metabase.pulse
  metabase.models.pulse
  metabase.models
  clojure.test),
 metabase.models.permissions-revision (toucan.models toucan.db metabase.util.i18n metabase.util),
 metabase.server.middleware.ssl
 (ring.util.response ring.util.request metabase.server.request.util metabase.public-settings clojure.string),
 metabase.connection-pool #{},
 metabase.core.initialization-status #{},
 dynapath.dynamic-classpath #{},
 metabase.query-processor.middleware.auto-bucket-datetimes-test
 (metabase.util
  metabase.test
  metabase.query-processor.middleware.auto-bucket-datetimes
  metabase.models.field
  clojure.test),
 metabase.query-processor.middleware.upgrade-field-literals-test
 (metabase.test metabase.query-processor.middleware.upgrade-field-literals metabase.query-processor clojure.test),
 metabase.shared.models.visualization-settings
 (metabase.mbql.normalize medley.core clojure.spec.alpha clojure.set cheshire.core),
 manifold.stream.async
 (manifold.utils manifold.executor manifold.stream.core manifold.stream.graph clojure.core.async manifold.deferred),
 metabase.metabot.websocket
 (throttle.core
  metabase.util.i18n
  metabase.util
  metabase.metabot.instance
  metabase.metabot.events
  metabase.integrations.slack
  manifold.stream
  manifold.deferred
  clojure.tools.logging
  aleph.http),
 metabase.models.params.chain-filter
 (toucan.db
  schema.core
  metabase.util.schema
  metabase.util.i18n
  metabase.util
  metabase.types
  metabase.query-processor
  metabase.models.table
  metabase.models.params.field-values
  metabase.models.params.chain-filter.dedupe-joins
  metabase.models.params
  metabase.models.field-values
  metabase.models.field
  metabase.models
  metabase.mbql.util
  metabase.driver.common.parameters.dates
  metabase.db.util
  honeysql.format
  honeysql.core
  clojure.tools.logging
  clojure.string
  clojure.set
  clojure.core.memoize),
 buddy.core.mac (clojure.java.io buddy.core.bytes buddy.core.hash buddy.core.codecs),
 metabase.api.setup-test
 (toucan.db
  schema.core
  metabase.util.schema
  metabase.util
  metabase.test.fixtures
  metabase.test
  metabase.setup
  metabase.public-settings
  metabase.models.setting.cache-test
  metabase.models.setting
  metabase.models
  metabase.integrations.slack
  metabase.http-client
  metabase.events
  metabase.email
  metabase.api.setup
  medley.core
  clojure.test
  clojure.core.async),
 metabase.models.metric
 (toucan.models
  toucan.hydrate
  toucan.db
  schema.core
  metabase.util.schema
  metabase.util.i18n
  metabase.util
  metabase.models.revision
  metabase.models.interface
  metabase.models.dependency
  metabase.mbql.util
  medley.core),
 metabase.driver.sql-jdbc.sync.describe-table-test
 (metabase.test
  metabase.models.table
  metabase.driver.sql-jdbc.sync.interface
  metabase.driver.sql-jdbc.sync.describe-table
  metabase.driver
  clojure.test
  clojure.string
  clojure.java.jdbc),
 pjstadig.util (pjstadig.print clojure.pprint clojure.test),
 metabase.models.collection.graph-test
 (toucan.util.test
  toucan.db
  schema.core
  metabase.util.schema
  metabase.util
  metabase.test.fixtures
  metabase.test
  metabase.models.permissions-group
  metabase.models.permissions
  metabase.models.collection.graph
  metabase.models.collection-permission-graph-revision
  metabase.models.collection
  metabase.models
  metabase.api.common
  medley.core
  clojure.test
  clojure.java.jdbc),
 clojure.data.priority-map #{},
 metabase.db.liquibase-test
 (metabase.test
  metabase.driver.sql-jdbc.connection
  metabase.db.liquibase
  clojure.test
  clojure.string
  clojure.java.jdbc),
 metabase.driver.sql.util.unprepare-test
 (metabase.util.date-2
  metabase.driver.sql.util.unprepare
  metabase.driver.sql
  metabase.driver
  java-time
  clojure.test
  clojure.string),
 metabase.metabot.instance-test (metabase.util.date-2 metabase.metabot.instance clojure.test),
 metabase.util.regex (clojure.string),
 clojurewerkz.quartzite.conversion #{},
 metabase.mbql.util.match (net.cgrand.macrovich metabase.mbql.util.match.impl clojure.walk clojure.core.match),
 clojurewerkz.quartzite.scheduler
 (clojurewerkz.quartzite.conversion clojurewerkz.quartzite.triggers clojurewerkz.quartzite.jobs),
 metabase.events.view-log
 (toucan.db metabase.models.view-log metabase.events clojure.tools.logging clojure.core.async),
 metabase.query-processor.async-test
 (metabase.test.util.async metabase.test metabase.query-processor.async clojure.test),
 java-time.local
 (java-time.defconversion java-time.clock java-time.format java-time.temporal java-time.properties java-time.core),
 metabase.driver.sql-jdbc.connection-test
 (metabase.util
  metabase.test.fixtures
  metabase.test.data
  metabase.test
  metabase.models.database
  metabase.driver.util
  metabase.driver.sql-jdbc.test-util
  metabase.driver.sql-jdbc.connection
  metabase.driver
  metabase.db.spec
  clojure.test
  clojure.java.jdbc),
 metabase.task.send-pulses-test
 (metabase.test
  metabase.task.send-pulses
  metabase.pulse.test-util
  metabase.models.pulse-channel-recipient
  metabase.models.pulse-channel
  metabase.models.pulse-card
  metabase.models.pulse
  metabase.models.card
  metabase.email-test
  metabase.email
  clojure.test),
 clojure.tools.analyzer.passes.trim (clojure.tools.analyzer.ast clojure.tools.analyzer.passes.elide-meta),
 metabase.models.interface
 (toucan.models
  taoensso.nippy
  schema.core
  potemkin.types
  metabase.util.i18n
  metabase.util.encryption
  metabase.util.cron
  metabase.util
  metabase.plugins.classloader
  metabase.mbql.schema
  metabase.mbql.normalize
  metabase.db.connection
  clojure.walk
  clojure.tools.logging
  clojure.core.memoize
  cheshire.core),
 clojure.tools.analyzer.passes.jvm.analyze-host-expr
 (clojure.tools.analyzer.jvm.utils clojure.tools.analyzer.utils clojure.tools.analyzer),
 metabase.query-processor.middleware.add-implicit-joins
 (toucan.db
  metabase.util.i18n
  metabase.util
  metabase.query-processor.store
  metabase.query-processor.middleware.add-implicit-clauses
  metabase.query-processor.error-type
  metabase.models.table
  metabase.models.field
  metabase.mbql.util
  metabase.driver
  metabase.db.util
  medley.core
  clojure.set),
 metabase.driver.sql-jdbc.execute.diagnostic #{},
 metabase.test.data.impl.verify
 (toucan.db
  metabase.util
  metabase.test.data.interface
  metabase.query-processor
  metabase.models
  metabase.driver
  clojure.tools.logging),
 metabase.transforms.specs
 (schema.core
  schema.coerce
  metabase.util.yaml
  metabase.util.schema
  metabase.util
  metabase.mbql.util
  metabase.mbql.schema
  metabase.mbql.normalize
  metabase.domain-entities.specs
  medley.core),
 metabase.models.field-values-test
 (toucan.db
  metabase.util
  metabase.test
  metabase.sync
  metabase.models.table
  metabase.models.field-values
  metabase.models.field
  metabase.models.database
  metabase.db.metadata-queries
  clojure.test
  clojure.string
  clojure.java.jdbc
  cheshire.core),
 java-time.seqs #{},
 postal.date #{},
 metabase.async.streaming-response-test
 (metabase.util
  metabase.test
  metabase.query-processor.context
  metabase.models
  metabase.http-client
  metabase.driver
  metabase.async.streaming-response.thread-pool
  metabase.async.streaming-response
  clojure.test
  clojure.core.async
  clj-http.client),
 metabase.query-processor.middleware.parameters.native (metabase.driver clojure.set),
 metabase.server.middleware.log-test (metabase.server.middleware.log clojure.test),
 metabase.models.setting-test
 (toucan.db
  metabase.util.i18n
  metabase.util.encryption-test
  metabase.util
  metabase.test.util
  metabase.test.fixtures
  metabase.test
  metabase.models.setting.cache
  metabase.models.setting
  medley.core
  environ.core
  clojure.test),
 metabase.models.field-values
 (toucan.models
  toucan.db
  schema.core
  metabase.util.schema
  metabase.util.i18n
  metabase.util
  metabase.plugins.classloader
  clojure.tools.logging),
 metabase.test.util.async (clojure.core.async),
 metabase.models.task-history-test
 (toucan.db metabase.util metabase.test metabase.models.task-history java-time clojure.test),
 schema.macros (schema.utils clojure.string),
 eftest.report (clojure.test clojure.java.io),
 metabase.pulse.render
 (schema.core
  metabase.util.urls
  metabase.util.i18n
  metabase.types
  metabase.pulse.render.style
  metabase.pulse.render.png
  metabase.pulse.render.image-bundle
  metabase.pulse.render.common
  metabase.pulse.render.body
  hiccup.core
  clojure.tools.logging),
 metabase.models.query
 (toucan.models
  toucan.db
  metabase.util.honeysql-extensions
  metabase.util
  metabase.mbql.normalize
  metabase.db
  cheshire.core),
 metabase.query-processor.middleware.limit-test
 (metabase.test metabase.query-processor.middleware.limit metabase.query-processor.interface clojure.test),
 metabase.mbql.schema-test (schema.core metabase.mbql.schema clojure.test),
 metabase.models.collection
 (toucan.models
  toucan.hydrate
  toucan.db
  schema.core
  potemkin
  metabase.util.schema
  metabase.util.i18n
  metabase.util.honeysql-extensions
  metabase.util
  metabase.public-settings.metastore
  metabase.models.permissions
  metabase.models.interface
  metabase.models.collection.root
  metabase.api.common
  honeysql.core
  clojure.tools.logging
  clojure.string
  clojure.core.memoize),
 metabase.async.api-response
 (ring.util.response
  ring.core.protocols
  metabase.util.i18n
  metabase.util
  metabase.server.middleware.exceptions
  compojure.response
  clojure.tools.logging
  clojure.java.io
  clojure.core.async
  cheshire.core),
 metabase.query-processor-test.timezones-test
 (toucan.db
  metabase.util.honeysql-extensions
  metabase.test.data.sql
  metabase.test
  metabase.query-processor
  metabase.models
  metabase.driver.sql.query-processor
  metabase.driver
  java-time
  honeysql.core
  clojure.test
  clojure.set),
 metabase.driver.common.parameters.values
 (toucan.db
  schema.core
  metabase.util.schema
  metabase.util.i18n
  metabase.query-processor.error-type
  metabase.query-processor
  metabase.models.native-query-snippet
  metabase.models.field
  metabase.models.card
  metabase.driver.common.parameters
  clojure.tools.logging
  clojure.string),
 metabase.models.query.permissions-test
 (metabase.util
  metabase.test
  metabase.query-processor.test-util
  metabase.models.table
  metabase.models.query.permissions
  metabase.models.permissions-group
  metabase.models.permissions
  metabase.models.interface
  metabase.models.field
  metabase.models.database
  metabase.models.collection
  metabase.models.card
  metabase.mbql.schema
  metabase.api.common
  clojure.test),
 potemkin.macros (riddley.walk potemkin.walk),
 java-time.amount
 (java-time.defconversion
  java-time.convert
  java-time.properties
  java-time.util
  java-time.local
  java-time.core
  clojure.string),
 metabase.task.sync-databases
 (toucan.db
  schema.core
  metabase.util.schema
  metabase.util.i18n
  metabase.util.cron
  metabase.util
  metabase.task
  metabase.sync.sync-metadata
  metabase.sync.schedules
  metabase.sync.field-values
  metabase.sync.analyze
  metabase.models.database
  java-time
  clojurewerkz.quartzite.triggers
  clojurewerkz.quartzite.schedule.cron
  clojurewerkz.quartzite.jobs
  clojurewerkz.quartzite.conversion
  clojure.tools.logging),
 instaparse.line-col (instaparse.util instaparse.transform),
 clojure.tools.reader.impl.commons
 (clojure.tools.reader.impl.utils clojure.tools.reader.impl.errors clojure.tools.reader.reader-types),
 clojure.stacktrace #{},
 clojure.test.check.impl #{},
 metabase.models.pulse-card-test
 (toucan.util.test
  metabase.models.pulse-card
  metabase.models.pulse
  metabase.models.dashboard-card
  metabase.models.dashboard
  metabase.models.card
  clojure.test),
 metabase.db.jdbc-protocols
 (metabase.util.date-2 metabase.db.connection java-time clojure.tools.logging clojure.string clojure.java.jdbc),
 metabase.models.metric-test
 (toucan.db
  metabase.util
  metabase.test
  metabase.models.table
  metabase.models.metric
  metabase.models.database
  clojure.test),
 metabase.query-processor.middleware.resolve-joins-test
 (metabase.test
  metabase.query-processor.test-util
  metabase.query-processor.store
  metabase.query-processor.middleware.resolve-joins
  metabase.query-processor
  metabase.models
  clojure.test),
 taoensso.nippy.compression (taoensso.encore),
 metabase.public-settings.metastore
 (toucan.db
  schema.core
  metabase.util.schema
  metabase.util.i18n
  metabase.util
  metabase.models.setting
  metabase.config
  environ.core
  clojure.tools.logging
  clojure.string
  clojure.core.memoize
  clj-http.client
  cheshire.core),
 metabase.util.encryption-test
 (metabase.util.encryption
  metabase.test.util
  metabase.test.initialize
  metabase.models.setting.cache
  clojure.test
  clojure.string),
 metabase.server.middleware.session
 (toucan.db
  schema.core
  ring.util.response
  metabase.util.i18n
  metabase.util
  metabase.server.request.util
  metabase.public-settings
  metabase.models.user
  metabase.models.session
  metabase.driver.sql.query-processor
  metabase.db
  metabase.core.initialization-status
  metabase.config
  metabase.api.common
  honeysql.core
  clojure.tools.logging
  clojure.java.jdbc),
 java-time.defconversion (clj-tuple java-time.graph),
 metabase.query-processor.middleware.desugar-test
 (metabase.test metabase.query-processor.middleware.desugar clojure.test),
 metabase.automagic-dashboards.visualization-macros #{},
 metabase.driver.impl-test
 (metabase.test.util.async metabase.driver.impl metabase.driver clojure.test clojure.core.async),
 metabase.models.dimension (toucan.models metabase.util),
 postal.support (clojure.java.io),
 redux.core (redux.utils),
 puget.dispatch (clojure.string),
 metabase.db.data-migrations-test
 (toucan.db
  metabase.util.password
  metabase.util
  metabase.test.fixtures
  metabase.test
  metabase.models.user
  metabase.models.pulse
  metabase.models.permissions-group
  metabase.models.permissions
  metabase.models.database
  metabase.models.dashboard-card
  metabase.models.dashboard
  metabase.models.collection
  metabase.models.card
  metabase.db.data-migrations
  medley.core
  clojure.test
  clojure.set
  cheshire.core),
 instaparse.print (clojure.string),
 metabase.sync.schedules (schema.core metabase.util.schema metabase.util.cron),
 metabase.api.user-test
 (toucan.hydrate
  toucan.db
  schema.core
  metabase.util.i18n
  metabase.util
  metabase.test.fixtures
  metabase.test
  metabase.server.middleware.util
  metabase.models.user-test
  metabase.models.user
  metabase.models.permissions-group-membership
  metabase.models.permissions-group
  metabase.models.collection
  metabase.http-client
  clojure.test),
 fipp.engine (fipp.deque),
 metabase.models.task-history
 (toucan.models
  toucan.db
  schema.core
  metabase.util.schema
  metabase.util.i18n
  metabase.util
  metabase.models.interface
  java-time
  clojure.tools.logging
  cheshire.generate),
 metabase.util.regex-test (metabase.util.regex clojure.test),
 metabase.models.dashboard-test
 (toucan.util.test
  toucan.db
  metabase.util
  metabase.test.util
  metabase.test.data.users
  metabase.test.data
  metabase.test
  metabase.models.user
  metabase.models.table
  metabase.models.pulse-card
  metabase.models.pulse
  metabase.models.permissions
  metabase.models.interface
  metabase.models.database
  metabase.models.dashboard-card-series
  metabase.models.dashboard-card
  metabase.models.dashboard
  metabase.models.collection
  metabase.models.card
  metabase.automagic-dashboards.core
  metabase.api.common
  clojure.test),
 buddy.core.keys.jwk.rsa
 (cheshire.core buddy.core.hash buddy.core.keys.jwk.proto buddy.core.codecs buddy.core.codecs.base64),
 metabase.query-processor.middleware.parameters-test
 (schema.core
  metabase.util.schema
  metabase.util
  metabase.test
  metabase.query-processor.middleware.parameters
  metabase.models.native-query-snippet
  metabase.models.card
  metabase.mbql.normalize
  metabase.driver
  clojure.test),
 metabase.query-processor-test.sum-where-test
 (metabase.test metabase.models.segment metabase.models.metric clojure.test),
 metabase.query-processor.middleware.pre-alias-aggregations
 (metabase.query-processor.middleware.annotate metabase.mbql.util metabase.driver),
 metabase.models.native-query-snippet.permissions (pretty.core potemkin.types clojure.tools.logging),
 clojure.test.check.rose-tree (clojure.core),
 metabase.cmd.reset-password (toucan.db metabase.util.i18n metabase.util metabase.models.user metabase.db),
 metabase.api.automagic-dashboards-test
 (toucan.util.test
  metabase.transforms.specs
  metabase.transforms.materialize
  metabase.transforms.core
  metabase.test.transforms
  metabase.test.fixtures
  metabase.test.domain-entities
  metabase.test.automagic-dashboards
  metabase.test
  metabase.query-processor
  metabase.models.permissions-group
  metabase.models.permissions
  metabase.models
  metabase.automagic-dashboards.core
  clojure.test),
 clojure.tools.reader.impl.errors (clojure.tools.reader.impl.inspect clojure.tools.reader.reader-types),
 metabase.util.ssh (metabase.util metabase.public-settings metabase.driver clojure.tools.logging),
 instaparse.reduction (instaparse.util instaparse.auto-flatten-seq),
 metabase.query-processor.streaming.json-test (metabase.query-processor.streaming.json clojure.test),
 metabase.metabot.instance
 (toucan.db
  metabase.util.i18n
  metabase.util
  metabase.models.setting
  metabase.config
  java-time
  honeysql.core
  clojure.tools.logging),
 metabase.query-processor-test.explicit-joins-test
 (metabase.test.data.interface
  metabase.test
  metabase.query-processor.test-util
  metabase.query-processor-test.timezones-test
  metabase.query-processor
  metabase.models
  metabase.driver
  clojure.test
  clojure.set),
 metabase.api.embed
 (compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  toucan.db
  schema.core
  metabase.util.schema
  metabase.util.i18n
  metabase.util.embed
  metabase.util
  metabase.query-processor.pivot
  metabase.query-processor.middleware.constraints
  metabase.query-processor
  metabase.models.dashboard-card
  metabase.models.dashboard
  metabase.models.card
  metabase.driver.common.parameters
  metabase.api.public
  metabase.api.dataset
  metabase.api.dashboard
  metabase.api.common
  medley.core
  compojure.core
  clojure.tools.logging
  clojure.string
  clojure.set),
 byte-streams.protocols (byte-streams.utils),
 metabase.pulse.render.js-engine (metabase.util),
 metabase.db.schema-migrations-test.impl
 (toucan.db
  metabase.util
  metabase.test.initialize
  metabase.test.data.interface
  metabase.test
  metabase.driver.sql-jdbc.connection
  metabase.driver
  metabase.db.liquibase
  metabase.db
  clojure.tools.logging
  clojure.test
  clojure.java.jdbc),
 toucan.util (clojure.string),
 clojure.tools.analyzer.passes.jvm.constant-lifter
 (clojure.tools.analyzer.passes.elide-meta
  clojure.tools.analyzer.passes.jvm.analyze-host-expr
  clojure.tools.analyzer.utils
  clojure.tools.analyzer
  clojure.tools.analyzer.passes.constant-lifter),
 clojure.java.jdbc (clojure.walk clojure.string clojure.set),
 metabase.test.mock.util #{},
 metabase.db.data-migrations
 (toucan.models
  toucan.db
  metabase.util.i18n
  metabase.util
  metabase.public-settings
  metabase.models.user
  metabase.models.setting
  metabase.models.pulse
  metabase.models.permissions-group-membership
  metabase.models.permissions-group
  metabase.models.permissions
  metabase.models.humanization
  metabase.models.field
  metabase.models.database
  metabase.models.dashboard-card
  metabase.models.dashboard
  metabase.models.collection
  metabase.models.card
  metabase.mbql.schema
  metabase.db.util
  medley.core
  clojure.walk
  clojure.tools.logging
  cheshire.core
  cemerick.friend.credentials),
 metabase.mbql.util
 (metabase.util.i18n
  metabase.util.i18n
  metabase.util.i18n
  schema.core
  potemkin
  metabase.shared.util.i18n
  metabase.mbql.util.match
  metabase.mbql.schema.helpers
  metabase.mbql.schema
  clojure.string),
 buddy.sign.jws
 (cheshire.core
  clojure.string
  buddy.util.ecdsa
  buddy.sign.util
  buddy.core.dsa
  buddy.core.mac
  buddy.core.codecs.base64
  buddy.core.codecs),
 metabase.models.revision.diff (clojure.string clojure.core.match),
 metabase.sync.fetch-metadata (schema.core metabase.sync.interface metabase.driver.util metabase.driver),
 metabase.models.metric-important-field (toucan.models metabase.util metabase.models.interface),
 metabase.server
 (ring.util.servlet
  ring.adapter.jetty
  metabase.util.i18n
  metabase.util
  metabase.server.protocols
  metabase.config
  medley.core
  clojure.tools.logging
  clojure.string
  clojure.core),
 java-time.joda (java-time.defconversion java-time.temporal java-time.zone java-time.local java-time.util),
 metabase.query-processor.middleware.resolve-fields
 (metabase.util.i18n
  metabase.util
  metabase.query-processor.store
  metabase.query-processor.error-type
  metabase.mbql.util),
 metabase.query-processor.middleware.optimize-temporal-filters-test
 (metabase.util.date-2
  metabase.test
  metabase.query-processor.middleware.optimize-temporal-filters
  metabase.query-processor
  metabase.driver
  java-time
  clojure.test
  clojure.string),
 java-time.clock (java-time.core),
 ring.util.codec (clojure.string),
 quoin.map-access #{},
 metabase.query-processor.middleware.add-source-metadata-test
 (metabase.util
  metabase.test
  metabase.query-processor.middleware.add-source-metadata
  metabase.query-processor
  metabase.driver
  clojure.test
  clojure.string),
 metabase.models.permissions-group
 (toucan.models
  toucan.db
  metabase.util.i18n
  metabase.util
  metabase.plugins.classloader
  metabase.models.setting
  metabase.db.connection
  clojure.tools.logging
  clojure.string),
 metabase.task.sync-databases-test
 (toucan.db
  metabase.util.cron
  metabase.util
  metabase.test.util
  metabase.test
  metabase.task.sync-databases
  metabase.sync.schedules
  metabase.models.database
  java-time
  clojure.test
  clojure.string),
 metabase.db.env-test (metabase.db.env clojure.test),
 compojure.response (ring.util.response ring.util.mime-type),
 pretty.core (clojure.pprint),
 taoensso.nippy.encryption (taoensso.nippy.crypto taoensso.encore),
 metabase.util.files (metabase.util.i18n metabase.util clojure.tools.logging clojure.string clojure.java.io),
 buddy.sign.jwe.cek (buddy.core.keys buddy.core.nonce buddy.core.codecs),
 metabase.cmd.copy.h2
 (metabase.util.i18n metabase.util metabase.db.spec clojure.tools.logging clojure.string clojure.java.io),
 metabase.models.session-test
 (toucan.models toucan.db metabase.test metabase.server.middleware.misc metabase.models.session clojure.test),
 metabase.test
 (toucan.util.test
  toucan.db
  potemkin
  pjstadig.humane-test-output
  metabase.util
  metabase.test.util.timezone
  metabase.test.util.log
  metabase.test.util.i18n
  metabase.test.util.async
  metabase.test.util
  metabase.test.redefs
  metabase.test.initialize
  metabase.test.data.users
  metabase.test.data.interface
  metabase.test.data.impl
  metabase.test.data.env
  metabase.test.data.datasets
  metabase.test.data
  metabase.test-runner.parallel
  metabase.test-runner.init
  metabase.server.middleware.session
  metabase.query-processor.test-util
  metabase.query-processor.reducible
  metabase.query-processor.context
  metabase.query-processor-test
  metabase.query-processor
  metabase.plugins.classloader
  metabase.http-client
  metabase.email-test
  metabase.driver.sql-jdbc.test-util
  metabase.driver
  medley.core
  java-time
  environ.core
  clojure.tools.macro
  clojure.test
  clojure.data),
 aleph.netty
 (potemkin
  clojure.set
  clojure.string
  primitive-math
  manifold.stream.core
  manifold.stream
  manifold.deferred
  clojure.tools.logging
  byte-streams),
 metabase.api.setting-test (metabase.test.fixtures metabase.test metabase.models.setting-test clojure.test),
 metabase.query-processor.middleware.normalize-query
 (metabase.util metabase.query-processor.error-type metabase.mbql.normalize clojure.tools.logging),
 metabase.query-processor.middleware.pre-alias-aggregations-test
 (metabase.test.data
  metabase.driver.sql
  metabase.test
  metabase.query-processor.middleware.pre-alias-aggregations
  metabase.driver
  clojure.test),
 metabase.api.pulse
 (compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  toucan.hydrate
  toucan.db
  schema.core
  metabase.util.urls
  metabase.util.schema
  metabase.util.i18n
  metabase.util
  metabase.query-processor.middleware.permissions
  metabase.query-processor
  metabase.pulse.render
  metabase.pulse
  metabase.plugins.classloader
  metabase.models.pulse-channel-recipient
  metabase.models.pulse-channel
  metabase.models.pulse
  metabase.models.interface
  metabase.models.dashboard
  metabase.models.collection
  metabase.models.card
  metabase.integrations.slack
  metabase.events
  metabase.email
  metabase.api.common
  hiccup.core
  compojure.core
  clojure.tools.logging),
 metabase.driver.sql-jdbc.sync.describe-database
 (metabase.util.honeysql-extensions
  metabase.driver.sql.query-processor
  metabase.driver.sql-jdbc.sync.interface
  metabase.driver.sql-jdbc.sync.common
  metabase.driver.sql-jdbc.execute
  metabase.driver.sql-jdbc.connection
  metabase.driver
  clojure.string
  clojure.java.jdbc),
 metabase.query-processor-test.implicit-joins-test (metabase.test metabase.driver clojure.test),
 eftest.report.pretty
 (clojure.string
  eftest.report
  eftest.output-capture
  fipp.engine
  puget.printer
  io.aviso.repl
  io.aviso.exception
  io.aviso.ansi
  clojure.data
  clojure.test),
 metabase.sync.analyze
 (toucan.db
  schema.core
  metabase.util.i18n
  metabase.util
  metabase.sync.util
  metabase.sync.interface
  metabase.sync.analyze.fingerprint
  metabase.sync.analyze.classify
  metabase.models.field
  clojure.tools.logging),
 clojure.core.reducers (clojure.walk),
 metabase.api.alert-test
 (toucan.util.test
  toucan.db
  metabase.util
  metabase.test.util
  metabase.test.mock.util
  metabase.test.data.users
  metabase.test
  metabase.server.middleware.util
  metabase.models.pulse-test
  metabase.models.pulse
  metabase.models.permissions-group
  metabase.models.permissions
  metabase.models
  metabase.http-client
  metabase.email-test
  medley.core
  clojure.test),
 metabase.async.util-test (metabase.test.util.async metabase.async.util clojure.test clojure.core.async),
 metabase.query-processor.middleware.validate (metabase.mbql.schema),
 metabase.api.field
 (compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  toucan.hydrate
  toucan.db
  schema.core
  metabase.util.schema
  metabase.util.i18n
  metabase.util
  metabase.types
  metabase.server.middleware.offset-paging
  metabase.related
  metabase.query-processor
  metabase.models.table
  metabase.models.permissions
  metabase.models.params.field-values
  metabase.models.interface
  metabase.models.field-values
  metabase.models.field
  metabase.models.dimension
  metabase.db.metadata-queries
  metabase.api.common
  compojure.core
  clojure.tools.logging),
 metabase.models.revision.diff-test (metabase.models.revision.diff clojure.test clojure.data),
 metabase.server.middleware.util #{},
 hiccup.compiler (hiccup.util),
 metabase.pulse.render.body
 (schema.core
  metabase.util.i18n
  metabase.types
  metabase.pulse.render.table
  metabase.pulse.render.style
  metabase.pulse.render.sparkline
  metabase.pulse.render.image-bundle
  metabase.pulse.render.datetime
  metabase.pulse.render.common
  metabase.pulse.render.color
  medley.core
  hiccup.core
  clojure.string
  cheshire.core),
 metabase.query-processor-test.native-test
 (metabase.test metabase.query-processor-test metabase.query-processor clojure.test),
 metabase.util.date-2
 (schema.core
  potemkin.types
  metabase.util.i18n
  metabase.util.date-2.parse
  metabase.util.date-2.common
  java-time.core
  java-time
  clojure.tools.logging
  clojure.string),
 schema.spec.collection (schema.spec.core schema.utils schema.macros),
 java-time.graph (java-time.util java-time.potemkin.util clj-tuple clojure.string clojure.set),
 metabase.query-processor.middleware.add-default-temporal-unit-test
 (metabase.test metabase.query-processor.middleware.add-default-temporal-unit clojure.test),
 metabase.util.schema
 (schema.utils
  schema.macros
  schema.core
  metabase.util.password
  metabase.util.i18n
  metabase.util
  metabase.types
  medley.core
  clojure.walk
  clojure.string
  cheshire.core),
 metabase.api.permissions-test
 (schema.core
  metabase.util.schema
  metabase.util
  metabase.test.fixtures
  metabase.test
  metabase.models.table
  metabase.models.permissions-group
  metabase.models.permissions
  metabase.models.database
  metabase.api.permissions
  clojure.test),
 metabase.query-processor.middleware.binning-test
 (metabase.util
  metabase.test
  metabase.query-processor.middleware.binning
  metabase.models.field
  metabase.models.card
  clojure.test),
 metabase.driver
 (toucan.db
  schema.core
  potemkin
  metabase.util.schema
  metabase.util.i18n
  metabase.plugins.classloader
  metabase.models.setting
  metabase.driver.impl
  clojure.tools.logging
  clojure.string),
 metabase.query-processor.middleware.resolve-source-table
 (schema.core metabase.util.schema metabase.util.i18n metabase.query-processor.store metabase.mbql.util),
 metabase.api.login-history-test (metabase.util metabase.test metabase.models clojure.test),
 metabase.models.query.permissions
 (toucan.db
  schema.core
  metabase.util.schema
  metabase.util.i18n
  metabase.util
  metabase.query-processor.util
  metabase.models.table
  metabase.models.permissions
  metabase.models.interface
  metabase.mbql.util
  metabase.mbql.normalize
  metabase.api.common
  clojure.tools.logging),
 metabase.query-processor.middleware.annotate
 (schema.core
  metabase.util.schema
  metabase.util.i18n
  metabase.util
  metabase.sync.analyze.fingerprint.fingerprinters
  metabase.query-processor.store
  metabase.query-processor.reducible
  metabase.query-processor.error-type
  metabase.models.humanization
  metabase.mbql.util
  metabase.mbql.schema
  metabase.mbql.predicates
  metabase.driver.common
  metabase.driver
  medley.core
  clojure.string
  clojure.set),
 java-time.properties (java-time.util java-time.core),
 buddy.core.padding (buddy.core.bytes),
 metabase.query-processor-test.nested-queries-test
 (toucan.db
  schema.core
  metabase.util
  metabase.test
  metabase.query-processor.middleware.permissions
  metabase.query-processor-test
  metabase.query-processor
  metabase.models.query.permissions
  metabase.models.permissions-group
  metabase.models.permissions
  metabase.models.interface
  metabase.models.collection
  metabase.models.card
  metabase.models
  metabase.mbql.schema
  metabase.driver
  java-time
  honeysql.core
  clojure.test),
 metabase.models.params
 (toucan.hydrate
  toucan.db
  schema.core
  metabase.util.schema
  metabase.util.i18n
  metabase.util
  metabase.models.params.field-values
  metabase.mbql.util
  metabase.mbql.schema
  metabase.mbql.normalize
  metabase.db.util
  clojure.tools.logging
  clojure.set),
 metabase.integrations.google
 (toucan.db
  schema.core
  metabase.util.i18n
  metabase.util
  metabase.plugins.classloader
  metabase.models.user
  metabase.models.setting.multi-setting
  metabase.models.setting
  metabase.integrations.google.interface
  metabase.api.common
  clojure.tools.logging
  clojure.string
  clj-http.client
  cheshire.core),
 manifold.deferred
 (clojure.set
  manifold.debug
  manifold.time
  manifold.utils
  manifold.executor
  riddley.compiler
  riddley.walk
  clojure.tools.logging),
 metabase.query-processor.middleware.wrap-value-literals-test
 (metabase.test
  metabase.query-processor.timezone
  metabase.query-processor.middleware.wrap-value-literals
  metabase.driver
  java-time
  clojure.test),
 metabase.test.mock.moviedb (metabase.driver),
 metabase.models.params.chain-filter.dedupe-joins-test (metabase.models.params.chain-filter.dedupe-joins clojure.test),
 metabase.query-processor.query-to-expected-cols-test (metabase.test metabase.query-processor clojure.test),
 instaparse.transform (instaparse.util instaparse.gll),
 clojure.tools.reader.reader-types (clojure.tools.reader.impl.utils),
 metabase.util.honeysql-extensions-test
 (metabase.util.honeysql-extensions metabase.test honeysql.format honeysql.core clojure.test),
 metabase.query-processor.middleware.process-userland-query
 (toucan.db
  metabase.util.i18n
  metabase.query-processor.util
  metabase.models.query-execution
  metabase.models.query
  java-time
  clojure.tools.logging),
 clojure.tools.namespace.file (clojure.tools.namespace.track clojure.tools.namespace.parse clojure.java.io),
 clojure.tools.reader.edn
 (clojure.tools.reader
  clojure.tools.reader.impl.errors
  clojure.tools.reader.impl.commons
  clojure.tools.reader.impl.utils
  clojure.tools.reader.reader-types),
 clojure.test (clojure.string clojure.stacktrace clojure.template),
 metabase.api.session
 (compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  toucan.models
  toucan.db
  throttle.core
  schema.core
  metabase.util.schema
  metabase.util.password
  metabase.util.i18n
  metabase.util
  metabase.server.request.util
  metabase.server.middleware.session
  metabase.public-settings
  metabase.models.user
  metabase.models.setting
  metabase.models.session
  metabase.models.login-history
  metabase.integrations.ldap
  metabase.integrations.google
  metabase.events
  metabase.email.messages
  metabase.config
  metabase.api.common
  compojure.core
  clojure.tools.logging
  cemerick.friend.credentials),
 metabase.query-processor.middleware.cache-test
 (toucan.db
  schema.core
  pretty.core
  metabase.util
  metabase.test.util
  metabase.test.fixtures
  metabase.test
  metabase.server.middleware.session
  metabase.query-processor.util
  metabase.query-processor.streaming
  metabase.query-processor.middleware.process-userland-query
  metabase.query-processor.middleware.cache.impl-test
  metabase.query-processor.middleware.cache.impl
  metabase.query-processor.middleware.cache-backend.interface
  metabase.query-processor.middleware.cache
  metabase.query-processor.context.default
  metabase.query-processor
  metabase.public-settings
  metabase.models.query
  metabase.models.permissions-group
  metabase.models.permissions
  metabase.driver.sql-jdbc.execute
  medley.core
  java-time
  clojure.tools.logging
  clojure.test
  clojure.data.csv
  clojure.core.async
  buddy.core.codecs),
 metabase.query-processor.middleware.reconcile-breakout-and-order-by-bucketing
 (schema.core metabase.mbql.util metabase.mbql.schema),
 metabase.models.setting.cache-test
 (toucan.db
  metabase.test.fixtures
  metabase.test
  metabase.public-settings
  metabase.models.setting.cache
  metabase.models.setting-test
  metabase.models.setting
  metabase.db
  honeysql.core
  clojure.test),
 user-agent (clojure.string),
 metabase.models.on-demand-test
 (toucan.db
  metabase.util
  metabase.test.data
  metabase.test
  metabase.models.table
  metabase.models.field-values
  metabase.models.field
  metabase.models.database
  metabase.models.dashboard
  metabase.models.card
  clojure.test),
 metabase.driver.sql.parameters.substitute-test
 (schema.core
  metabase.util.schema
  metabase.test
  metabase.query-processor.test-util
  metabase.query-processor.middleware.parameters.native
  metabase.query-processor-test
  metabase.query-processor
  metabase.models
  metabase.mbql.normalize
  metabase.driver.sql.parameters.substitute
  metabase.driver.common.parameters.parse
  metabase.driver.common.parameters
  metabase.driver
  java-time
  clojure.test),
 metabase.util-test
 (metabase.util
  metabase.test
  flatland.ordered.map
  clojure.test.check.properties
  clojure.test.check.generators
  clojure.test.check.clojure-test
  clojure.test),
 metabase.db.setup-test (metabase.test metabase.db.setup clojure.test clojure.java.jdbc),
 clojure.tools.analyzer.passes.jvm.warn-on-reflection
 (clojure.tools.analyzer.passes.jvm.validate clojure.tools.analyzer.passes.jvm.validate-loop-locals),
 clojure.core.protocols #{},
 metabase.test.data.users
 (toucan.util.test
  toucan.db
  schema.core
  metabase.util
  metabase.test.initialize
  metabase.server.middleware.session
  metabase.models.user
  metabase.models.permissions-group-membership
  metabase.models.permissions-group
  metabase.http-client
  medley.core
  clojure.test
  cemerick.friend.credentials),
 metabase.api.card
 (compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  toucan.hydrate
  toucan.db
  schema.core
  metabase.util.schema
  metabase.util.i18n
  metabase.util
  metabase.sync.analyze.query-results
  metabase.related
  metabase.query-processor.util
  metabase.query-processor.streaming
  metabase.query-processor.pivot
  metabase.query-processor.middleware.results-metadata
  metabase.query-processor.middleware.permissions
  metabase.query-processor.middleware.constraints
  metabase.query-processor.async
  metabase.query-processor
  metabase.public-settings
  metabase.models.view-log
  metabase.models.table
  metabase.models.revision.last-edit
  metabase.models.query.permissions
  metabase.models.query
  metabase.models.pulse
  metabase.models.interface
  metabase.models.database
  metabase.models.collection
  metabase.models.card-favorite
  metabase.models.card
  metabase.mbql.normalize
  metabase.events
  metabase.email.messages
  metabase.async.util
  metabase.api.dataset
  metabase.api.common
  medley.core
  compojure.core
  clojure.tools.logging
  clojure.core.async
  cheshire.core),
 metabase.db.fix-mysql-utf8-test
 (toucan.db
  metabase.test
  metabase.models
  metabase.driver.sql-jdbc.connection
  metabase.db.setup
  clojure.test
  clojure.string
  clojure.java.jdbc),
 metabase.pulse.interface (potemkin),
 metabase.test.mock.toucanery (metabase.test.mock.util metabase.driver medley.core),
 potemkin.namespaces #{},
 metabase.api.transform-test
 (metabase.test.transforms
  metabase.test.fixtures
  metabase.test.domain-entities
  metabase.test
  metabase.query-processor
  metabase.models.permissions-group
  metabase.models.permissions
  metabase.models.collection
  metabase.models.card
  clojure.test),
 metabase.driver.sql.query-processor
 (schema.core
  pretty.core
  potemkin.types
  metabase.util.schema
  metabase.util.i18n
  metabase.util.honeysql-extensions
  metabase.util
  metabase.query-processor.store
  metabase.query-processor.middleware.wrap-value-literals
  metabase.query-processor.middleware.annotate
  metabase.query-processor.interface
  metabase.query-processor.error-type
  metabase.models.table
  metabase.models.field
  metabase.mbql.util
  metabase.mbql.schema
  metabase.driver.common
  metabase.driver
  honeysql.helpers
  honeysql.format
  honeysql.core
  clojure.tools.logging
  clojure.string
  clojure.core.match),
 clojure.test.check.generators (clojure.test.check.rose-tree clojure.test.check.random clojure.string clojure.core),
 aleph.flow (manifold.executor manifold.deferred potemkin),
 metabase.shared.models.visualization-settings-test
 (metabase.shared.models.visualization-settings clojure.walk clojure.test clojure.spec.test.alpha),
 metabase.sample-dataset-test
 (toucan.hydrate
  toucan.db
  metabase.util
  metabase.test
  metabase.sync
  metabase.sample-data
  metabase.models
  clojure.test),
 metabase.events.view-log-test (toucan.db metabase.test metabase.models metabase.events.view-log clojure.test),
 metabase.query-processor.middleware.results-metadata-test
 (toucan.db
  schema.core
  metabase.util.schema
  metabase.util.encryption
  metabase.util
  metabase.test.util
  metabase.test.mock.util
  metabase.test
  metabase.sync.analyze.query-results
  metabase.query-processor.util
  metabase.query-processor.middleware.results-metadata
  metabase.query-processor
  metabase.models.permissions-group
  metabase.models.permissions
  metabase.models
  metabase.mbql.schema
  clojure.test),
 metabase.query-processor.middleware.add-implicit-clauses-test
 (toucan.db
  schema.core
  metabase.util
  metabase.test
  metabase.query-processor.test-util
  metabase.query-processor.middleware.add-implicit-clauses
  metabase.query-processor
  metabase.models.field
  metabase.mbql.util
  clojure.test),
 kixi.stats.core
 (kixi.stats.digest kixi.stats.distribution redux.core kixi.stats.protocols kixi.stats.test kixi.stats.math),
 fipp.deque (clojure.core.rrb-vector),
 clojure.spec.test.alpha (clojure.string clojure.spec.gen.alpha clojure.spec.alpha clojure.pprint),
 metabase.api.activity
 (compojure.core
  compojure.core
  toucan.hydrate
  toucan.db
  metabase.models.view-log
  metabase.models.interface
  metabase.models.dashboard
  metabase.models.card
  metabase.models.activity
  metabase.api.common
  compojure.core
  clojure.set),
 metabase.integrations.ldap
 (schema.core
  metabase.util.schema
  metabase.util.i18n
  metabase.util
  metabase.plugins.classloader
  metabase.models.user
  metabase.models.setting
  metabase.integrations.ldap.interface
  metabase.integrations.ldap.default-implementation
  clojure.tools.logging
  clj-ldap.client
  cheshire.core),
 metabase.driver.sql-jdbc.sync.describe-table
 (metabase.util.honeysql-extensions
  metabase.util
  metabase.driver.sql.query-processor
  metabase.driver.sql-jdbc.sync.interface
  metabase.driver.sql-jdbc.sync.common
  metabase.driver.sql-jdbc.connection
  metabase.driver
  medley.core
  clojure.tools.logging
  clojure.string
  clojure.java.jdbc),
 metabase.api.database-test
 (toucan.hydrate
  toucan.db
  schema.core
  ring.util.codec
  metabase.util.schema
  metabase.util.cron
  metabase.util
  metabase.test.util
  metabase.test.fixtures
  metabase.test
  metabase.sync.sync-metadata
  metabase.sync.field-values
  metabase.sync.analyze
  metabase.models.permissions-group
  metabase.models.permissions
  metabase.models.database
  metabase.models
  metabase.mbql.schema
  metabase.driver.util
  metabase.driver.sql-jdbc
  metabase.driver
  metabase.api.table
  metabase.api.database
  medley.core
  clojure.test),
 metabase.models.user-test
 (toucan.hydrate
  toucan.db
  metabase.util.password
  metabase.util
  metabase.test.data.users
  metabase.test
  metabase.models.user
  metabase.models.table
  metabase.models.session
  metabase.models.permissions-group-membership
  metabase.models.permissions-group
  metabase.models.permissions
  metabase.models.database
  metabase.models.collection-test
  metabase.models.collection
  metabase.http-client
  clojure.test
  clojure.string
  clojure.set),
 clojure.tools.analyzer (clojure.tools.analyzer.env clojure.tools.analyzer.utils),
 clojure.tools.analyzer.passes.jvm.annotate-host-info
 (clojure.tools.analyzer.jvm.utils
  clojure.tools.analyzer.utils
  clojure.tools.analyzer.passes.elide-meta
  clojure.tools.analyzer.passes.cleanup
  clojure.tools.analyzer.ast
  clojure.tools.analyzer),
 metabase.models.collection-test
 (toucan.hydrate
  toucan.db
  schema.core
  metabase.util.schema
  metabase.util
  metabase.test.fixtures
  metabase.test
  metabase.models.permissions
  metabase.models.collection
  metabase.models
  metabase.api.common
  clojure.test
  clojure.string
  clojure.math.combinatorics),
 metabase.api.segment-test
 (toucan.hydrate
  toucan.db
  metabase.util
  metabase.test
  metabase.server.middleware.util
  metabase.models.table
  metabase.models.segment
  metabase.models.revision
  metabase.models.permissions-group
  metabase.models.permissions
  metabase.models.database
  metabase.http-client
  clojure.test),
 metabase.query-processor.store
 (toucan.db
  schema.core
  metabase.util.schema
  metabase.util.i18n
  metabase.util
  metabase.models.table
  metabase.models.field
  metabase.models.database),
 clojure.core.cache (clojure.data.priority-map),
 metabase.driver.sql.util-test (metabase.util.honeysql-extensions metabase.driver.sql.util clojure.test),
 metabase.integrations.slack
 (schema.core
  metabase.util.schema
  metabase.util.i18n
  metabase.util
  metabase.models.setting
  medley.core
  clojure.tools.logging
  clojure.java.io
  clojure.core.memoize
  clj-http.client
  cheshire.core),
 metabase.sync.analyze.classifiers.no-preview-display (schema.core metabase.sync.interface),
 metabase.api.email-test (metabase.test.util metabase.test metabase.models.setting metabase.email clojure.test),
 metabase.transforms.core-test
 (toucan.db
  metabase.util
  metabase.transforms.specs
  metabase.transforms.core
  metabase.test.transforms
  metabase.test.domain-entities
  metabase.test
  metabase.query-processor
  metabase.models.table
  metabase.models.collection
  metabase.models.card
  metabase.domain-entities.specs
  metabase.domain-entities.core
  medley.core
  clojure.test),
 metabase.models
 (potemkin
  metabase.models.view-log
  metabase.models.user
  metabase.models.task-history
  metabase.models.table
  metabase.models.setting
  metabase.models.session
  metabase.models.segment
  metabase.models.revision
  metabase.models.query-execution
  metabase.models.query-cache
  metabase.models.pulse-channel-recipient
  metabase.models.pulse-channel
  metabase.models.pulse-card
  metabase.models.pulse
  metabase.models.permissions-revision
  metabase.models.permissions-group-membership
  metabase.models.permissions-group
  metabase.models.permissions
  metabase.models.native-query-snippet
  metabase.models.moderation-review
  metabase.models.metric-important-field
  metabase.models.metric
  metabase.models.login-history
  metabase.models.field-values
  metabase.models.field
  metabase.models.dimension
  metabase.models.dependency
  metabase.models.database
  metabase.models.dashboard-favorite
  metabase.models.dashboard-card-series
  metabase.models.dashboard-card
  metabase.models.dashboard
  metabase.models.collection-permission-graph-revision
  metabase.models.collection
  metabase.models.card-favorite
  metabase.models.card
  metabase.models.activity),
 clojure.core.rrb-vector.parameters #{},
 metabase.models.database-test
 (toucan.db
  schema.core
  metabase.driver.h2
  metabase.test
  metabase.task.sync-databases
  metabase.task
  metabase.server.middleware.session
  metabase.models.user
  metabase.models.permissions
  metabase.models.database
  metabase.models
  metabase.driver.util
  metabase.driver
  clojure.test
  clojure.string
  cheshire.core),
 metabase.pulse
 (toucan.db
  schema.core
  metabase.util.urls
  metabase.util.ui-logic
  metabase.util.i18n
  metabase.util
  metabase.server.middleware.session
  metabase.query-processor.timezone
  metabase.query-processor.middleware.permissions
  metabase.query-processor
  metabase.pulse.render
  metabase.pulse.interface
  metabase.plugins.classloader
  metabase.models.pulse
  metabase.models.database
  metabase.models.dashboard-card
  metabase.models.dashboard
  metabase.models.card
  metabase.integrations.slack
  metabase.email.messages
  metabase.email
  metabase.api.card
  clojure.tools.logging),
 metabase.server.middleware.session-test
 (toucan.db
  ring.mock.request
  metabase.util.i18n
  metabase.test
  metabase.server.middleware.session
  metabase.models
  metabase.driver.sql.query-processor
  metabase.db
  metabase.core.initialization-status
  metabase.config
  metabase.api.common
  environ.core
  clojure.test
  clojure.string),
 metabase.config-test (metabase.config environ.core clojure.test),
 riddley.compiler #{},
 clojure.tools.analyzer.passes.jvm.emit-form
 (clojure.tools.analyzer.passes.uniquify clojure.tools.analyzer.passes.emit-form),
 metabase.query-processor-test.date-bucketing-test
 (toucan.db
  pretty.core
  potemkin.types
  metabase.util.honeysql-extensions
  metabase.util.date-2
  metabase.util
  metabase.test
  metabase.query-processor.middleware.format-rows
  metabase.query-processor-test
  metabase.query-processor
  metabase.models.database
  metabase.driver.sql.query-processor-test
  metabase.driver.sql.query-processor
  metabase.driver.sql-jdbc.sync
  metabase.driver
  java-time
  clojure.test
  clojure.string),
 instaparse.cfg (clojure.string instaparse.util instaparse.gll instaparse.reduction instaparse.combinators-source),
 metabase.query-processor.pivot-test
 (schema.core
  metabase.util
  metabase.test
  metabase.query-processor.pivot
  metabase.query-processor
  metabase.models.permissions-group
  metabase.models.permissions
  metabase.models
  metabase.api.pivots
  medley.core
  clojure.test
  clojure.set),
 metabase.util.yaml
 (yaml.core metabase.util.i18n metabase.util.files metabase.util clojure.tools.logging clojure.string),
 metabase.integrations.google.interface
 (metabase.util.i18n metabase.public-settings.metastore metabase.models.setting.multi-setting),
 metabase.query-processor-test.breakout-test
 (metabase.util
  metabase.test
  metabase.query-processor.test-util
  metabase.query-processor.middleware.add-source-metadata
  metabase.query-processor.middleware.add-dimension-projections
  metabase.query-processor-test
  metabase.query-processor
  metabase.models.field
  metabase.models.card
  metabase.mbql.schema
  clojure.test),
 schema.spec.core (schema.utils schema.macros),
 metabase.integrations.ldap.interface (schema.core potemkin metabase.util.schema),
 byte-streams.graph (byte-streams.protocols byte-streams.utils manifold.stream clj-tuple),
 metabase.util.stats-test
 (toucan.util.test
  toucan.db
  schema.core
  metabase.util.stats
  metabase.util
  metabase.test.fixtures
  metabase.models.query-execution
  metabase.models.pulse-channel
  metabase.models.pulse-card
  metabase.models.pulse
  metabase.models.card
  metabase.integrations.slack
  metabase.email
  clojure.test),
 honeysql.format (clojure.string honeysql.types),
 metabase.server.middleware.misc-test
 (ring.mock.request metabase.test metabase.server.middleware.misc metabase.public-settings medley.core clojure.test),
 eftest.report.progress (progrock.core eftest.report.pretty eftest.report clojure.test),
 cheshire.generate-seq (cheshire.generate),
 metabase.transforms.specs-test (metabase.util.schema metabase.transforms.specs metabase.test clojure.test),
 metabase.metabot
 (metabase.util.i18n
  metabase.models.setting
  metabase.metabot.websocket
  metabase.metabot.instance
  metabase.integrations.slack
  clojure.tools.logging),
 metabase.server.middleware.security
 (ring.util.codec
  metabase.util.i18n
  metabase.server.request.util
  metabase.public-settings
  metabase.models.setting
  metabase.config
  java-time
  clojure.string
  clojure.java.io),
 metabase.driver.common-test (metabase.models.setting metabase.driver.common metabase.driver clojure.test),
 metabase.driver.sql-jdbc.test-util (metabase.test.data.interface metabase.test.data.env metabase.driver),
 metabase.query-processor.middleware.cache
 (metabase.util.i18n
  metabase.util
  metabase.query-processor.util
  metabase.query-processor.middleware.cache.impl
  metabase.query-processor.middleware.cache-backend.interface
  metabase.query-processor.middleware.cache-backend.db
  metabase.query-processor.context
  metabase.public-settings
  metabase.config
  medley.core
  java-time
  clojure.tools.logging
  clojure.core.async),
 metabase.test.util.timezone (metabase.test.initialize metabase.test-runner.parallel metabase.driver clojure.test),
 java-time.format (java-time.util java-time.core clojure.string),
 metabase.query-processor.middleware.resolve-database-and-driver
 (metabase.util.i18n
  metabase.util
  metabase.query-processor.store
  metabase.query-processor.error-type
  metabase.mbql.schema
  metabase.driver.util
  metabase.driver),
 metabase.pulse.render.color-test (metabase.pulse.render.js-engine metabase.pulse.render.color clojure.test),
 clj-time.core #{},
 metabase.mbql.util.match.impl #{},
 metabase.models.card-favorite (toucan.models metabase.util),
 metabase.api.task-test (toucan.db metabase.util metabase.test metabase.models.task-history java-time clojure.test),
 metabase.query-processor.middleware.add-implicit-clauses
 (toucan.db
  schema.core
  metabase.util.schema
  metabase.util.i18n
  metabase.util
  metabase.types
  metabase.query-processor.store
  metabase.query-processor.interface
  metabase.query-processor.error-type
  metabase.models.table
  metabase.models.field
  metabase.mbql.util
  metabase.mbql.schema
  clojure.tools.logging),
 metabase.models.table-test
 (toucan.db
  metabase.test.data.one-off-dbs
  metabase.test
  metabase.sync
  metabase.models.table
  clojure.test
  clojure.java.jdbc),
 metabase.pulse.render.sparkline
 (schema.core
  metabase.util.i18n
  metabase.util.date-2
  metabase.types
  metabase.pulse.render.style
  metabase.pulse.render.image-bundle
  metabase.pulse.render.common
  java-time),
 clojure.tools.analyzer.passes.constant-lifter (clojure.tools.analyzer.utils),
 metabase.api.public-test
 (toucan.db
  metabase.util
  metabase.test
  metabase.models.permissions-group
  metabase.models.permissions
  metabase.models
  metabase.http-client
  metabase.api.public
  metabase.api.pivots
  metabase.api.dashboard-test
  dk.ative.docjure.spreadsheet
  clojure.test
  clojure.string
  cheshire.core),
 metabase.server.request.util-test
 (ring.mock.request metabase.test metabase.server.request.util java-time clojure.tools.reader.edn clojure.test),
 clojure.core.async.impl.ioc-macros
 (clojure.set
  clojure.core.async.impl.dispatch
  clojure.core.async.impl.protocols
  clojure.tools.analyzer.jvm
  clojure.tools.analyzer.passes.jvm.warn-on-reflection
  clojure.tools.analyzer.passes.jvm.annotate-loops
  clojure.tools.analyzer.passes
  clojure.tools.analyzer.env
  clojure.tools.analyzer.ast
  clojure.tools.analyzer
  clojure.pprint),
 java-time.core #{},
 metabase.query-processor.middleware.check-features
 (metabase.util.i18n metabase.util metabase.query-processor.error-type metabase.mbql.util metabase.driver),
 metabase.driver.common.parameters.parse-test (metabase.driver.common.parameters.parse clojure.test),
 metabase.models.native-query-snippet
 (toucan.models
  toucan.db
  schema.core
  metabase.util.schema
  metabase.util.i18n
  metabase.util
  metabase.plugins.classloader
  metabase.models.native-query-snippet.permissions
  metabase.models.interface
  metabase.models.collection),
 schema.coerce (clojure.string schema.utils schema.spec.core schema.core schema.macros clojure.edn),
 metabase.query-processor.middleware.catch-exceptions-test
 (schema.core
  metabase.test.util.log
  metabase.test.data.users
  metabase.test.data
  metabase.test
  metabase.query-processor.middleware.catch-exceptions
  metabase.query-processor.error-type
  metabase.query-processor.context
  metabase.query-processor
  metabase.models.permissions-group
  metabase.models.permissions
  clojure.test),
 metabase.plugins.driver-deprecation-test (metabase.test.fixtures metabase.test metabase.models.setting clojure.test),
 metabase.query-processor-test.order-by-test (metabase.test metabase.driver clojure.test),
 bigml.histogram.core #{},
 java-time.temporal
 (java-time.defconversion
  java-time.clock
  java-time.format
  java-time.properties
  java-time.util
  java-time.core
  clojure.string),
 stencil.ast (stencil.utils clojure.string clojure.zip),
 metabase.sync.analyze.classifiers.text-fingerprint-test
 (metabase.sync.analyze.classifiers.text-fingerprint metabase.models.field clojure.test),
 metabase.task.follow-up-emails-test
 (metabase.test.util metabase.test.fixtures metabase.task.follow-up-emails metabase.email-test java-time clojure.test),
 metabase.driver.sql-jdbc-test
 (metabase.test.util.log
  metabase.test
  metabase.query-processor
  metabase.models.table
  metabase.models.field
  metabase.driver.util
  metabase.driver.sql-jdbc.test-util
  metabase.driver
  metabase.db.metadata-queries
  clojure.test),
 honeysql.core (clojure.string honeysql.util honeysql.helpers honeysql.types honeysql.format),
 clojure.data.csv (clojure.string),
 metabase.driver.sql.util
 (schema.core
  metabase.util.i18n
  metabase.util.honeysql-extensions
  metabase.util
  metabase.driver.sql.query-processor
  honeysql.core
  clojure.tools.logging
  clojure.string),
 metabase.query-processor.util-test (metabase.query-processor.util clojure.test),
 clojure.tools.analyzer.passes.elide-meta (clojure.tools.analyzer.passes.source-info),
 metabase.mbql.schema.helpers (schema.core metabase.types clojure.string),
 metabase.test.util
 (toucan.util.test
  toucan.models
  toucan.db
  schema.core
  potemkin
  metabase.util.files
  metabase.util
  metabase.test.util.log
  metabase.test.initialize
  metabase.test.fixtures
  metabase.test.data
  metabase.test-runner.parallel
  metabase.task
  metabase.plugins.classloader
  metabase.models.setting.cache
  metabase.models.setting
  metabase.models.permissions-group
  metabase.models.permissions
  metabase.models.collection
  metabase.models
  metabase.driver
  java-time
  environ.core
  colorize.core
  clojurewerkz.quartzite.scheduler
  clojure.walk
  clojure.test
  clojure.string
  clojure.set
  clojure.java.io
  cheshire.core),
 metabase.models.login-history-test
 (schema.core
  metabase.util.schema
  metabase.util.date-2
  metabase.util
  metabase.test
  metabase.server.request.util
  metabase.models.login-history
  metabase.models
  java-time
  clojure.test
  clojure.string),
 ring.adapter.jetty (ring.util.servlet),
 metabase.util.quotation #{},
 potemkin.collections (potemkin.utils potemkin.macros potemkin.types),
 clojure.core.async.impl.buffers (clojure.core.async.impl.protocols),
 buddy.sign.jwt (cheshire.core buddy.sign.util buddy.sign.jwe buddy.sign.jws buddy.core.codecs),
 postal.smtp (postal.support postal.message),
 clojure.core.rrb-vector.interop (clojure.core.rrb-vector.rrbt clojure.core.rrb-vector.protocols),
 metabase.cmd.dump-to-h2-test
 (toucan.db
  metabase.util.i18n.impl
  metabase.util.encryption-test
  metabase.test.data.interface
  metabase.test
  metabase.models.setting
  metabase.models
  metabase.driver
  metabase.db.spec
  metabase.db.connection
  metabase.cmd.test-util
  metabase.cmd.load-from-h2
  metabase.cmd.dump-to-h2
  metabase.cmd.copy.h2
  metabase.cmd.copy
  metabase.cmd
  clojure.test
  clojure.java.jdbc
  clojure.java.io),
 metabase.query-processor.middleware.fetch-source-query-test
 (toucan.db
  metabase.util
  metabase.test
  metabase.query-processor.middleware.fetch-source-query
  metabase.query-processor
  metabase.models
  metabase.mbql.schema
  clojure.test
  clojure.set
  cheshire.core),
 metabase.mbql.schema.macros (metabase.mbql.schema.helpers),
 metabase.pulse.render.common (schema.core potemkin.types metabase.util.ui-logic hiccup.util clojure.pprint),
 metabase.events.last-login-test
 (toucan.db metabase.test metabase.models.user metabase.events.last-login clojure.test),
 quoin.text #{},
 metabase.util.schema-test
 (compojure.core schema.core metabase.util.schema metabase.test metabase.api.common compojure.core clojure.test),
 metabase.models.interface-test (toucan.models metabase.mbql.normalize clojure.test cheshire.core),
 metabase.sync.sync-metadata-test
 (metabase.test.sync
  metabase.sync.sync-metadata.tables
  metabase.sync.sync-metadata.sync-timezone
  metabase.sync.sync-metadata.metabase-metadata
  metabase.sync.sync-metadata.fks
  metabase.sync.sync-metadata.fields
  clojure.test),
 potemkin.walk #{},
 manifold.debug #{},
 metabase.pulse.render.png
 (schema.core
  metabase.util.i18n
  metabase.pulse.render.style
  metabase.pulse.render.common
  hiccup.core
  clojure.tools.logging
  clojure.java.io),
 metabase.db.env
 (ring.util.codec
  metabase.util.i18n
  metabase.util
  metabase.db.spec
  metabase.config
  clojure.walk
  clojure.tools.logging
  clojure.java.io),
 clojure.tools.analyzer.passes.cleanup #{},
 buddy.core.keys
 (buddy.core.keys.jwk.eddsa
  buddy.core.keys.jwk.rsa
  buddy.core.keys.jwk.ec
  buddy.core.keys.jwk.okp
  buddy.core.keys.jwk.proto
  buddy.core.keys.pem),
 ring.util.io (clojure.java.io),
 clojure.math.combinatorics #{},
 metabase.models.revision-test
 (toucan.models metabase.test metabase.models.revision metabase.models.card clojure.test),
 riddley.walk (riddley.compiler),
 potemkin (potemkin.utils potemkin.macros potemkin.collections potemkin.types potemkin.namespaces),
 metabase.test.util.log (metabase.test-runner.parallel clojure.tools.logging),
 metabase.driver.sql-jdbc.execute.old-impl (metabase.driver),
 clojure.tools.logging (clojure.tools.logging.impl clojure.pprint clojure.string),
 metabase.db.schema-migrations-test
 (toucan.db
  metabase.util
  metabase.test.util
  metabase.models.user
  metabase.models
  metabase.db.schema-migrations-test.impl
  clojure.test),
 fipp.ednize (fipp.util clojure.instant),
 metabase.query-processor.middleware.cache-backend.db
 (toucan.db
  metabase.util.i18n
  metabase.util.date-2
  metabase.query-processor.middleware.cache-backend.interface
  metabase.models.query-cache
  java-time
  honeysql.core
  clojure.tools.logging),
 metabase.query-processor.middleware.add-dimension-projections
 (toucan.hydrate
  toucan.db
  schema.core
  metabase.util.schema
  metabase.util
  metabase.models.field
  metabase.models.dimension
  metabase.mbql.util
  metabase.mbql.schema
  medley.core),
 metabase.async.util (schema.core clojure.tools.logging clojure.core.async),
 kixi.stats.test (clojure.math.combinatorics kixi.stats.protocols kixi.stats.math),
 metabase.sync.analyze.fingerprint.fingerprinters-test
 (toucan.db
  schema.core
  metabase.test
  metabase.sync.analyze.fingerprint.fingerprinters
  metabase.models.field
  clojure.test
  clojure.string
  cheshire.core),
 metabase.async.streaming-response.thread-pool (metabase.config),
 metabase.sync.sync-metadata.fks
 (toucan.db
  schema.core
  metabase.util
  metabase.sync.util
  metabase.sync.interface
  metabase.sync.fetch-metadata
  metabase.models.table
  metabase.models.field
  clojure.tools.logging
  clojure.string),
 metabase.sync.analyze.classify
 (toucan.db
  schema.core
  metabase.util
  metabase.sync.util
  metabase.sync.interface
  metabase.sync.analyze.classifiers.text-fingerprint
  metabase.sync.analyze.classifiers.no-preview-display
  metabase.sync.analyze.classifiers.name
  metabase.sync.analyze.classifiers.category
  metabase.models.table
  metabase.models.field
  clojure.tools.logging
  clojure.data),
 metabase.plugins.classloader (dynapath.util clojure.tools.logging clojure.string),
 metabase.db.connection-pool-setup
 (toucan.db
  schema.core
  metabase.util.schema
  metabase.util.i18n
  metabase.util
  metabase.db.jdbc-protocols
  metabase.db.connection
  metabase.connection-pool
  metabase.config
  clojure.tools.logging),
 weavejester.dependency (clojure.set),
 metabase.driver.sql-jdbc.sync.common (metabase.driver.sql-jdbc.execute),
 metabase.test.data.sql
 (metabase.test.data.interface
  metabase.test.data
  metabase.query-processor
  metabase.driver.sql.util
  metabase.driver
  clojure.tools.logging
  clojure.string),
 postal.core (postal.stress postal.smtp postal.sendmail),
 metabase.sample-data
 (toucan.db
  metabase.util.i18n
  metabase.sync
  metabase.models.database
  clojure.tools.logging
  clojure.string
  clojure.java.io),
 metabase.query-processor.middleware.auto-parse-filter-values
 (schema.core metabase.util.schema metabase.util.i18n metabase.query-processor.error-type metabase.mbql.util),
 ring.middleware.params (ring.util.request ring.util.codec),
 clojure.core #{},
 metabase.driver.common
 (schema.core
  metabase.util.i18n
  metabase.util
  metabase.query-processor.store
  metabase.query-processor.context.default
  metabase.models.setting
  metabase.driver.util
  metabase.driver
  clojure.tools.logging
  clj-time.format
  clj-time.core
  clj-time.coerce),
 metabase.models.permissions-group-membership
 (toucan.models toucan.db metabase.util.i18n metabase.util metabase.models.permissions-group),
 metabase.driver-test (metabase.plugins.classloader metabase.driver.impl metabase.driver clojure.test),
 metabase.pulse.render.image-bundle (clojure.java.io),
 metabase.query-processor.middleware.mbql-to-native
 (metabase.util metabase.query-processor.context metabase.driver clojure.tools.logging),
 puget.color.ansi (puget.color clojure.string),
 metabase.events.dependencies-test
 (toucan.db metabase.util metabase.test metabase.models metabase.events.dependencies clojure.test),
 clojure.test.check
 (clojure.test.check.impl
  clojure.test.check.rose-tree
  clojure.test.check.results
  clojure.test.check.random
  clojure.test.check.generators),
 colorize.core (clojure.pprint),
 java-time.mock (java-time.zone java-time.temporal java-time.core java-time.amount),
 metabase.server.routes.index-test
 (metabase.util.i18n metabase.test metabase.server.routes.index clojure.test cheshire.core),
 metabase.api.table
 (compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  toucan.hydrate
  toucan.db
  schema.core
  metabase.util.schema
  metabase.util.i18n
  metabase.util
  metabase.types
  metabase.sync.field-values
  metabase.sync
  metabase.related
  metabase.models.table
  metabase.models.interface
  metabase.models.field-values
  metabase.models.field
  metabase.models.card
  metabase.driver.util
  metabase.driver
  metabase.api.common
  medley.core
  compojure.core
  clojure.tools.logging),
 io.aviso.ansi (clojure.string),
 pjstadig.humane-test-output (clojure.pprint clojure.data pjstadig.util clojure.test),
 clj-http.cookies (clojure.string clj-http.util),
 clojure.set #{},
 metabase.sync.sync-metadata.metabase-metadata
 (toucan.db
  schema.core
  metabase.util.schema
  metabase.util
  metabase.sync.util
  metabase.sync.interface
  metabase.sync.fetch-metadata
  metabase.models.table
  metabase.models.field
  metabase.driver.util
  metabase.driver
  clojure.tools.logging
  clojure.string),
 buddy.core.bytes #{},
 metabase.util.date-2.parse
 (schema.core
  metabase.util.i18n
  metabase.util.date-2.parse.builder
  metabase.util.date-2.common
  java-time
  clojure.string),
 metabase.util.honeysql-extensions
 (honeysql.types
  schema.core
  pretty.core
  potemkin.types
  metabase.util.schema
  metabase.util
  honeysql.format
  honeysql.core
  clojure.string
  clojure.pprint),
 metabase.sync.sync-metadata.fields.sync-metadata
 (toucan.db
  schema.core
  metabase.util.schema
  metabase.util.i18n
  metabase.util
  metabase.sync.util
  metabase.sync.sync-metadata.fields.common
  metabase.sync.interface
  metabase.models.field
  clojure.tools.logging
  clojure.string),
 metabase.driver.common.parameters.values-test
 (schema.core
  metabase.util.schema
  metabase.util
  metabase.test
  metabase.query-processor.middleware.permissions
  metabase.query-processor
  metabase.models.permissions-group
  metabase.models.permissions
  metabase.models
  metabase.driver.common.parameters.values
  metabase.driver.common.parameters
  metabase.driver
  clojure.test),
 metabase.api.search
 (compojure.core
  compojure.core
  toucan.db
  schema.core
  metabase.util.schema
  metabase.util.honeysql-extensions
  metabase.util
  metabase.server.middleware.offset-paging
  metabase.search.scoring
  metabase.search.config
  metabase.models.table
  metabase.models.segment
  metabase.models.pulse
  metabase.models.permissions
  metabase.models.metric
  metabase.models.interface
  metabase.models.database
  metabase.models.dashboard-favorite
  metabase.models.dashboard
  metabase.models.collection
  metabase.models.card-favorite
  metabase.models.card
  metabase.db
  metabase.api.common
  honeysql.helpers
  honeysql.core
  flatland.ordered.map
  compojure.core
  clojure.tools.logging
  clojure.string),
 metabase.query-processor.middleware.resolve-referenced-test
 (toucan.db
  metabase.test
  metabase.query-processor.store
  metabase.query-processor.middleware.resolve-referenced
  metabase.query-processor.middleware.parameters-test
  metabase.models.database
  metabase.models.card
  clojure.test),
 metabase.integrations.google-test
 (toucan.db
  metabase.test
  metabase.public-settings.metastore
  metabase.models.user
  metabase.integrations.google.interface
  metabase.integrations.google
  metabase.email-test
  clojure.test),
 metabase.api.permission-graph (clojure.walk clojure.spec.gen.alpha clojure.spec.alpha),
 byte-streams.pushback-stream
 (clojure.walk manifold.deferred manifold.stream manifold.utils byte-streams.utils primitive-math),
 java-time.interval (java-time.amount java-time.temporal java-time.core java-time.util clojure.string),
 metabase.query-processor.middleware.results-metadata
 (toucan.db
  ring.util.codec
  metabase.util.i18n
  metabase.util.encryption
  metabase.sync.analyze.query-results
  metabase.query-processor.reducible
  metabase.driver
  clojure.walk
  clojure.tools.logging
  cheshire.core
  buddy.core.hash),
 clojure.core.async
 (clojure.core.async.impl.concurrent
  clojure.core.async.impl.mutex
  clojure.core.async.impl.ioc-macros
  clojure.core.async.impl.dispatch
  clojure.core.async.impl.timers
  clojure.core.async.impl.buffers
  clojure.core.async.impl.channels
  clojure.core.async.impl.protocols),
 metabase.models.pulse
 (toucan.models
  toucan.hydrate
  toucan.db
  schema.core
  metabase.util.schema
  metabase.util.i18n
  metabase.util
  metabase.models.pulse-channel-recipient
  metabase.models.pulse-channel
  metabase.models.pulse-card
  metabase.models.permissions
  metabase.models.interface
  metabase.models.dashboard-card
  metabase.models.collection
  metabase.models.card
  metabase.events
  medley.core
  clojure.tools.logging
  clojure.string),
 clojure.core.match (clojure.set clojure.core.match.protocols),
 clojure.tools.analyzer.passes.jvm.box
 (clojure.tools.analyzer.passes.jvm.infer-tag
  clojure.tools.analyzer.passes.jvm.validate
  clojure.tools.analyzer.utils
  clojure.tools.analyzer.jvm.utils),
 net.cgrand.macrovich #{},
 metabase.query-processor-test.constraints-test (metabase.test metabase.query-processor clojure.test),
 manifold.stream.seq
 (manifold.time manifold.stream.graph manifold.stream.core manifold.utils manifold.deferred clojure.tools.logging),
 metabase.util.urls (metabase.public-settings),
 metabase.driver.postgres-test
 (toucan.db
  metabase.util.honeysql-extensions
  metabase.util
  metabase.test
  metabase.sync.sync-metadata
  metabase.sync
  metabase.query-processor
  metabase.models.table
  metabase.models.field
  metabase.models.database
  metabase.driver.sql.query-processor
  metabase.driver.sql-jdbc.execute
  metabase.driver.sql-jdbc.connection
  metabase.driver.postgres
  metabase.driver
  metabase.config
  honeysql.core
  clojure.test
  clojure.string
  clojure.java.jdbc),
 instaparse.util #{},
 metabase.public-settings.metastore-test
 (toucan.util.test metabase.public-settings.metastore metabase.models.user clojure.test clj-http.fake cheshire.core),
 clojure.test.check.random #{},
 metabase.query-processor.middleware.expand-macros-test
 (metabase.util
  metabase.test
  metabase.query-processor.middleware.expand-macros
  metabase.query-processor-test
  metabase.models.table
  metabase.models.segment
  metabase.models.metric
  metabase.models.database
  clojure.test),
 instaparse.abnf
 (clojure.walk
  instaparse.combinators-source
  instaparse.util
  instaparse.reduction
  instaparse.gll
  instaparse.cfg
  instaparse.transform),
 metabase.events.revision
 (metabase.models.segment
  metabase.models.revision
  metabase.models.metric
  metabase.models.dashboard
  metabase.models.card
  metabase.events
  clojure.tools.logging
  clojure.core.async),
 metabase.util.stats
 (toucan.db
  metabase.util.i18n
  metabase.util
  metabase.public-settings
  metabase.models.humanization
  metabase.models
  metabase.integrations.slack
  metabase.integrations.google
  metabase.email
  metabase.driver
  metabase.config
  medley.core
  java-time
  clojure.tools.logging
  clojure.string
  clj-http.client),
 clojure.tools.analyzer.utils (clojure.tools.analyzer.env),
 metabase.query-processor.middleware.auto-bucket-datetimes
 (toucan.db
  schema.core
  metabase.util.schema
  metabase.models.field
  metabase.mbql.util
  metabase.mbql.schema
  metabase.mbql.predicates
  medley.core
  clojure.walk
  clojure.set),
 metabase.task-test
 (schema.core
  metabase.util.schema
  metabase.test.fixtures
  metabase.test
  metabase.task
  clojurewerkz.quartzite.triggers
  clojurewerkz.quartzite.scheduler
  clojurewerkz.quartzite.schedule.cron
  clojurewerkz.quartzite.jobs
  clojure.test),
 metabase.server.middleware.security-test
 (metabase.test.util metabase.server.middleware.security metabase.config clojure.test clojure.string),
 io.aviso.columns (io.aviso.writer io.aviso.ansi clojure.string),
 metabase.models.pulse-channel
 (toucan.models
  toucan.db
  schema.core
  metabase.util
  metabase.models.user
  metabase.models.pulse-channel-recipient
  metabase.models.interface
  medley.core
  clojure.set
  cheshire.generate),
 metabase.query-processor.middleware.add-dimension-projections-test
 (toucan.hydrate
  metabase.test.fixtures
  metabase.test
  metabase.query-processor.middleware.add-dimension-projections
  medley.core
  clojure.test),
 clojure.tools.namespace.dependency (clojure.set),
 clojure.java.classpath (clojure.java.io),
 metabase.task.task-history-cleanup
 (metabase.util.i18n
  metabase.task
  metabase.models.task-history
  clojurewerkz.quartzite.triggers
  clojurewerkz.quartzite.schedule.cron
  clojurewerkz.quartzite.jobs
  clojure.tools.logging),
 metabase.driver.common.parameters.operators-test
 (schema.core metabase.query-processor.error-type metabase.driver.common.parameters.operators clojure.test),
 java-time.potemkin.util (clj-tuple),
 kixi.stats.protocols #{},
 metabase.query-processor.streaming.csv-test
 (metabase.test.data.dataset-definitions metabase.test clojure.test clojure.data.csv cheshire.core),
 metabase.test.domain-entities (metabase.domain-entities.specs clojure.test),
 clojure.tools.analyzer.passes.jvm.validate-loop-locals
 (clojure.tools.analyzer.passes.jvm.analyze-host-expr
  clojure.tools.analyzer.passes.jvm.infer-tag
  clojure.tools.analyzer.passes.jvm.classify-invoke
  clojure.tools.analyzer.passes.jvm.validate
  clojure.tools.analyzer.jvm.utils
  clojure.tools.analyzer.ast),
 metabase.types-test (metabase.types.coercion-hierarchies metabase.types clojure.test),
 ring.middleware.head #{},
 flatland.ordered.map (clojure.string flatland.ordered.set flatland.ordered.common),
 metabase.query-processor-test.case-test (metabase.test metabase.models metabase.driver clojure.test),
 metabase.query-processor.middleware.validate-temporal-bucketing-test
 (toucan.db
  metabase.test
  metabase.query-processor.middleware.validate-temporal-bucketing
  metabase.models
  clojure.test),
 manifold.stream.core (manifold.utils),
 metabase.query-processor.middleware.process-userland-query-test
 (metabase.test
  metabase.query-processor.util
  metabase.query-processor.middleware.process-userland-query
  metabase.query-processor.error-type
  metabase.query-processor.context
  clojure.test
  clojure.core.async),
 metabase.test.data.mbql-query-impl (toucan.db metabase.models.field clojure.walk clojure.string),
 instaparse.auto-flatten-seq (clojure.core.protocols),
 buddy.util.ecdsa #{},
 clojurewerkz.quartzite.triggers (clojurewerkz.quartzite.conversion),
 clj-time.format (clojure.set clj-time.core),
 metabase.test-runner.parallel (eftest.runner clojure.test),
 clojure.core.rrb-vector.rrbt
 (clojure.core.reducers
  clojure.core.protocols
  clojure.core.rrb-vector.fork-join
  clojure.core.rrb-vector.transients
  clojure.core.rrb-vector.nodes
  clojure.core.rrb-vector.protocols
  clojure.core.rrb-vector.parameters),
 metabase.query-processor.middleware.splice-params-in-response-test
 (metabase.test.data
  metabase.test
  metabase.query-processor.middleware.splice-params-in-response
  metabase.query-processor
  metabase.driver
  clojure.test),
 metabase.sync.analyze.classify-test
 (toucan.util.test
  metabase.util
  metabase.sync.interface
  metabase.sync.analyze.classify
  metabase.models.table
  metabase.models.field-values
  metabase.models.field
  metabase.models.database
  clojure.test),
 metabase.test.transforms (metabase.transforms.specs clojure.test),
 metabase.util.cron-test (metabase.util.cron clojure.test),
 metabase.plugins.classloader-test (metabase.plugins.classloader clojure.test),
 buddy.core.keys.jwk.ec (cheshire.core buddy.core.hash buddy.core.keys.jwk.proto),
 buddy.sign.jwe
 (buddy.sign.util
  buddy.sign.jwe.cek
  buddy.sign.jws
  buddy.util.deflate
  buddy.core.keys
  buddy.core.crypto
  buddy.core.nonce
  buddy.core.bytes
  buddy.core.codecs.base64
  buddy.core.codecs
  cheshire.core
  clojure.string),
 metabase.query-processor.middleware.parameters
 (schema.core
  metabase.util
  metabase.query-processor.middleware.parameters.native
  metabase.query-processor.middleware.parameters.mbql
  metabase.query-processor.interface
  metabase.mbql.util
  metabase.mbql.schema
  metabase.mbql.normalize
  medley.core
  clojure.tools.logging
  clojure.set
  clojure.data),
 metabase.server.middleware.offset-paging (metabase.util.i18n metabase.server.middleware.security medley.core),
 metabase.domain-entities.core
 (schema.core
  metabase.util
  metabase.models.table
  metabase.models.card
  metabase.mbql.util
  metabase.domain-entities.specs
  medley.core
  clojure.string),
 manifold.utils (manifold.executor clojure.tools.logging),
 metabase.models.field
 (toucan.models
  toucan.hydrate
  toucan.db
  metabase.util.i18n
  metabase.util
  metabase.models.permissions
  metabase.models.interface
  metabase.models.humanization
  metabase.models.field-values
  metabase.models.dimension
  medley.core
  clojure.tools.logging
  clojure.string
  clojure.core.memoize),
 metabase.metabot.command-test
 (toucan.db
  metabase.util.i18n
  metabase.util
  metabase.test.util
  metabase.test.data
  metabase.test
  metabase.models.permissions-group
  metabase.models.permissions
  metabase.models.collection
  metabase.models.card
  metabase.metabot.test-util
  metabase.metabot.command
  clojure.test
  clojure.string),
 metabase.sync.analyze.fingerprint
 (toucan.db
  schema.core
  redux.core
  metabase.util.schema
  metabase.util.i18n
  metabase.util
  metabase.sync.util
  metabase.sync.interface
  metabase.sync.analyze.fingerprint.fingerprinters
  metabase.query-processor.store
  metabase.models.field
  metabase.db.util
  metabase.db.metadata-queries
  honeysql.helpers
  clojure.tools.logging
  clojure.set),
 metabase.query-processor.middleware.parameters.mbql
 (toucan.db
  schema.core
  metabase.models.params
  metabase.models.field
  metabase.mbql.util
  metabase.mbql.schema
  metabase.driver.common.parameters.operators
  metabase.driver.common.parameters.dates
  metabase.driver.common.parameters),
 cheshire.generate #{},
 metabase.query-processor-test.failure-test
 (schema.core
  metabase.util.schema
  metabase.test
  metabase.query-processor.interface
  metabase.query-processor
  clojure.test),
 metabase.db.connection-pool-setup-test
 (metabase.test metabase.db.connection-pool-setup metabase.connection-pool clojure.test clojure.java.jdbc),
 metabase.driver.sql.parameters.substitute
 (metabase.util.i18n
  metabase.query-processor.error-type
  metabase.driver.sql.parameters.substitution
  metabase.driver.common.parameters
  metabase.driver
  clojure.string),
 clojure.tools.analyzer.jvm.utils
 (clojure.java.io
  clojure.core.memoize
  clojure.string
  clojure.reflect
  clojure.tools.analyzer.env
  clojure.tools.analyzer.utils),
 metabase.models.permissions.parse-test (metabase.models.permissions.parse clojure.test),
 metabase.util
 (weavejester.dependency
  ring.util.codec
  potemkin
  metabase.util.i18n
  metabase.shared.util
  metabase.config
  medley.core
  flatland.ordered.map
  colorize.core
  clojure.walk
  clojure.tools.namespace.find
  clojure.tools.logging
  clojure.string
  clojure.set
  clojure.pprint
  clojure.math.numeric-tower
  clojure.java.classpath
  clojure.data),
 metabase.sync.analyze.classifiers.text-fingerprint
 (schema.core metabase.util.schema metabase.sync.util metabase.sync.interface clojure.tools.logging),
 metabase.api.setup
 (compojure.core
  compojure.core
  compojure.core
  toucan.models
  toucan.db
  schema.core
  metabase.util.schema
  metabase.util.i18n
  metabase.util
  metabase.sync.schedules
  metabase.setup
  metabase.server.middleware.session
  metabase.public-settings
  metabase.models.user
  metabase.models.table
  metabase.models.setting.cache
  metabase.models.session
  metabase.models.segment
  metabase.models.pulse
  metabase.models.metric
  metabase.models.database
  metabase.models.dashboard
  metabase.models.collection
  metabase.models.card
  metabase.integrations.slack
  metabase.events
  metabase.email
  metabase.driver
  metabase.api.database
  metabase.api.common
  compojure.core),
 clojure.core.rrb-vector.fork-join (clojure.core.reducers),
 postal.sendmail (postal.message),
 metabase.api.dashboard
 (compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  toucan.hydrate
  toucan.db
  schema.core
  metabase.util.schema
  metabase.util.i18n
  metabase.util
  metabase.related
  metabase.query-processor.util
  metabase.query-processor.middleware.constraints
  metabase.query-processor.error-type
  metabase.models.revision.last-edit
  metabase.models.revision
  metabase.models.query
  metabase.models.params.chain-filter
  metabase.models.params
  metabase.models.interface
  metabase.models.field
  metabase.models.dashboard-favorite
  metabase.models.dashboard-card
  metabase.models.dashboard
  metabase.models.collection
  metabase.models.card
  metabase.mbql.util
  metabase.events
  metabase.automagic-dashboards.populate
  metabase.api.common
  compojure.core
  clojure.tools.logging
  clojure.set),
 metabase.async.streaming-response
 (ring.util.servlet
  ring.util.response
  pretty.core
  potemkin.types
  metabase.util.i18n
  metabase.util
  metabase.server.protocols
  metabase.async.util
  metabase.async.streaming-response.thread-pool
  compojure.response
  clojure.tools.logging
  clojure.core.async
  cheshire.core),
 ring.util.time (clojure.string),
 clojure.core.logic.protocols #{},
 metabase.sync.analyze.classifiers.category
 (schema.core
  metabase.util.schema
  metabase.sync.util
  metabase.sync.interface
  metabase.models.field-values
  metabase.models.field
  clojure.tools.logging),
 eftest.runner
 (eftest.output-capture
  eftest.report.progress
  eftest.report
  clojure.tools.namespace.find
  clojure.test
  clojure.java.io),
 metabase.sync.interface
 (schema.core
  metabase.util.schema
  metabase.util
  metabase.models.table
  metabase.models.field
  metabase.models.database
  clj-time.core),
 compojure.core (medley.core ring.util.codec ring.middleware.head clout.core clojure.tools.macro compojure.response),
 metabase.http-client
 (schema.core
  ring.util.codec
  metabase.util.schema
  metabase.util.date-2
  metabase.util
  metabase.test.util.log
  metabase.test.initialize
  metabase.server.middleware.session
  metabase.config
  java-time
  clojure.walk
  clojure.tools.logging
  clojure.test
  clojure.string
  clj-http.client
  cheshire.core),
 instaparse.core
 (instaparse.util
  instaparse.viz
  instaparse.line-col
  instaparse.combinators-source
  instaparse.repeat
  instaparse.abnf
  instaparse.transform
  instaparse.reduction
  instaparse.print
  instaparse.failure
  instaparse.cfg
  instaparse.gll
  clojure.walk
  instaparse.macros),
 metabase.query-processor.middleware.add-timezone-info (metabase.query-processor.timezone),
 metabase.driver.common.parameters.dates-test
 (metabase.util.date-2 metabase.test metabase.driver.common.parameters.dates java-time clojure.test),
 metabase.sync.analyze.classifiers.name
 (schema.core
  metabase.util.schema
  metabase.sync.util
  metabase.sync.interface
  metabase.models.database
  metabase.config
  clojure.tools.logging
  clojure.string),
 clojure.tools.reader
 (clojure.tools.reader.default-data-readers
  clojure.tools.reader.impl.commons
  clojure.tools.reader.impl.errors
  clojure.tools.reader.impl.utils
  clojure.tools.reader.reader-types),
 metabase.models.pulse-channel-recipient (toucan.models),
 metabase.query-processor.middleware.constraints #{},
 metabase.query-processor-test.field-visibility-test
 (metabase.util metabase.test.util metabase.test metabase.query-processor-test metabase.models.field clojure.test),
 clojure.main #{},
 metabase.query-processor.middleware.add-rows-truncated
 (metabase.query-processor.util metabase.query-processor.interface),
 dynapath.util (dynapath.defaults dynapath.dynamic-classpath),
 metabase.server.request.util
 (user-agent
  schema.core
  metabase.util.schema
  metabase.util.i18n
  metabase.util
  metabase.public-settings
  metabase.config
  java-time
  clojure.tools.logging
  clojure.string
  clj-http.client
  cheshire.core),
 metabase.pulse.render.test-util #{},
 ring.mock.request (ring.util.codec clojure.string cheshire.core),
 clojure.tools.namespace.parse (clojure.set clojure.tools.reader),
 metabase.shared.util.i18n (net.cgrand.macrovich),
 metabase.query-processor-test.alternative-date-test
 (metabase.util
  metabase.test
  metabase.query-processor-test
  metabase.query-processor
  metabase.driver.sql.query-processor
  metabase.driver.sql-jdbc.test-util
  metabase.driver
  clojure.test),
 metabase.driver.sql.util.unprepare
 (metabase.util.i18n
  metabase.util
  metabase.driver.sql.util
  metabase.driver
  java-time
  clojure.tools.logging
  clojure.string),
 metabase.test.data.env.impl (metabase.util environ.core clojure.string),
 metabase.models.dependency-test
 (toucan.models toucan.db metabase.test.fixtures metabase.test metabase.models.dependency clojure.test),
 metabase.sync.analyze.query-results-test
 (metabase.util
  metabase.test.util
  metabase.test.sync
  metabase.test.mock.util
  metabase.test.data
  metabase.test
  metabase.sync.analyze.query-results
  metabase.sync.analyze.fingerprint.insights
  metabase.sync.analyze.fingerprint.fingerprinters
  metabase.query-processor.test-util
  metabase.query-processor
  metabase.models.card
  metabase.mbql.schema
  clojure.test
  clojure.string),
 metabase.sync.sync-metadata.fields.fetch-metadata
 (toucan.db
  schema.core
  metabase.util
  metabase.sync.sync-metadata.fields.common
  metabase.sync.interface
  metabase.sync.fetch-metadata
  metabase.models.table
  metabase.models.field
  medley.core),
 pjstadig.print (clojure.pprint),
 metabase.api.tiles-test (schema.core metabase.test clojure.test cheshire.core),
 java-time.pre-java8 (java-time.defconversion java-time.temporal java-time.local java-time.convert),
 java-time.adjuster (java-time.single-field java-time.util),
 metabase.test.data.env (metabase.test.initialize metabase.test.data.env.impl colorize.core clojure.tools.logging),
 metabase.driver.common.parameters.operators
 (schema.core metabase.query-processor.error-type metabase.models.params metabase.mbql.schema),
 metabase.api.pulse-test
 (toucan.db
  schema.core
  metabase.util
  metabase.test.mock.util
  metabase.test
  metabase.server.middleware.util
  metabase.pulse.render.png
  metabase.models.pulse-test
  metabase.models.pulse
  metabase.models.permissions-group
  metabase.models.permissions
  metabase.models
  metabase.integrations.slack
  metabase.http-client
  metabase.api.pulse
  metabase.api.card-test
  clojure.test),
 metabase.api.preview-embed-test
 (metabase.util
  metabase.test.util
  metabase.test
  metabase.models.dashboard
  metabase.models.card
  metabase.api.pivots
  metabase.api.embed-test
  clojure.test),
 metabase.pulse.render.color
 (schema.core metabase.util.i18n metabase.pulse.render.js-engine clojure.java.io cheshire.core),
 metabase.models.dashboard-card
 (toucan.models
  toucan.hydrate
  toucan.db
  schema.core
  metabase.util.schema
  metabase.util
  metabase.models.pulse-card
  metabase.models.interface
  metabase.models.dashboard-card-series
  metabase.models.card
  metabase.events
  metabase.db.util
  clojure.set),
 metabase.search.scoring
 (schema.core
  potemkin.types
  metabase.util
  metabase.search.config
  metabase.plugins.classloader
  java-time
  clojure.tools.logging
  clojure.string
  clojure.core.memoize),
 buddy.core.codecs.base64 (buddy.core.codecs),
 metabase.query-processor-test.nested-field-test (metabase.test clojure.test),
 metabase.query-processor-test.parameters-test
 (metabase.util metabase.test metabase.query-processor metabase.models metabase.driver medley.core clojure.test),
 metabase.util.ui-logic #{},
 metabase.models.user
 (toucan.models
  toucan.db
  schema.core
  metabase.util.schema
  metabase.util.i18n
  metabase.util
  metabase.public-settings
  metabase.plugins.classloader
  metabase.models.session
  metabase.models.permissions-group-membership
  metabase.models.permissions-group
  metabase.models.permissions
  metabase.models.collection
  clojure.tools.logging
  clojure.string
  clojure.data
  cemerick.friend.credentials),
 stencil.core (stencil.utils clojure.java.io quoin.text stencil.ast stencil.parser stencil.loader clojure.string),
 metabase.pulse.render.png-test (schema.core metabase.test metabase.pulse.render.png clojure.test),
 metabase.query-processor.context.default
 (metabase.util.i18n
  metabase.util
  metabase.query-processor.error-type
  metabase.query-processor.context
  metabase.driver
  metabase.config
  clojure.tools.logging
  clojure.core.async),
 clout.core (instaparse.core clojure.set clojure.string),
 metabase.sync.analyze.classifiers.no-preview-display-test
 (metabase.sync.analyze.classifiers.no-preview-display metabase.models.field clojure.test),
 manifold.time (manifold.utils clojure.string manifold.executor clojure.tools.logging),
 schema.spec.variant (schema.spec.core schema.utils schema.macros),
 metabase.query-processor.middleware.cache.impl-test
 (potemkin.types metabase.query-processor.middleware.cache.impl clojure.test clojure.core.async),
 metabase.metabot.slack (metabase.util.i18n metabase.integrations.slack clojure.tools.logging),
 clojure.tools.analyzer.passes.jvm.infer-tag
 (clojure.tools.analyzer.passes.jvm.fix-case-test
  clojure.tools.analyzer.passes.jvm.analyze-host-expr
  clojure.tools.analyzer.passes.jvm.annotate-host-info
  clojure.tools.analyzer.passes.jvm.annotate-tag
  clojure.tools.analyzer.passes.trim
  clojure.set
  clojure.tools.analyzer.env
  clojure.tools.analyzer.jvm.utils
  clojure.tools.analyzer.utils),
 metabase.sync.field-values-test
 (toucan.db
  metabase.test.data.one-off-dbs
  metabase.test.data
  metabase.test
  metabase.sync.util-test
  metabase.sync
  metabase.models.table
  metabase.models.field-values
  metabase.models.field
  clojure.test),
 metabase.query-processor.middleware.constraints-test
 (metabase.test metabase.query-processor.middleware.constraints clojure.test),
 yaml.writer (flatland.ordered.map flatland.ordered.set),
 buddy.core.dsa (clojure.java.io buddy.core.codecs),
 metabase.automagic-dashboards.core-test
 (toucan.db
  schema.core
  metabase.util.i18n
  metabase.util.date-2
  metabase.util
  metabase.test.automagic-dashboards
  metabase.test
  metabase.query-processor.async
  metabase.models.query
  metabase.models.permissions-group
  metabase.models.permissions
  metabase.models.field
  metabase.models
  metabase.mbql.schema
  metabase.automagic-dashboards.rules
  metabase.automagic-dashboards.core
  metabase.api.common
  java-time
  clojure.test
  clojure.core.async),
 stencil.utils (quoin.map-access clojure.string),
 metabase.test.data.interface
 (toucan.db
  schema.core
  pretty.core
  potemkin.types
  metabase.util.schema
  metabase.util.date-2
  metabase.util
  metabase.test.initialize
  metabase.test-runner.init
  metabase.query-processor
  metabase.plugins.classloader
  metabase.models.table
  metabase.models.field
  metabase.models.database
  metabase.driver
  metabase.db
  medley.core
  environ.core
  clojure.tools.reader.edn
  clojure.string),
 metabase.types.coercion-hierarchies (clojure.set),
 instaparse.failure (instaparse.print),
 ring.middleware.json
 (ring.util.request ring.util.response ring.util.io ring.core.protocols clojure.java.io cheshire.parse cheshire.core),
 metabase.pulse.render.body-test
 (schema.core
  metabase.pulse.render.test-util
  metabase.pulse.render.common
  metabase.pulse.render.body
  hiccup.core
  clojure.walk
  clojure.test),
 metabase.models.revision
 (toucan.models
  toucan.hydrate
  toucan.db
  potemkin.types
  metabase.util.i18n
  metabase.util
  metabase.models.user
  metabase.models.revision.diff
  clojure.data),
 metabase.pulse.render.datetime
 (schema.core
  metabase.util.schema
  metabase.util.i18n
  metabase.util.date-2
  java-time
  clojure.tools.logging
  clojure.string),
 metabase.pulse.render.sparkline-test
 (metabase.test metabase.pulse.render.sparkline metabase.models.card java-time clojure.test),
 metabase.api.session-test
 (toucan.db
  schema.core
  metabase.util.schema
  metabase.util
  metabase.test.integrations.ldap
  metabase.test.fixtures
  metabase.test.data.users
  metabase.test
  metabase.server.middleware.session
  metabase.public-settings
  metabase.models.user
  metabase.models.setting
  metabase.models.session
  metabase.models
  metabase.http-client
  metabase.email-test
  metabase.driver.h2
  metabase.api.session
  clojure.test
  clj-http.client
  cheshire.core),
 metabase.sync.field-values
 (toucan.db
  schema.core
  metabase.util.i18n
  metabase.util
  metabase.sync.util
  metabase.sync.interface
  metabase.models.field-values
  metabase.models.field
  clojure.tools.logging),
 metabase.driver.mysql
 (metabase.util.ssh
  metabase.util.i18n
  metabase.util.honeysql-extensions
  metabase.util
  metabase.query-processor.timezone
  metabase.driver.sql.util.unprepare
  metabase.driver.sql.query-processor
  metabase.driver.sql-jdbc.sync
  metabase.driver.sql-jdbc.execute
  metabase.driver.sql-jdbc.connection
  metabase.driver.sql-jdbc.common
  metabase.driver.sql-jdbc
  metabase.driver.common
  metabase.driver
  metabase.db.spec
  java-time
  honeysql.core
  clojure.tools.logging
  clojure.string
  clojure.set
  clojure.java.jdbc),
 ring.util.servlet (ring.core.protocols clojure.string clojure.java.io),
 metabase.cmd
 (metabase.util.i18n
  metabase.util
  metabase.plugins.classloader
  metabase.mbql.util
  metabase.config
  medley.core
  environ.core
  clojure.tools.logging
  clojure.string),
 instaparse.macros #{},
 metabase.cmd.copy-test
 (toucan.models metabase.util metabase.plugins.classloader metabase.cmd.copy flatland.ordered.map clojure.test),
 metabase.events.activity-feed
 (toucan.db
  metabase.util.i18n
  metabase.util
  metabase.query-processor
  metabase.models.table
  metabase.models.dashboard
  metabase.models.card
  metabase.models.activity
  metabase.mbql.util
  metabase.events
  clojure.tools.logging
  clojure.core.async),
 buddy.core.keys.pem (clojure.java.io),
 byte-streams.utils (clj-tuple),
 metabase.models.dashboard-favorite (toucan.models),
 clojure.test.check.clojure-test
 (clojure.test.check.impl clojure.test.check.clojure-test.assertions clojure.test.check clojure.test),
 metabase.driver.impl
 (schema.core metabase.util.i18n metabase.util metabase.plugins.classloader clojure.tools.logging),
 metabase.query-processor.middleware.permissions
 (toucan.db
  schema.core
  metabase.util.schema
  metabase.util.i18n
  metabase.query-processor.middleware.resolve-referenced
  metabase.query-processor.error-type
  metabase.models.query.permissions
  metabase.models.permissions
  metabase.models.interface
  metabase.models.card
  metabase.api.common
  clojure.tools.logging
  clojure.set),
 taoensso.nippy.utils (taoensso.encore clojure.string),
 metabase.models.login-history
 (toucan.models
  toucan.db
  metabase.util.i18n
  metabase.util.date-2
  metabase.server.request.util
  metabase.models.setting
  metabase.email.messages
  java-time
  clojure.tools.logging),
 aleph.http
 (aleph.netty
  aleph.http.client-middleware
  aleph.http.client
  aleph.http.server
  aleph.flow
  manifold.executor
  manifold.deferred
  clojure.string),
 metabase.integrations.common
 (toucan.db
  metabase.util.i18n
  metabase.util
  metabase.models.permissions-group-membership
  metabase.models.permissions-group
  clojure.tools.logging
  clojure.set
  clojure.data),
 metabase.api.search-test
 (toucan.db
  schema.core
  metabase.util
  metabase.test
  metabase.search.config
  metabase.models.permissions-group
  metabase.models.permissions
  metabase.models
  metabase.api.search
  honeysql.core
  clojure.test
  clojure.string),
 metabase.api.table-test
 (toucan.db
  metabase.util
  metabase.timeseries-query-processor-test.util
  metabase.test.util
  metabase.test.mock.util
  metabase.test
  metabase.server.middleware.util
  metabase.models.table
  metabase.models.permissions-group
  metabase.models.permissions
  metabase.models
  metabase.mbql.util
  metabase.http-client
  metabase.driver.util
  metabase.api.table
  medley.core
  clojure.walk
  clojure.test
  cheshire.core),
 metabase.mbql.normalize
 (metabase.util.i18n
  metabase.util.i18n
  metabase.util.i18n
  metabase.util.i18n
  metabase.util.i18n
  metabase.util.i18n
  metabase.shared.util.log
  metabase.shared.util.i18n
  metabase.mbql.util.match
  metabase.mbql.util
  medley.core
  clojure.walk
  clojure.set),
 kixi.stats.math #{},
 metabase.sync.sync-metadata.fields.fetch-metadata-test
 (toucan.db
  metabase.util
  metabase.test.mock.toucanery
  metabase.test
  metabase.sync.sync-metadata.fields.fetch-metadata
  metabase.sync.sync-metadata
  metabase.models.table
  metabase.models.database
  medley.core
  clojure.walk
  clojure.test),
 metabase.api.field-test
 (toucan.hydrate
  toucan.db
  ring.util.codec
  metabase.util
  metabase.timeseries-query-processor-test.util
  metabase.test.fixtures
  metabase.test
  metabase.models
  metabase.driver.util
  metabase.api.field
  medley.core
  clojure.test),
 metabase.events.activity-feed-test
 (toucan.db
  metabase.util
  metabase.test
  metabase.models
  metabase.mbql.schema
  metabase.events.activity-feed
  clojure.test),
 metabase.driver.sql.query-processor.empty-string-is-null-test
 (metabase.driver.sql.query-processor.empty-string-is-null
  metabase.driver.sql.query-processor
  metabase.driver
  metabase.driver.sql
  clojure.test),
 metabase.api.card-test
 (toucan.db
  schema.core
  metabase.util.schema
  metabase.util
  metabase.test
  metabase.server.middleware.util
  metabase.query-processor.middleware.results-metadata
  metabase.query-processor.middleware.constraints
  metabase.query-processor.async
  metabase.query-processor
  metabase.models.user
  metabase.models.revision
  metabase.models.permissions-group
  metabase.models.permissions
  metabase.models
  metabase.http-client
  metabase.driver.sql-jdbc.execute
  metabase.api.pivots
  metabase.api.card
  medley.core
  java-time
  dk.ative.docjure.spreadsheet
  clojure.test
  clojure.string
  cheshire.core),
 metabase.server.middleware.exceptions
 (metabase.util.i18n metabase.server.middleware.security clojure.tools.logging clojure.string clojure.java.jdbc),
 clojure.pprint (clojure.walk),
 metabase.driver.sql-jdbc.sync.interface (metabase.driver),
 flatland.ordered.common #{},
 clojure.tools.analyzer.passes.jvm.fix-case-test (clojure.tools.analyzer.passes.add-binding-atom),
 metabase.domain-entities.core-test
 (toucan.hydrate
  metabase.test.domain-entities
  metabase.test.data
  metabase.models.table
  metabase.models.field
  metabase.domain-entities.core
  clojure.test),
 metabase.automagic-dashboards.core
 (toucan.db
  schema.core
  ring.util.codec
  metabase.util.i18n
  metabase.util.date-2
  metabase.util
  metabase.sync.analyze.classify
  metabase.related
  metabase.query-processor.util
  metabase.models.table
  metabase.models.segment
  metabase.models.query
  metabase.models.metric
  metabase.models.interface
  metabase.models.field
  metabase.models.database
  metabase.models.card
  metabase.mbql.util
  metabase.mbql.normalize
  metabase.driver
  metabase.automagic-dashboards.visualization-macros
  metabase.automagic-dashboards.rules
  metabase.automagic-dashboards.populate
  metabase.automagic-dashboards.filters
  medley.core
  kixi.stats.math
  kixi.stats.core
  java-time
  clojure.zip
  clojure.walk
  clojure.tools.logging
  clojure.string
  clojure.math.combinatorics
  cheshire.core
  buddy.core.codecs),
 metabase.models.pulse-test
 (toucan.util.test
  toucan.hydrate
  toucan.db
  schema.core
  metabase.util
  metabase.test.mock.util
  metabase.test
  metabase.models.table
  metabase.models.pulse-channel-recipient
  metabase.models.pulse-channel
  metabase.models.pulse-card
  metabase.models.pulse
  metabase.models.permissions
  metabase.models.interface
  metabase.models.database
  metabase.models.dashboard-card
  metabase.models.dashboard
  metabase.models.collection
  metabase.models.card
  metabase.api.common
  medley.core
  clojure.test),
 metabase.automagic-dashboards.filters-test (metabase.automagic-dashboards.filters clojure.test),
 clojure.core.async.impl.protocols #{},
 taoensso.nippy
 (taoensso.nippy.encryption
  taoensso.nippy.compression
  taoensso.nippy.utils
  taoensso.encore
  clojure.java.io
  clojure.string),
 aleph.http.client-middleware
 (cheshire.core
  aleph.http.core
  clojure.edn
  byte-streams
  manifold.executor
  manifold.stream
  manifold.deferred
  clojure.walk
  clojure.string
  clojure.stacktrace
  potemkin),
 fipp.util #{},
 metabase.sync.util
 (toucan.db
  taoensso.nippy
  schema.core
  ring.util.codec
  metabase.util.schema
  metabase.util.i18n
  metabase.util.date-2
  metabase.util
  metabase.sync.interface
  metabase.query-processor.interface
  metabase.models.task-history
  metabase.models.table
  metabase.events
  metabase.driver.util
  metabase.driver
  medley.core
  java-time
  clojure.tools.logging
  clojure.string
  clojure.math.numeric-tower
  buddy.core.hash),
 metabase.models.dashboard-card-series (toucan.models),
 metabase.util.embed-test (metabase.util.embed metabase.test crypto.random clojure.test buddy.sign.jwt),
 metabase.models.collection.root
 (toucan.models
  potemkin.types
  metabase.util
  metabase.public-settings.metastore
  metabase.models.permissions
  metabase.models.interface),
 cemerick.friend.credentials #{},
 metabase.query-processor-test.fields-test (metabase.test metabase.query-processor-test clojure.test),
 buddy.core.nonce #{},
 clj-http.links #{},
 metabase.api.query-description
 (toucan.db
  metabase.util.i18n
  metabase.models.segment
  metabase.models.metric
  metabase.models.field
  metabase.mbql.util
  metabase.mbql.predicates
  clojure.tools.logging
  clojure.string),
 ring.util.mime-type (clojure.string),
 metabase.sync.sync-metadata.comments-test
 (toucan.db
  metabase.util
  metabase.test.data.interface
  metabase.test
  metabase.sync.sync-metadata.tables
  metabase.sync
  metabase.models.table
  metabase.models.field
  metabase.driver
  clojure.test),
 metabase.domain-entities.specs-test (schema.core metabase.domain-entities.specs clojure.test),
 metabase.query-processor.middleware.add-implicit-joins-test
 (schema.core
  metabase.util
  metabase.test.data.interface
  metabase.test
  metabase.query-processor.store
  metabase.query-processor.middleware.add-implicit-joins
  metabase.query-processor
  metabase.driver
  medley.core
  clojure.test),
 clojure.core.async.impl.exec.threadpool (clojure.core.async.impl.concurrent clojure.core.async.impl.protocols),
 schema.spec.leaf (schema.spec.core),
 metabase.query-processor.middleware.limit
 (metabase.query-processor.util metabase.query-processor.interface metabase.mbql.util),
 buddy.core.codecs (clojure.string),
 metabase.sync.sync-metadata.fields.sync-instances
 (toucan.db
  schema.core
  metabase.util.schema
  metabase.util.i18n
  metabase.util
  metabase.sync.util
  metabase.sync.sync-metadata.fields.fetch-metadata
  metabase.sync.sync-metadata.fields.common
  metabase.sync.interface
  metabase.models.humanization
  metabase.models.field
  clojure.tools.logging),
 aleph.http.core
 (potemkin
  byte-streams
  clojure.string
  clojure.set
  clojure.tools.logging
  aleph.netty
  manifold.deferred
  manifold.stream),
 metabase.api.public
 (compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  toucan.hydrate
  toucan.db
  schema.core
  metabase.util.schema
  metabase.util.i18n
  metabase.util.embed
  metabase.util
  metabase.query-processor.streaming
  metabase.query-processor.pivot
  metabase.query-processor.middleware.constraints
  metabase.query-processor.error-type
  metabase.query-processor
  metabase.models.params
  metabase.models.field
  metabase.models.dimension
  metabase.models.dashboard-card-series
  metabase.models.dashboard-card
  metabase.models.dashboard
  metabase.models.card
  metabase.mbql.util
  metabase.mbql.normalize
  metabase.db.util
  metabase.async.util
  metabase.api.field
  metabase.api.dataset
  metabase.api.dashboard
  metabase.api.common
  metabase.api.card
  medley.core
  compojure.core
  clojure.core.async
  cheshire.core),
 metabase.moderation (toucan.db schema.core metabase.util clojure.string),
 metabase.models.dependency (toucan.models toucan.db potemkin.types clojure.set),
 metabase.transforms.materialize
 (toucan.db
  metabase.util
  metabase.query-processor
  metabase.models.collection
  metabase.models.card
  metabase.api.common),
 metabase.query-processor.middleware.annotate-test
 (toucan.util.test
  toucan.db
  metabase.util
  metabase.test
  metabase.query-processor.store
  metabase.query-processor.middleware.annotate
  metabase.query-processor
  metabase.models
  metabase.driver
  clojure.test),
 metabase.driver.util-test (metabase.driver.util clojure.test),
 clojure.tools.reader.impl.inspect #{},
 metabase.models.params.chain-filter.dedupe-joins (clojure.set clojure.core.logic),
 stencil.re-utils #{},
 metabase.query-processor.middleware.upgrade-field-literals (metabase.util metabase.mbql.util clojure.walk),
 metabase.db.connection (metabase.db.env),
 metabase.sync.analyze.query-results
 (schema.core
  redux.core
  metabase.util.schema
  metabase.util.i18n
  metabase.util
  metabase.sync.interface
  metabase.sync.analyze.fingerprint.insights
  metabase.sync.analyze.fingerprint.fingerprinters
  metabase.sync.analyze.classifiers.name
  metabase.mbql.schema
  metabase.mbql.predicates
  metabase.mbql.normalize
  clojure.tools.logging),
 metabase.models.setting
 (toucan.models
  toucan.db
  schema.core
  metabase.util.i18n
  metabase.util.date-2
  metabase.util
  metabase.models.setting.cache
  metabase.events
  medley.core
  environ.core
  clojure.tools.logging
  clojure.string
  clojure.data.csv
  clojure.data
  clojure.core
  cheshire.core),
 metabase.query-processor.middleware.large-int-id (toucan.db metabase.models.field metabase.mbql.util),
 metabase.integrations.slack-test
 (schema.core
  metabase.test.util
  metabase.integrations.slack
  medley.core
  clojure.test
  clojure.java.io
  clojure.core.memoize
  clj-http.fake
  cheshire.core),
 metabase.api.database
 (compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  toucan.hydrate
  toucan.db
  schema.core
  metabase.util.schema
  metabase.util.i18n
  metabase.util.cron
  metabase.util
  metabase.sync.sync-metadata
  metabase.sync.schedules
  metabase.sync.field-values
  metabase.sync.analyze
  metabase.sample-data
  metabase.public-settings
  metabase.models.table
  metabase.models.permissions
  metabase.models.interface
  metabase.models.field-values
  metabase.models.field
  metabase.models.database
  metabase.models.collection
  metabase.models.card
  metabase.mbql.util
  metabase.mbql.schema
  metabase.events
  metabase.driver.util
  metabase.driver
  metabase.config
  metabase.api.table
  metabase.api.common
  medley.core
  compojure.core
  clojure.tools.logging
  clojure.string),
 metabase.sync.sync-metadata.tables
 (toucan.db
  schema.core
  metabase.util.i18n
  metabase.util
  metabase.sync.util
  metabase.sync.sync-metadata.metabase-metadata
  metabase.sync.interface
  metabase.sync.fetch-metadata
  metabase.models.table
  metabase.models.humanization
  clojure.tools.logging
  clojure.string
  clojure.data),
 metabase.query-processor-test.expressions-test
 (metabase.util.date-2
  metabase.util
  metabase.test.data.one-off-dbs
  metabase.test
  metabase.sync
  metabase.query-processor
  metabase.driver
  medley.core
  java-time
  clojure.test
  clojure.string
  clojure.java.jdbc),
 metabase.db.util (toucan.db schema.core metabase.util.schema metabase.util),
 metabase.sync.sync-metadata.fields.common
 (schema.core metabase.util.schema metabase.util.i18n metabase.sync.util metabase.sync.interface clojure.string),
 metabase.api.common-test
 (metabase.util.schema
  metabase.test.data
  metabase.server.middleware.security
  metabase.server.middleware.misc
  metabase.server.middleware.exceptions
  metabase.api.common.internal
  metabase.api.common
  clojure.test),
 metabase.db.setup
 (toucan.db
  schema.core
  metabase.util.schema
  metabase.util.i18n
  metabase.util
  metabase.plugins.classloader
  metabase.models.setting
  metabase.driver.sql-jdbc.connection
  metabase.db.liquibase
  metabase.db.connection
  clojure.tools.logging
  clojure.java.jdbc),
 metabase.util.date-2.common (metabase.util java-time clojure.string),
 metabase.cmd.load-from-h2 (metabase.db.env metabase.db.connection metabase.cmd.copy.h2 metabase.cmd.copy),
 metabase.server.middleware.json
 (ring.util.response ring.util.io ring.middleware.json metabase.util.date-2 cheshire.generate cheshire.core),
 metabase.models.permissions-group-test
 (toucan.db
  metabase.util.honeysql-extensions
  metabase.util
  metabase.test.fixtures
  metabase.test
  metabase.models.user
  metabase.models.permissions-group-membership
  metabase.models.permissions-group
  metabase.models.permissions
  metabase.models.database
  clojure.test),
 buddy.util.deflate #{},
 metabase.driver.sql-jdbc.common (clojure.string),
 metabase.models.card
 (toucan.models
  toucan.db
  metabase.util.i18n
  metabase.util
  metabase.server.middleware.session
  metabase.query-processor.util
  metabase.public-settings
  metabase.plugins.classloader
  metabase.moderation
  metabase.models.revision
  metabase.models.query
  metabase.models.permissions
  metabase.models.params
  metabase.models.interface
  metabase.models.field-values
  metabase.models.dependency
  metabase.models.collection
  metabase.mbql.util
  metabase.mbql.normalize
  clojure.tools.logging
  clojure.set),
 metabase.email.messages
 (toucan.db
  stencil.loader
  stencil.core
  metabase.util.urls
  metabase.util.quotation
  metabase.util.i18n
  metabase.util.date-2
  metabase.util
  metabase.query-processor.streaming.interface
  metabase.query-processor.store
  metabase.pulse.render.style
  metabase.pulse.render.body
  metabase.pulse.render
  metabase.public-settings
  metabase.email
  metabase.driver.util
  metabase.driver
  metabase.config
  medley.core
  java-time
  hiccup.core
  clojure.tools.logging
  clojure.string
  clojure.java.io
  clojure.core.cache),
 honeysql.util #{},
 metabase.cmd.rotate-encryption-key-test
 (toucan.models
  toucan.db
  metabase.util.encryption-test
  metabase.util.encryption
  metabase.test.data.interface
  metabase.test
  metabase.models.interface
  metabase.models
  metabase.driver
  metabase.db.spec
  metabase.db.connection
  metabase.cmd.test-util
  metabase.cmd.rotate-encryption-key
  metabase.cmd.load-from-h2
  metabase.cmd
  clojure.test
  clojure.string
  clojure.java.jdbc),
 clojure.tools.analyzer.passes.jvm.classify-invoke
 (clojure.tools.analyzer.passes.jvm.validate clojure.tools.analyzer.jvm.utils clojure.tools.analyzer.utils),
 metabase.query-processor.streaming.xlsx-test (dk.ative.docjure.spreadsheet clojure.test cheshire.generate),
 metabase.driver.sql-jdbc.execute.diagnostic-test
 (metabase.util
  metabase.test
  metabase.driver.sql-jdbc.test-util
  metabase.driver.sql-jdbc.execute.diagnostic
  metabase.driver
  clojure.test),
 clojure.test.check.properties (clojure.test.check.results clojure.test.check.generators),
 metabase.test.redefs (toucan.util.test metabase.test-runner.parallel metabase.plugins.classloader),
 metabase.db (potemkin metabase.db.setup metabase.db.connection-pool-setup metabase.db.connection metabase.config),
 metabase.task.send-pulses
 (schema.core
  metabase.util.i18n
  metabase.task
  metabase.pulse
  metabase.models.task-history
  metabase.models.setting
  metabase.models.pulse-channel
  metabase.models.pulse
  clojurewerkz.quartzite.triggers
  clojurewerkz.quartzite.schedule.cron
  clojurewerkz.quartzite.jobs
  clojure.tools.logging
  clj-time.predicates
  clj-time.core),
 metabase.query-processor.timezone
 (metabase.util.i18n metabase.query-processor.store metabase.driver metabase.config java-time clojure.tools.logging),
 metabase.sync.sync-metadata.fields
 (schema.core
  metabase.util.schema
  metabase.util.i18n
  metabase.sync.util
  metabase.sync.sync-metadata.fields.sync-metadata
  metabase.sync.sync-metadata.fields.sync-instances
  metabase.sync.sync-metadata.fields.fetch-metadata
  metabase.sync.interface
  metabase.models.table),
 metabase.models.revision.last-edit
 (toucan.db schema.core metabase.util.schema medley.core honeysql.core clojure.set clj-time.core),
 metabase.models.permissions
 (toucan.models
  toucan.db
  schema.core
  metabase.util.schema
  metabase.util.regex
  metabase.util.i18n
  metabase.util.honeysql-extensions
  metabase.util
  metabase.plugins.classloader
  metabase.models.permissions.parse
  metabase.models.permissions.delete-sandboxes
  metabase.models.permissions-revision
  metabase.models.permissions-group
  metabase.models.interface
  metabase.config
  metabase.api.common
  medley.core
  clojure.tools.logging
  clojure.string
  clojure.data
  clojure.core.match),
 instaparse.gll
 (instaparse.print instaparse.combinators-source instaparse.reduction instaparse.failure instaparse.auto-flatten-seq),
 metabase.transforms.core
 (toucan.db
  schema.core
  metabase.util.schema
  metabase.util.i18n
  metabase.util
  metabase.transforms.specs
  metabase.transforms.materialize
  metabase.query-processor
  metabase.models.table
  metabase.models.field
  metabase.mbql.util
  metabase.mbql.schema
  metabase.driver
  metabase.domain-entities.specs
  metabase.domain-entities.core
  medley.core),
 clojure.edn #{},
 metabase.test.sync
 (toucan.db
  metabase.test.data
  metabase.test
  metabase.sync
  metabase.models.task-history
  metabase.models.database
  clojure.test),
 hiccup.core (hiccup.util hiccup.compiler),
 metabase.metabot.events-test
 (metabase.metabot.test-util
  metabase.metabot.slack
  metabase.metabot.events
  metabase.metabot.command
  clojure.test
  cheshire.core),
 clojure.core.logic (clojure.string clojure.set clojure.core.logic.protocols),
 hiccup.util (clojure.string),
 metabase.driver.h2
 (metabase.util.ssh
  metabase.util.i18n
  metabase.util.honeysql-extensions
  metabase.util
  metabase.query-processor.store
  metabase.query-processor.error-type
  metabase.plugins.classloader
  metabase.driver.sql.query-processor
  metabase.driver.sql-jdbc.sync
  metabase.driver.sql-jdbc.execute
  metabase.driver.sql-jdbc.connection
  metabase.driver.sql-jdbc
  metabase.driver.common
  metabase.driver
  metabase.db.spec
  metabase.db.jdbc-protocols
  java-time
  honeysql.core
  clojure.tools.logging
  clojure.string),
 metabase.sync.analyze.fingerprint-test
 (toucan.util.test
  toucan.db
  schema.core
  metabase.util
  metabase.test.data
  metabase.test
  metabase.sync.interface
  metabase.sync.analyze.fingerprint.fingerprinters
  metabase.sync.analyze.fingerprint
  metabase.query-processor
  metabase.models.table
  metabase.models.field
  metabase.db.util
  clojure.test),
 metabase.cmd.copy
 (schema.core
  metabase.util.schema
  metabase.util.i18n
  metabase.util
  metabase.models
  metabase.db.setup
  metabase.db.data-migrations
  metabase.db.connection
  honeysql.format
  clojure.tools.logging
  clojure.string
  clojure.java.jdbc),
 metabase.query-processor.middleware.permissions-test
 (schema.core
  metabase.util
  metabase.test
  metabase.query-processor.middleware.permissions
  metabase.query-processor.error-type
  metabase.query-processor
  metabase.models.permissions-group
  metabase.models.permissions
  metabase.models
  metabase.api.common
  clojure.test),
 clj-time.coerce (clj-time.format clj-time.core),
 metabase.query-processor.store-test (metabase.query-processor.store clojure.test),
 clojure.tools.analyzer.passes.jvm.validate
 (clojure.tools.analyzer.jvm.utils
  clojure.tools.analyzer.utils
  clojure.tools.analyzer.passes.jvm.analyze-host-expr
  clojure.tools.analyzer.passes.jvm.infer-tag
  clojure.tools.analyzer.passes.jvm.validate-recur
  clojure.tools.analyzer.passes.cleanup
  clojure.tools.analyzer.env
  clojure.tools.analyzer.ast),
 metabase.query-processor.middleware.resolve-joined-fields
 (schema.core
  metabase.util.schema
  metabase.util.i18n
  metabase.util
  metabase.query-processor.store
  metabase.query-processor.error-type
  metabase.mbql.util
  metabase.mbql.schema
  clojure.tools.logging
  clojure.data),
 clojure.core.async.impl.dispatch (clojure.core.async.impl.exec.threadpool clojure.core.async.impl.protocols),
 metabase.query-processor.context (metabase.async.util),
 puget.color.html (puget.color clojure.string),
 metabase.api.moderation-review-test
 (toucan.db metabase.test metabase.models.moderation-review metabase.models.card clojure.test),
 metabase.models.pulse-card (toucan.models toucan.db schema.core metabase.util.schema metabase.util),
 toucan.db
 (toucan.util
  toucan.models
  honeysql.helpers
  honeysql.format
  honeysql.core
  clojure.tools.logging
  clojure.java.jdbc
  clojure.walk
  clojure.string
  clojure.pprint),
 cheshire.core (cheshire.parse cheshire.generate-seq cheshire.generate cheshire.factory),
 metabase.test-runner.init (metabase.config clojure.pprint),
 metabase.models.session
 (toucan.models
  schema.core
  metabase.util
  metabase.server.request.util
  metabase.server.middleware.misc
  buddy.core.nonce
  buddy.core.codecs),
 metabase.pulse.render.datetime-test (metabase.pulse.render.datetime java-time clojure.test),
 metabase.api.collection
 (compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  toucan.hydrate
  toucan.db
  schema.core
  metabase.util.schema
  metabase.util.honeysql-extensions
  metabase.util
  metabase.server.middleware.offset-paging
  metabase.models.revision.last-edit
  metabase.models.pulse-card
  metabase.models.pulse
  metabase.models.permissions
  metabase.models.native-query-snippet
  metabase.models.interface
  metabase.models.dashboard
  metabase.models.collection.root
  metabase.models.collection.graph
  metabase.models.collection
  metabase.models.card
  metabase.db.env
  metabase.api.common
  metabase.api.card
  medley.core
  honeysql.helpers
  honeysql.core
  compojure.core
  clojure.string),
 metabase.query-processor.middleware.add-rows-truncated-test
 (metabase.test metabase.query-processor.middleware.add-rows-truncated metabase.query-processor clojure.test),
 metabase.util.cron (schema.core metabase.util.schema metabase.util.i18n clojure.string),
 metabase.metabot.events
 (metabase.util.i18n
  metabase.util
  metabase.metabot.slack
  metabase.metabot.command
  clojure.tools.logging
  clojure.string
  clojure.edn
  cheshire.core),
 metabase.db.metadata-queries-test
 (metabase.test
  metabase.models.table
  metabase.models.field
  metabase.models.database
  metabase.models
  metabase.driver.sql-jdbc.test-util
  metabase.driver
  metabase.db.metadata-queries
  clojure.test),
 metabase.timeseries-query-processor-test
 (metabase.timeseries-query-processor-test.util metabase.test metabase.query-processor-test clojure.test),
 metabase.server.middleware.ssl-test
 (ring.util.response ring.mock.request metabase.test.util metabase.server.middleware.ssl clojure.test),
 clojure.java.io #{},
 clojure.spec.gen.alpha #{},
 clojure.tools.analyzer.passes.jvm.annotate-loops (clojure.tools.analyzer.ast),
 metabase.api.native-query-snippet-test
 (toucan.util.test
  toucan.db
  schema.core
  metabase.util.schema
  metabase.test
  metabase.models.native-query-snippet
  metabase.models
  clojure.test
  clojure.string),
 metabase.test.data.datasets
 (metabase.test.data.interface metabase.test.data.env metabase.driver colorize.core clojure.test),
 yaml.reader (flatland.ordered.map flatland.ordered.set),
 metabase.test.integrations.ldap (metabase.util metabase.test.util clojure.java.io),
 metabase.util.password (metabase.util metabase.config clojure.string clojure.java.io cemerick.friend.credentials),
 puget.printer
 (puget.dispatch puget.color.html puget.color.ansi puget.color fipp.visit fipp.engine clojure.string arrangement.core),
 clojurewerkz.quartzite.schedule.cron #{},
 metabase.models.query-execution (toucan.models schema.core metabase.util.i18n metabase.util metabase.mbql.schema),
 throttle.core (clojure.math.numeric-tower),
 metabase.driver.h2-test
 (metabase.util.honeysql-extensions
  metabase.test.util
  metabase.test
  metabase.query-processor
  metabase.models
  metabase.driver.sql.query-processor
  metabase.driver.h2
  metabase.driver
  metabase.db.spec
  honeysql.core
  clojure.test
  clojure.string
  clojure.java.jdbc),
 metabase.query-processor.test-util
 (toucan.db
  schema.core
  metabase.util.schema
  metabase.util
  metabase.test.data
  metabase.query-processor.timezone
  metabase.query-processor.store
  metabase.query-processor.middleware.add-implicit-joins
  metabase.query-processor
  metabase.models.table
  metabase.models.field
  metabase.mbql.util
  metabase.driver
  clojure.test),
 metabase.models.activity
 (toucan.models
  toucan.db
  metabase.util
  metabase.models.segment
  metabase.models.pulse
  metabase.models.metric
  metabase.models.interface
  metabase.models.dashboard
  metabase.models.card
  metabase.events
  metabase.api.common),
 metabase.driver.common.parameters.parse
 (schema.core
  metabase.util.i18n
  metabase.util
  metabase.query-processor.error-type
  metabase.driver.common.parameters
  clojure.tools.logging
  clojure.string),
 metabase.test.data.dataset-definitions (metabase.util.date-2 metabase.test.data.interface medley.core java-time),
 metabase.public-settings-test
 (metabase.util.i18n
  metabase.test.fixtures
  metabase.test
  metabase.public-settings
  metabase.models.setting
  clojure.test),
 metabase.mbql.normalize-test (metabase.mbql.normalize clojure.test clojure.set),
 metabase.task
 (toucan.db
  schema.core
  metabase.util.i18n
  metabase.util
  metabase.plugins.classloader
  metabase.db
  clojurewerkz.quartzite.scheduler
  clojure.tools.logging
  clojure.string
  clojure.java.jdbc),
 metabase.query-processor.middleware.add-source-metadata
 (schema.core
  metabase.util.i18n
  metabase.query-processor.store
  metabase.query-processor.interface
  metabase.mbql.util
  metabase.mbql.schema
  metabase.api.common
  clojure.walk
  clojure.tools.logging),
 metabase.api.common.internal
 (schema.core
  potemkin.types
  metabase.util.schema
  metabase.util.i18n
  metabase.util
  metabase.config
  metabase.async.streaming-response
  clojure.tools.logging
  clojure.string),
 clojure.instant #{},
 metabase.query-processor.middleware.cache.impl
 (taoensso.nippy metabase.util.i18n metabase.util metabase.public-settings clojure.tools.logging clojure.core.async),
 metabase.sync-test
 (toucan.db
  metabase.util
  metabase.test.util
  metabase.test.mock.util
  metabase.test
  metabase.sync
  metabase.models.table
  metabase.models.field
  metabase.models.database
  metabase.driver
  clojure.test),
 java-time
 (java-time.mock
  java-time.pre-java8
  java-time.clock
  java-time.joda
  java-time.format
  java-time.interval
  java-time.adjuster
  java-time.seqs
  java-time.sugar
  java-time.convert
  java-time.chrono
  java-time.local
  java-time.single-field
  java-time.zone
  java-time.amount
  java-time.temporal
  java-time.properties
  java-time.core
  java-time.util
  java-time.potemkin.namespaces),
 metabase.mbql.schema (schema.core metabase.mbql.schema.macros metabase.mbql.schema.helpers clojure.set clojure.core),
 metabase.query-processor.middleware.add-default-temporal-unit (metabase.query-processor.store metabase.mbql.util),
 metabase.models.database
 (toucan.models
  toucan.db
  metabase.util.i18n
  metabase.util
  metabase.plugins.classloader
  metabase.models.permissions-group
  metabase.models.permissions
  metabase.models.interface
  metabase.driver.util
  metabase.driver
  metabase.db.util
  metabase.api.common
  medley.core
  clojure.tools.logging
  cheshire.generate),
 java-time.chrono (java-time.core),
 metabase.driver.mysql-test
 (toucan.util.test
  toucan.hydrate
  toucan.db
  metabase.util.honeysql-extensions
  metabase.util.date-2
  metabase.util
  metabase.test.data.interface
  metabase.test
  metabase.sync.analyze.fingerprint
  metabase.sync
  metabase.query-processor-test.string-extracts-test
  metabase.query-processor
  metabase.models.table
  metabase.models.field
  metabase.models.database
  metabase.driver.sql-jdbc.connection
  metabase.driver.mysql
  metabase.driver
  metabase.db.metadata-queries
  java-time
  honeysql.core
  clojure.test
  clojure.string
  clojure.java.jdbc),
 metabase.models.setting.multi-setting (metabase.util.i18n metabase.models.setting),
 metabase.integrations.ldap-test
 (toucan.db
  metabase.test.integrations.ldap
  metabase.test
  metabase.public-settings.metastore
  metabase.models.user
  metabase.integrations.ldap.default-implementation
  metabase.integrations.ldap
  clojure.test),
 metabase.automagic-dashboards.filters
 (toucan.db
  schema.core
  metabase.util.date-2
  metabase.util
  metabase.models.field
  metabase.mbql.util
  metabase.mbql.schema
  metabase.mbql.normalize),
 metabase.db.spec-test (metabase.db.spec metabase.config clojure.test),
 metabase.metabot.command
 (toucan.db
  metabase.util.urls
  metabase.util.i18n
  metabase.util
  metabase.pulse
  metabase.models.permissions-group
  metabase.models.permissions
  metabase.models.interface
  metabase.models.collection
  metabase.models.card
  metabase.metabot.slack
  metabase.api.common
  clojure.tools.logging
  clojure.string
  clojure.java.io
  clojure.edn),
 buddy.core.crypto (buddy.core.codecs buddy.core.nonce buddy.core.mac buddy.core.padding buddy.core.bytes),
 java-time.zone
 (java-time.defconversion
  java-time.properties
  java-time.clock
  java-time.format
  java-time.amount
  java-time.util
  java-time.temporal
  java-time.core),
 metabase.driver.util
 (toucan.db
  metabase.util.i18n
  metabase.util
  metabase.driver
  metabase.config
  clojure.tools.logging
  clojure.core.memoize),
 toucan.util.test (toucan.db potemkin.types),
 metabase.driver.sql.parameters.substitution
 (schema.core
  metabase.util.schema
  metabase.util.i18n
  metabase.util.date-2
  metabase.query-processor.timezone
  metabase.query-processor.middleware.wrap-value-literals
  metabase.query-processor.error-type
  metabase.mbql.util
  metabase.driver.sql.query-processor
  metabase.driver.common.parameters.operators
  metabase.driver.common.parameters.dates
  metabase.driver.common.parameters
  metabase.driver
  honeysql.core
  clojure.string),
 taoensso.nippy.crypto (taoensso.encore),
 metabase.models.params.chain-filter-test
 (toucan.db metabase.test metabase.models.params.chain-filter metabase.models clojure.test),
 metabase.server.middleware.auth (metabase.server.middleware.util metabase.models.setting),
 metabase.events.revision-test
 (toucan.db metabase.util metabase.test metabase.models metabase.events.revision clojure.test),
 kixi.stats.digest (kixi.stats.distribution),
 metabase.models.field-test (toucan.db metabase.util metabase.test metabase.models.field clojure.test),
 metabase.api.notify-test
 (metabase.util
  metabase.test.fixtures
  metabase.test
  metabase.server.middleware.util
  metabase.models.database
  metabase.http-client
  metabase.api.notify
  clojure.test
  clj-http.client),
 manifold.stream.graph (clojure.tools.logging manifold.executor manifold.stream.core manifold.utils manifold.deferred),
 metabase.api.dataset
 (compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  schema.core
  metabase.util.schema
  metabase.util.i18n
  metabase.util
  metabase.shared.models.visualization-settings
  metabase.query-processor.util
  metabase.query-processor.streaming
  metabase.query-processor.pivot
  metabase.query-processor.middleware.permissions
  metabase.query-processor.middleware.constraints
  metabase.query-processor
  metabase.models.query
  metabase.models.database
  metabase.models.card
  metabase.mbql.schema
  metabase.api.common
  compojure.core
  clojure.tools.logging
  clojure.string
  cheshire.core),
 clojure.repl (clojure.spec.alpha),
 honeysql.types #{},
 metabase.driver.common.parameters
 (schema.core
  pretty.core
  potemkin.types
  metabase.util.schema
  metabase.util.i18n
  metabase.query-processor.error-type
  metabase.models.setting),
 metabase.pulse-test
 (toucan.db
  schema.core
  metabase.util
  metabase.test
  metabase.query-processor.middleware.constraints
  metabase.pulse.test-util
  metabase.pulse.render.body
  metabase.pulse.render
  metabase.pulse
  metabase.models.pulse
  metabase.models.permissions-group
  metabase.models.permissions
  metabase.models
  medley.core
  clojure.test
  clojure.string
  clojure.java.io),
 metabase.driver.sql-jdbc.execute
 (potemkin
  metabase.util.i18n
  metabase.util
  metabase.query-processor.util
  metabase.query-processor.timezone
  metabase.query-processor.store
  metabase.query-processor.reducible
  metabase.query-processor.interface
  metabase.query-processor.error-type
  metabase.query-processor.context
  metabase.mbql.util
  metabase.driver.sql-jdbc.sync.interface
  metabase.driver.sql-jdbc.execute.old-impl
  metabase.driver.sql-jdbc.execute.diagnostic
  metabase.driver.sql-jdbc.connection
  metabase.driver
  java-time
  clojure.tools.logging
  clojure.string
  clojure.core.async),
 manifold.stream.queue (manifold.utils manifold.stream.core manifold.deferred manifold.stream.graph),
 buddy.core.kdf (buddy.core.codecs buddy.core.hash),
 flatland.ordered.set (clojure.string flatland.ordered.common),
 metabase.pulse.render.table-test
 (metabase.test.util
  metabase.pulse.render.test-util
  metabase.pulse.render.table
  metabase.pulse.render.color
  clojure.test),
 ring.core.protocols (ring.util.response clojure.java.io),
 clojure.tools.analyzer.passes.add-binding-atom (clojure.tools.analyzer.passes.uniquify clojure.tools.analyzer.ast),
 redux.utils #{},
 metabase.util.i18n
 (schema.core
  potemkin.types
  potemkin
  metabase.util.i18n.impl
  clojure.walk
  clojure.tools.logging
  clojure.string
  cheshire.generate),
 metabase.query-processor-test.share-test
 (metabase.test
  metabase.query-processor-test
  metabase.models.segment
  metabase.models.metric
  metabase.driver
  clojure.test),
 io.aviso.writer #{},
 metabase.driver.sql.query-processor.empty-string-is-null (metabase.driver.sql.query-processor metabase.driver),
 stencil.loader (clojure.core.cache stencil.utils quoin.text stencil.ast stencil.parser clojure.java.io),
 instaparse.viz #{},
 metabase.query-processor.middleware.cache-backend.interface (potemkin.types buddy.core.codecs),
 clojure.string #{},
 metabase.driver.sql
 (schema.core
  potemkin
  metabase.util.schema
  metabase.driver.sql.util.unprepare
  metabase.driver.sql.query-processor
  metabase.driver.sql.parameters.substitution
  metabase.driver.sql.parameters.substitute
  metabase.driver.common.parameters.values
  metabase.driver.common.parameters.parse
  metabase.driver),
 taoensso.encore (taoensso.truss clojure.tools.reader.edn clojure.walk clojure.java.io clojure.set clojure.string),
 metabase.query-processor.middleware.resolve-joined-fields-test
 (schema.core
  metabase.util
  metabase.test
  metabase.query-processor.middleware.resolve-joined-fields
  metabase.query-processor
  clojure.test),
 clojure.core.rrb-vector.transients (clojure.core.rrb-vector.nodes clojure.core.rrb-vector.parameters),
 metabase.models.dashboard-card-test
 (toucan.db
  metabase.util
  metabase.test
  metabase.models.dashboard-card-series
  metabase.models.dashboard-card
  metabase.models.dashboard
  metabase.models.card-test
  metabase.models.card
  clojure.test),
 clojure.core.rrb-vector.nodes (clojure.core.rrb-vector.parameters),
 clj-tuple #{},
 metabase.server.middleware.log
 (toucan.db
  metabase.util.i18n
  metabase.util
  metabase.server.request.util
  metabase.server
  metabase.driver.sql-jdbc.execute.diagnostic
  metabase.async.util
  metabase.async.streaming-response.thread-pool
  metabase.async.streaming-response
  clojure.tools.logging
  clojure.string
  clojure.core.async),
 metabase.events.last-login (toucan.db metabase.models.user metabase.events clojure.tools.logging clojure.core.async),
 metabase.query-processor.middleware.resolve-referenced
 (weavejester.dependency
  toucan.db
  schema.core
  metabase.util.i18n
  metabase.query-processor.middleware.resolve-source-table
  metabase.query-processor.middleware.resolve-fields
  metabase.models.card),
 clojure.data (clojure.set),
 clojure.tools.logging.impl #{},
 metabase.api.common.internal-test (metabase.util metabase.test metabase.api.common.internal medley.core clojure.test),
 metabase.domain-entities.specs
 (schema.core schema.coerce metabase.util.yaml metabase.mbql.util metabase.mbql.normalize medley.core),
 metabase.sync
 (schema.core
  metabase.sync.util
  metabase.sync.sync-metadata
  metabase.sync.interface
  metabase.sync.field-values
  metabase.sync.analyze),
 clojure.walk #{},
 java-time.sugar (java-time.util java-time.core),
 metabase.query-processor.middleware.store (metabase.query-processor.store),
 metabase.pulse.render.style (metabase.public-settings clojure.string),
 metabase.mbql.util.match-test (metabase.mbql.util.match clojure.test),
 metabase.automagic-dashboards.rules
 (schema.spec.core
  schema.core
  schema.coerce
  metabase.util.yaml
  metabase.util.schema
  metabase.util.i18n
  metabase.util.files
  metabase.util
  metabase.query-processor.util
  metabase.automagic-dashboards.populate
  clojure.string),
 clojure.tools.analyzer.passes.source-info (clojure.tools.analyzer.ast clojure.tools.analyzer.utils),
 metabase.task.follow-up-emails
 (toucan.db
  schema.core
  metabase.util.i18n
  metabase.util.date-2
  metabase.task
  metabase.public-settings
  metabase.models.view-log
  metabase.models.user
  metabase.models.setting
  metabase.models.activity
  metabase.email.messages
  metabase.email
  java-time
  clojurewerkz.quartzite.triggers
  clojurewerkz.quartzite.schedule.cron
  clojurewerkz.quartzite.jobs
  clojure.tools.logging),
 metabase.api.common
 (toucan.db
  schema.core
  metabase.util.schema
  metabase.util.i18n
  metabase.util
  metabase.public-settings
  metabase.models.interface
  metabase.api.common.internal
  medley.core
  honeysql.types
  compojure.core
  clojure.tools.logging
  clojure.string),
 clj-http.fake (clojure.string clojure.math.combinatorics robert.hooke ring.util.codec clj-http.core),
 metabase.sync.sync-metadata.fields-test
 (toucan.hydrate
  toucan.db
  metabase.util
  metabase.test.data.one-off-dbs
  metabase.test
  metabase.sync.util-test
  metabase.sync
  metabase.query-processor
  metabase.models
  medley.core
  clojure.test
  clojure.java.jdbc),
 metabase.query-processor.middleware.auto-parse-filter-values-test
 (metabase.test metabase.query-processor.middleware.auto-parse-filter-values clojure.test),
 metabase.task.task-history-cleanup-test
 (toucan.db
  metabase.util
  metabase.test
  metabase.task.task-history-cleanup
  metabase.models.task-history-test
  metabase.models.task-history
  java-time
  clojure.test),
 metabase.query-processor.middleware.cumulative-aggregations (schema.core metabase.mbql.util metabase.mbql.schema),
 metabase.models.setting.multi-setting-test
 (metabase.test.fixtures metabase.models.setting.multi-setting metabase.models.setting clojure.test),
 io.aviso.exception (io.aviso.writer io.aviso.columns clojure.string clojure.set clojure.pprint io.aviso.ansi),
 metabase.models.segment
 (toucan.models
  toucan.hydrate
  toucan.db
  schema.core
  metabase.util.schema
  metabase.util.i18n
  metabase.util
  metabase.models.revision
  metabase.models.interface
  medley.core),
 metabase.email.messages-test
 (metabase.test.util metabase.email.messages metabase.email-test clojure.test clojure.string),
 metabase.sync.sync-metadata.fields.sync-instances-test
 (toucan.util.test
  toucan.db
  metabase.util
  metabase.test.mock.toucanery
  metabase.sync.sync-metadata.fields
  metabase.sync.sync-metadata
  metabase.models.table
  metabase.models.field
  metabase.models.database
  clojure.test),
 java-time.util (clojure.string),
 postal.message (postal.support postal.date clojure.java.io clojure.set),
 metabase.models.permissions.delete-sandboxes (pretty.core potemkin metabase.util metabase.plugins.classloader),
 aleph.http.server
 (manifold.stream
  manifold.deferred
  clojure.string
  clojure.tools.logging
  byte-streams
  aleph.flow
  aleph.netty
  aleph.http.core),
 metabase.test.fixtures (metabase.test.initialize),
 metabase.api.util-test (metabase.test clojure.test),
 clojure.tools.analyzer.passes.jvm.annotate-tag
 (clojure.tools.analyzer.passes.jvm.constant-lifter clojure.tools.analyzer.jvm.utils),
 metabase.sync.analyze.classifiers.category-test (metabase.sync.analyze.classifiers.category clojure.test),
 puget.color #{},
 schema.utils (clojure.string),
 metabase.util.i18n.impl-test (metabase.util.i18n.impl metabase.test clojure.test),
 clj-ldap.client (clojure.pprint clojure.string),
 metabase.shared.util.log (net.cgrand.macrovich),
 clojure.tools.namespace.track (clojure.tools.namespace.dependency clojure.set),
 metabase.server.middleware.offset-paging-test
 (schema.core
  ring.util.response
  ring.mock.request
  ring.middleware.params
  ring.middleware.keyword-params
  metabase.server.middleware.offset-paging
  clojure.test),
 buddy.core.keys.jwk.proto (buddy.core.codecs buddy.core.codecs.base64),
 metabase.cmd.load-from-h2-test
 (toucan.db
  metabase.test.data.interface
  metabase.test
  metabase.models
  metabase.driver.sql-jdbc.connection
  metabase.driver
  metabase.db.connection
  metabase.cmd.test-util
  metabase.cmd.load-from-h2
  clojure.test),
 metabase.server.middleware.misc
 (metabase.util.i18n
  metabase.server.request.util
  metabase.public-settings
  metabase.db
  metabase.async.streaming-response
  clojure.tools.logging
  clojure.string),
 yaml.core (yaml.writer yaml.reader clojure.java.io),
 metabase.query-processor.middleware.resolve-source-table-test
 (metabase.test
  metabase.query-processor.store
  metabase.query-processor.middleware.resolve-source-table
  metabase.models.table
  metabase.models.database
  clojure.test),
 clojure.core.async.impl.mutex (clojure.core.async.impl.protocols),
 metabase.query-processor.middleware.visualization-settings
 (toucan.db metabase.shared.models.visualization-settings metabase.query-processor.store metabase.models.card),
 java-time.single-field
 (java-time.defconversion
  java-time.clock
  java-time.util
  java-time.core
  java-time.format
  java-time.zone
  clojure.string),
 metabase.related
 (toucan.db
  schema.core
  metabase.query-processor.util
  metabase.models.table
  metabase.models.segment
  metabase.models.query
  metabase.models.metric
  metabase.models.interface
  metabase.models.field
  metabase.models.dashboard-card
  metabase.models.dashboard
  metabase.models.collection
  metabase.models.card
  metabase.mbql.normalize
  metabase.api.common
  medley.core
  clojure.set),
 metabase.models.permissions-test
 (toucan.db
  metabase.util
  metabase.test.fixtures
  metabase.test
  metabase.models.table
  metabase.models.permissions-group
  metabase.models.permissions
  metabase.models.database
  metabase.models.collection
  clojure.test),
 metabase.models.permissions.parse (instaparse.core clojure.walk clojure.core.match),
 metabase.models.native-query-snippet-test (toucan.db metabase.test metabase.models clojure.test),
 metabase.driver.sql.query-processor-test
 (schema.core
  pretty.core
  metabase.util.honeysql-extensions
  metabase.driver.sql
  metabase.util
  metabase.test
  metabase.query-processor.interface
  metabase.query-processor
  metabase.models.setting
  metabase.models.field
  metabase.driver.sql.query-processor
  metabase.driver.sql-jdbc.test-util
  metabase.driver
  honeysql.core
  clojure.test
  clojure.string),
 metabase.events-test (metabase.events clojure.test clojure.core.async),
 slingshot.slingshot (slingshot.support),
 arrangement.core #{},
 manifold.stream.deferred (manifold.stream.core manifold.deferred),
 metabase.integrations.ldap.default-implementation
 (toucan.db
  schema.core
  pretty.core
  metabase.util.schema
  metabase.util.i18n
  metabase.util
  metabase.models.user
  metabase.integrations.ldap.interface
  metabase.integrations.common
  clojure.string
  clj-ldap.client),
 metabase.api.query-description-test
 (toucan.util.test
  metabase.util.i18n
  metabase.test.fixtures
  metabase.test
  metabase.models.table
  metabase.models.segment
  metabase.models.metric
  metabase.api.query-description
  clojure.test),
 metabase.cmd.load-and-dump-test
 (metabase.util.i18n.impl
  metabase.test.data.interface
  metabase.test
  metabase.models.setting
  metabase.driver
  metabase.db.spec
  metabase.db.connection
  metabase.cmd.test-util
  metabase.cmd.load-from-h2
  metabase.cmd.dump-to-h2
  metabase.cmd.copy.h2
  metabase.cmd.compare-h2-dbs
  clojure.test
  clojure.java.io),
 ring.util.parsing #{},
 metabase.driver.sql.parameters.substitution-test
 (metabase.test
  metabase.models
  metabase.driver.sql.parameters.substitution
  metabase.driver.common.parameters
  clojure.test),
 metabase.query-processor.middleware.format-rows-test
 (metabase.test
  metabase.query-processor.middleware.format-rows
  metabase.query-processor-test
  metabase.driver
  java-time
  clojure.test),
 metabase.pulse.render.style-test (metabase.pulse.render.style clojure.test),
 environ.core (clojure.string clojure.java.io clojure.edn),
 clojure.tools.analyzer.passes (clojure.tools.analyzer.utils clojure.tools.analyzer.ast),
 metabase.query-processor.middleware.parameters.mbql-test
 (metabase.test
  metabase.query-processor.middleware.parameters.mbql
  metabase.query-processor.error-type
  metabase.query-processor
  metabase.mbql.normalize
  metabase.driver.common.parameters
  metabase.driver
  clojure.test),
 metabase.api.metric-test
 (toucan.hydrate
  toucan.db
  metabase.util
  metabase.test.data
  metabase.test
  metabase.server.middleware.util
  metabase.models.table
  metabase.models.revision
  metabase.models.permissions-group
  metabase.models.permissions
  metabase.models.metric
  metabase.models.database
  metabase.http-client
  clojure.test),
 clojure.tools.reader.default-data-readers #{},
 metabase.integrations.common-test
 (toucan.util.test
  toucan.db
  metabase.util
  metabase.test.util.log
  metabase.test.fixtures
  metabase.test
  metabase.models.user
  metabase.models.permissions-group-membership
  metabase.models.permissions-group
  metabase.integrations.common
  clojure.test),
 dk.ative.docjure.spreadsheet #{},
 metabase.test.initialize
 (metabase.util metabase.test-runner.init metabase.plugins.classloader metabase.config colorize.core clojure.string),
 metabase.query-processor.middleware.reconcile-breakout-and-order-by-bucketing-test
 (metabase.test metabase.query-processor.middleware.reconcile-breakout-and-order-by-bucketing clojure.test),
 metabase.query-processor.pivot
 (metabase.util.i18n
  metabase.util
  metabase.query-processor.store
  metabase.query-processor.middleware.permissions
  metabase.query-processor.error-type
  metabase.query-processor.context.default
  metabase.query-processor.context
  metabase.query-processor
  metabase.mbql.normalize
  clojure.tools.logging
  clojure.core.async),
 clojure.core.match.protocols #{},
 clj-http.headers (potemkin clojure.string),
 metabase.cmd.reset-password-test
 (metabase.util metabase.test metabase.models.user metabase.cmd.reset-password clojure.test),
 metabase.query-processor.streaming.interface (potemkin.types),
 metabase.query-processor.reducible
 (metabase.util
  metabase.query-processor.context.default
  metabase.query-processor.context
  metabase.async.util
  clojure.tools.logging
  clojure.core.async),
 metabase.models.moderation-review
 (toucan.models
  toucan.db
  schema.core
  metabase.util.schema
  metabase.util
  metabase.moderation
  metabase.models.permissions
  metabase.models.interface),
 metabase.sync.analyze.fingerprint.fingerprinters
 (redux.core
  metabase.util.i18n
  metabase.util.date-2
  metabase.util
  metabase.sync.util
  metabase.sync.analyze.classifiers.name
  medley.core
  kixi.stats.math
  kixi.stats.core
  java-time
  bigml.histogram.core),
 clj-http.util (clojure.walk clojure.string),
 metabase.api.activity-test
 (toucan.db
  metabase.util
  metabase.test.fixtures
  metabase.test
  metabase.models.view-log
  metabase.models.interface
  metabase.models.dashboard
  metabase.models.card
  metabase.models.activity
  metabase.db
  metabase.api.activity
  clojure.test),
 metabase.automagic-dashboards.comparison
 (metabase.util.i18n
  metabase.util
  metabase.related
  metabase.query-processor.util
  metabase.models.table
  metabase.mbql.normalize
  metabase.automagic-dashboards.populate
  metabase.automagic-dashboards.filters
  metabase.automagic-dashboards.core
  metabase.api.common
  medley.core),
 metabase.db.liquibase (metabase.util.i18n metabase.util clojure.tools.logging clojure.string clojure.java.jdbc),
 metabase.sync.analyze.fingerprint.insights-test (metabase.sync.analyze.fingerprint.insights clojure.test),
 metabase.query-processor.middleware.desugar
 (schema.core metabase.mbql.util metabase.mbql.schema metabase.mbql.predicates medley.core),
 metabase.query-processor.error-type #{},
 metabase.models.permissions-group-membership-test
 (toucan.db
  metabase.util
  metabase.test.fixtures
  metabase.test
  metabase.models.user
  metabase.models.permissions-group-membership
  metabase.models.permissions-group
  clojure.test),
 metabase.util.password-test (metabase.util.password metabase.test.fixtures metabase.test clojure.test),
 instaparse.repeat
 (instaparse.failure
  instaparse.reduction
  instaparse.viz
  instaparse.auto-flatten-seq
  instaparse.combinators-source
  instaparse.gll),
 toucan.hydrate (toucan.models toucan.db),
 metabase.api.revision-test
 (toucan.util.test
  toucan.db
  metabase.util
  metabase.test.fixtures
  metabase.test.data.users
  metabase.test
  metabase.models.revision
  metabase.models.dashboard-card
  metabase.models.dashboard
  metabase.models.collection
  metabase.models.card
  clojure.test),
 metabase.sync.analyze.classifiers.name-test
 (metabase.test metabase.sync.analyze.classifiers.name metabase.models.table metabase.models.field clojure.test),
 cheshire.parse #{},
 progrock.core (clojure.string clojure.core),
 metabase.setup (toucan.db metabase.models.setting environ.core),
 metabase.search.config
 (metabase.util.i18n metabase.models.setting metabase.models honeysql.core clojure.string cheshire.core),
 metabase.models.humanization
 (toucan.db metabase.util.i18n metabase.models.setting clojure.tools.logging clojure.string),
 metabase.query-processor.middleware.wrap-value-literals
 (metabase.util.date-2
  metabase.types
  metabase.query-processor.timezone
  metabase.query-processor.store
  metabase.models.field
  metabase.mbql.util
  metabase.mbql.schema),
 metabase.api.permissions
 (compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  compojure.core
  toucan.hydrate
  toucan.db
  metabase.util.schema
  metabase.util
  metabase.server.middleware.offset-paging
  metabase.models.permissions-group-membership
  metabase.models.permissions-group
  metabase.models.permissions
  metabase.metabot
  metabase.api.permission-graph
  metabase.api.common
  honeysql.helpers
  compojure.core),
 metabase.sync.util-test
 (toucan.util.test
  toucan.db
  metabase.test.util
  metabase.test
  metabase.sync.util
  metabase.sync
  metabase.models.task-history
  metabase.models.database
  metabase.driver
  java-time
  clojure.test
  clojure.string),
 metabase.models.query-cache (toucan.models metabase.util),
 metabase.query-processor.middleware.fetch-source-query
 (weavejester.dependency
  toucan.db
  schema.core
  metabase.util.schema
  metabase.util.i18n
  metabase.util
  metabase.query-processor.middleware.permissions
  metabase.query-processor.interface
  metabase.models.card
  metabase.mbql.util
  metabase.mbql.schema
  metabase.mbql.normalize
  medley.core
  clojure.tools.logging
  clojure.string
  clojure.set),
 metabase.util.date-2.parse.builder (metabase.util.date-2.common),
 clj-http.core (clojure.pprint clj-http.util clj-http.multipart clj-http.headers clj-http.conn-mgr),
 medley.core #{},
 metabase.sync.sync-metadata.sync-timezone
 (toucan.db schema.core metabase.sync.interface metabase.models.database metabase.driver.util metabase.driver),
 metabase.api.testing
 (compojure.core
  compojure.core
  toucan.db
  metabase.models.setting.cache
  metabase.api.common
  compojure.core
  clojure.tools.logging
  clojure.string
  clojure.java.jdbc),
 clojure.math.numeric-tower #{},
 metabase.db.spec (metabase.config clojure.string),
 metabase.events
 (metabase.util.i18n
  metabase.util
  metabase.plugins.classloader
  clojure.tools.logging
  clojure.string
  clojure.core.async),
 metabase.api.geojson
 (compojure.core
  compojure.core
  schema.core
  ring.util.response
  ring.util.codec
  metabase.util.schema
  metabase.util.i18n
  metabase.models.setting
  metabase.api.common
  compojure.core
  clojure.java.io),
 dynapath.defaults (dynapath.dynamic-classpath),
 metabase.util.embed
 (ring.util.codec
  metabase.util.i18n
  metabase.util
  metabase.public-settings
  metabase.models.setting
  hiccup.core
  clojure.string
  cheshire.core
  buddy.sign.jwt
  buddy.core.codecs),
 metabase.query-processor.middleware.binning
 (schema.core
  metabase.util.schema
  metabase.util.i18n
  metabase.util
  metabase.query-processor.store
  metabase.query-processor.error-type
  metabase.public-settings
  metabase.mbql.util
  metabase.mbql.schema
  clojure.math.numeric-tower),
 ring.middleware.keyword-params #{},
 ring.util.response (ring.util.time ring.util.parsing ring.util.io clojure.string clojure.java.io),
 taoensso.truss.impl (clojure.set),
 metabase.query-processor.reducible-test
 (metabase.util
  metabase.test
  metabase.query-processor.reducible
  metabase.query-processor.context.default
  metabase.query-processor
  clojure.test
  clojure.string
  clojure.java.io
  clojure.core.async),
 metabase.driver.common.parameters.dates
 (schema.core
  metabase.util.schema
  metabase.util.i18n
  metabase.util.date-2
  metabase.query-processor.error-type
  metabase.models.params
  metabase.mbql.util
  metabase.mbql.schema
  medley.core
  java-time),
 scout.core #{},
 metabase.driver.postgres
 (pretty.core
  metabase.util.ssh
  metabase.util.honeysql-extensions
  metabase.util.date-2
  metabase.util
  metabase.models
  metabase.driver.sql.util.unprepare
  metabase.driver.sql.query-processor
  metabase.driver.sql-jdbc.sync
  metabase.driver.sql-jdbc.execute
  metabase.driver.sql-jdbc.connection
  metabase.driver.sql-jdbc.common
  metabase.driver.sql-jdbc
  metabase.driver.common
  metabase.driver
  metabase.db.spec
  java-time
  honeysql.format
  honeysql.core
  clojure.tools.logging
  clojure.string
  clojure.set
  clojure.java.jdbc),
 metabase.automagic-dashboards.rules-test (metabase.automagic-dashboards.rules clojure.test),
 metabase.util.encryption
 (ring.util.codec
  metabase.util.i18n
  metabase.util
  environ.core
  clojure.tools.logging
  clojure.string
  buddy.core.nonce
  buddy.core.kdf
  buddy.core.crypto
  buddy.core.codecs),
 metabase.server.protocols (ring.util.servlet potemkin.types),
 metabase.models.dashboard
 (toucan.models
  toucan.hydrate
  toucan.db
  schema.core
  metabase.util.schema
  metabase.util.i18n
  metabase.util
  metabase.query-processor.async
  metabase.public-settings
  metabase.moderation
  metabase.models.revision.diff
  metabase.models.revision
  metabase.models.pulse-card
  metabase.models.pulse
  metabase.models.permissions
  metabase.models.params
  metabase.models.interface
  metabase.models.field-values
  metabase.models.dashboard-card
  metabase.models.collection
  metabase.models.card
  metabase.events
  metabase.automagic-dashboards.populate
  clojure.tools.logging
  clojure.string
  clojure.set
  clojure.data
  clojure.core.async),
 metabase.query-processor-test.string-extracts-test
 (metabase.test.data metabase.test metabase.query-processor-test clojure.test),
 metabase.types (metabase.types.coercion-hierarchies clojure.set),
 metabase.query-processor.streaming
 (metabase.util
  metabase.shared.models.visualization-settings
  metabase.query-processor.streaming.xlsx
  metabase.query-processor.streaming.json
  metabase.query-processor.streaming.interface
  metabase.query-processor.streaming.csv
  metabase.query-processor.context
  metabase.mbql.util
  metabase.async.streaming-response
  clojure.core.async),
 clojure.core.async.impl.timers (clojure.core.async.impl.channels clojure.core.async.impl.protocols),
 clojure.tools.analyzer.passes.jvm.validate-recur (clojure.tools.analyzer.utils clojure.tools.analyzer.ast),
 clojure.template (clojure.walk),
 metabase.cmd.compare-h2-dbs
 (metabase.util metabase.db.jdbc-protocols clojure.tools.logging clojure.string clojure.java.jdbc clojure.data),
 metabase.sync.sync-metadata.sync-database-type-test
 (toucan.db metabase.util metabase.test metabase.sync.util-test metabase.sync metabase.models clojure.test)}
